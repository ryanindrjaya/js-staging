{"ast":null,"code":"import { all, takeEvery, put } from 'redux-saga/effects';\nimport actions from './actions';\nimport fake from './fake';\nimport fakeinitdata from './config';\nexport function* changedCard() {\n  yield takeEvery(actions.CHANGE_CARDS, function* () {});\n}\nexport function* initData() {\n  let fakeData = fakeinitdata;\n\n  if (fakeinitdata.productQuantity.length === 0) {\n    fakeData = fake;\n  }\n\n  yield put({\n    type: actions.INIT_DATA,\n    payload: fakeData\n  });\n}\nexport function* updateData({\n  products,\n  productQuantity\n}) {\n  localStorage.setItem('cartProductQuantity', JSON.stringify(productQuantity));\n  localStorage.setItem('cartProducts', JSON.stringify(products));\n  yield put({\n    type: actions.UPDATE_DATA,\n    products,\n    productQuantity\n  });\n}\nexport default function* Saga() {\n  yield all([takeEvery(actions.INIT_DATA_SAGA, initData), takeEvery(actions.UPDATE_DATA_SAGA, updateData)]);\n}","map":null,"metadata":{},"sourceType":"module"}