{"ast":null,"code":"import _asyncToGenerator from \"/Users/yudiananta/Development/NextJS/ERP Dev/JS Deploy/JS-Deploy/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _s = $RefreshSig$();\n\nimport _regeneratorRuntime from \"/Users/yudiananta/Development/NextJS/ERP Dev/JS Deploy/JS-Deploy/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport React, { useEffect } from \"react\";\nimport { useRouter } from \"next/router\";\nimport nookies from \"nookies\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Middleware(_ref) {\n  _s();\n\n  var children = _ref.children;\n  var cookies = nookies.get(null);\n  var token = cookies.token;\n  var router = useRouter();\n  useEffect( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n    var firstPath, isValid;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            firstPath = router.pathname.split(\"/\")[1];\n            _context.next = 3;\n            return istokenValid(token);\n\n          case 3:\n            isValid = _context.sent;\n\n            if (!isValid) {\n              router.push(\"/\");\n            }\n\n            if (firstPath === \"dashboard\" && !token) {\n              router.push(\"/\");\n            } else {\n              if (token && firstPath === \"\") {\n                router.push(\"/dashboard\");\n              }\n            }\n\n          case 6:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  })), []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: children\n  }, void 0, false);\n}\n\n_s(Middleware, \"vQduR7x+OPXj6PSmJyFnf+hU7bg=\", false, function () {\n  return [useRouter];\n});\n\n_c = Middleware;\n\nvar istokenValid = /*#__PURE__*/function () {\n  var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(token) {\n    var endpoint, options, req, res;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            endpoint = process.env.NEXT_PUBLIC_URL + \"/products\";\n            options = {\n              method: \"GET\",\n              headers: {\n                \"Content-Type\": \"application/json\",\n                Authorization: \"Bearer \" + token\n              }\n            };\n            _context2.next = 4;\n            return fetch(endpoint, options);\n\n          case 4:\n            req = _context2.sent;\n            _context2.next = 7;\n            return req.json();\n\n          case 7:\n            res = _context2.sent;\n\n            if (!(req.status === 200)) {\n              _context2.next = 12;\n              break;\n            }\n\n            return _context2.abrupt(\"return\", true);\n\n          case 12:\n            return _context2.abrupt(\"return\", false);\n\n          case 13:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n\n  return function istokenValid(_x) {\n    return _ref3.apply(this, arguments);\n  };\n}();\n\nexport default Middleware;\n\nvar _c;\n\n$RefreshReg$(_c, \"Middleware\");","map":{"version":3,"sources":["/Users/yudiananta/Development/NextJS/ERP Dev/JS Deploy/JS-Deploy/components/Middleware.js"],"names":["React","useEffect","useRouter","nookies","Middleware","children","cookies","get","token","router","firstPath","pathname","split","istokenValid","isValid","push","endpoint","process","env","NEXT_PUBLIC_URL","options","method","headers","Authorization","fetch","req","json","res","status"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,OAAOC,OAAP,MAAoB,SAApB;;;;AAEA,SAASC,UAAT,OAAkC;AAAA;;AAAA,MAAZC,QAAY,QAAZA,QAAY;AAChC,MAAMC,OAAO,GAAGH,OAAO,CAACI,GAAR,CAAY,IAAZ,CAAhB;AACA,MAAMC,KAAK,GAAGF,OAAO,CAACE,KAAtB;AACA,MAAMC,MAAM,GAAGP,SAAS,EAAxB;AAEAD,EAAAA,SAAS,wEAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AACFS,YAAAA,SADE,GACUD,MAAM,CAACE,QAAP,CAAgBC,KAAhB,CAAsB,GAAtB,EAA2B,CAA3B,CADV;AAAA;AAAA,mBAGYC,YAAY,CAACL,KAAD,CAHxB;;AAAA;AAGJM,YAAAA,OAHI;;AAKR,gBAAI,CAACA,OAAL,EAAc;AACZL,cAAAA,MAAM,CAACM,IAAP,CAAY,GAAZ;AACD;;AAED,gBAAIL,SAAS,KAAK,WAAd,IAA6B,CAACF,KAAlC,EAAyC;AACvCC,cAAAA,MAAM,CAACM,IAAP,CAAY,GAAZ;AACD,aAFD,MAEO;AACL,kBAAIP,KAAK,IAAIE,SAAS,KAAK,EAA3B,EAA+B;AAC7BD,gBAAAA,MAAM,CAACM,IAAP,CAAY,YAAZ;AACD;AACF;;AAfO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAD,IAgBN,EAhBM,CAAT;AAkBA,sBAAO;AAAA,cAAGV;AAAH,mBAAP;AACD;;GAxBQD,U;UAGQF,S;;;KAHRE,U;;AA0BT,IAAMS,YAAY;AAAA,uEAAG,kBAAOL,KAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AACbQ,YAAAA,QADa,GACFC,OAAO,CAACC,GAAR,CAAYC,eAAZ,cADE;AAEbC,YAAAA,OAFa,GAEH;AACdC,cAAAA,MAAM,EAAE,KADM;AAEdC,cAAAA,OAAO,EAAE;AACP,gCAAgB,kBADT;AAEPC,gBAAAA,aAAa,EAAE,YAAYf;AAFpB;AAFK,aAFG;AAAA;AAAA,mBAUDgB,KAAK,CAACR,QAAD,EAAWI,OAAX,CAVJ;;AAAA;AAUbK,YAAAA,GAVa;AAAA;AAAA,mBAWDA,GAAG,CAACC,IAAJ,EAXC;;AAAA;AAWbC,YAAAA,GAXa;;AAAA,kBAafF,GAAG,CAACG,MAAJ,KAAe,GAbA;AAAA;AAAA;AAAA;;AAAA,8CAcV,IAdU;;AAAA;AAAA,8CAgBV,KAhBU;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAZf,YAAY;AAAA;AAAA;AAAA,GAAlB;;AAoBA,eAAeT,UAAf","sourcesContent":["import React, { useEffect } from \"react\";\nimport { useRouter } from \"next/router\";\nimport nookies from \"nookies\";\n\nfunction Middleware({ children }) {\n  const cookies = nookies.get(null);\n  const token = cookies.token;\n  const router = useRouter();\n\n  useEffect(async () => {\n    const firstPath = router.pathname.split(\"/\")[1];\n\n    let isValid = await istokenValid(token);\n\n    if (!isValid) {\n      router.push(\"/\");\n    }\n\n    if (firstPath === \"dashboard\" && !token) {\n      router.push(\"/\");\n    } else {\n      if (token && firstPath === \"\") {\n        router.push(\"/dashboard\");\n      }\n    }\n  }, []);\n\n  return <>{children}</>;\n}\n\nconst istokenValid = async (token) => {\n  const endpoint = process.env.NEXT_PUBLIC_URL + `/products`;\n  const options = {\n    method: \"GET\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: \"Bearer \" + token,\n    },\n  };\n\n  const req = await fetch(endpoint, options);\n  const res = await req.json();\n\n  if (req.status === 200) {\n    return true;\n  } else {\n    return false;\n  }\n};\n\nexport default Middleware;\n"]},"metadata":{},"sourceType":"module"}