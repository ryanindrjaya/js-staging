{"ast":null,"code":"import _asyncToGenerator from \"/Users/yudiananta/Development/NextJS/ERP Dev/JS Deploy/JS-Deploy/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _regeneratorRuntime from \"/Users/yudiananta/Development/NextJS/ERP Dev/JS Deploy/JS-Deploy/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport React, { useEffect } from \"react\";\nimport { useRouter } from \"next/router\";\nimport nookies from \"nookies\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction Middleware(_ref) {\n  var children = _ref.children;\n  var cookies = nookies.get(null);\n  var token = cookies.token;\n  var router = useRouter();\n  useEffect( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n    var firstPath, isValid;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            firstPath = router.pathname.split(\"/\")[1];\n            _context.next = 3;\n            return istokenValid(token);\n\n          case 3:\n            isValid = _context.sent;\n\n            if (!isValid) {\n              router.push(\"/\");\n            }\n\n            if (firstPath === \"dashboard\" && !token) {\n              router.push(\"/\");\n            } else {\n              if (token && firstPath === \"\") {\n                router.push(\"/dashboard\");\n              }\n            }\n\n          case 6:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  })), []);\n  return /*#__PURE__*/_jsx(_Fragment, {\n    children: children\n  });\n}\n\nvar istokenValid = /*#__PURE__*/function () {\n  var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(token) {\n    var endpoint, options, req, res;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            endpoint = process.env.NEXT_PUBLIC_URL + \"/products\";\n            options = {\n              method: \"GET\",\n              headers: {\n                \"Content-Type\": \"application/json\",\n                Authorization: \"Bearer \" + token\n              }\n            };\n            _context2.next = 4;\n            return fetch(endpoint, options);\n\n          case 4:\n            req = _context2.sent;\n            _context2.next = 7;\n            return req.json();\n\n          case 7:\n            res = _context2.sent;\n\n            if (!(req.status === 200)) {\n              _context2.next = 12;\n              break;\n            }\n\n            return _context2.abrupt(\"return\", true);\n\n          case 12:\n            return _context2.abrupt(\"return\", false);\n\n          case 13:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n\n  return function istokenValid(_x) {\n    return _ref3.apply(this, arguments);\n  };\n}();\n\nexport default Middleware;","map":null,"metadata":{},"sourceType":"module"}