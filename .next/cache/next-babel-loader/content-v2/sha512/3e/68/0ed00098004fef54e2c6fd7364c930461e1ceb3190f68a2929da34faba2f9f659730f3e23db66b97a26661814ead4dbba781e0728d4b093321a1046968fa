{"ast":null,"code":"import _Modal from \"antd/lib/modal\";\nimport _Select from \"antd/lib/select\";\nimport _Input from \"antd/lib/input\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport Head from \"next/head\";\nimport React, { useEffect, useState } from \"react\";\nimport LayoutContent from \"@iso/components/utility/layoutContent\";\nimport LayoutWrapper from \"@iso/components/utility/layoutWrapper.js\";\nimport { useRouter } from \"next/router\";\nimport { toast } from \"react-toastify\";\nimport nookies from \"nookies\";\nimport DashboardLayout from \"../../../containers/DashboardLayout/DashboardLayout\";\nimport TitlePage from \"../../../components/TitlePage/TitlePage\";\nimport ProductTable from \"../../../components/ReactDataTable/ProductTable\";\nimport ProductModal from \"../../../components/Modal/ProductModal\";\nimport UnitTableView from \"../../../components/ReactDataTable/Product/UnitsTableView\";\nimport Manufactures from \"../../../components/Form/AddProduct/Manufactures\";\nimport DownloadTemplate from \"../../../components/Form/DownloadTemplate\";\nimport ExportProduk from \"../../../components/Form/ExportProduk\";\nimport UploadProduk from \"../../../components/Form/UploadProduk\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\n\nconst Product = ({\n  props\n}) => {\n  const data = props.data;\n  const manufactures = props.manufactures;\n  const categories = props.categories;\n  const locations = props.locations;\n  const {\n    0: isLoading,\n    1: setIsLoading\n  } = useState(false);\n  const {\n    0: product,\n    1: setProduct\n  } = useState(data);\n  const {\n    0: modalProduct,\n    1: setModalProduct\n  } = useState();\n  const {\n    0: isSearching,\n    1: setIsSearching\n  } = useState(false);\n  const {\n    0: visible,\n    1: setVisible\n  } = useState(false);\n  const router = useRouter();\n  const {\n    0: inventory,\n    1: setInventory\n  } = useState();\n  const {\n    0: searchParameters,\n    1: setSearchParameters\n  } = useState({\n    namaSKU: \"\",\n    manufacture: \"\",\n    location: [],\n    category: \"\"\n  });\n  const {\n    0: searchOptionData,\n    1: setSearchOptionData\n  } = useState({\n    manufactures: manufactures,\n    categories: categories,\n    locations: locations\n  });\n  const {\n    Search\n  } = _Input;\n\n  const handleSearch = (newValue, category) => {\n    if (newValue) {\n      fetchSearchOption(newValue, category);\n    } else {\n      setSearchOptionData({\n        manufactures: manufactures,\n        categories: categories,\n        locations: locations\n      });\n    }\n  };\n\n  const fetchSearchOption = async (query, category) => {\n    const cookies = nookies.get(null);\n\n    try {\n      const endpoint = process.env.NEXT_PUBLIC_URL + `/${category}?filters[name][$containsi]=${query}`;\n      const options = {\n        method: \"GET\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: \"Bearer \" + cookies.token\n        }\n      };\n      const req = await fetch(endpoint, options);\n      const res = await req.json();\n\n      if (req.status == 200) {\n        const resData = res.data.map(item => ({\n          name: `${item.attributes.name}`,\n          value: item.id,\n          id: item.id\n        }));\n        setSearchOptionData(_objectSpread(_objectSpread({}, searchOptionData), {}, {\n          [category]: resData\n        }));\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  }; // search query\n\n\n  useEffect(() => {\n    const searchQuery = async () => {\n      setIsSearching(true);\n      var query = \"filters[$or][0][name][$contains]=\" + searchParameters.namaSKU + \"&filters[$or][1][SKU][$contains]=\" + searchParameters.namaSKU;\n      var locationQuery = \"\";\n\n      if (searchParameters.manufacture) {\n        query += \"&filters[$and][2][manufacture][id][$eq]=\";\n        query += searchParameters.manufacture;\n      }\n\n      if (searchParameters.category) {\n        query += \"&filters[$and][3][category][id][$eq]=\";\n        query += searchParameters.category;\n      }\n\n      if (searchParameters.location.length > 0) {\n        searchParameters.location.forEach((item, idx) => {\n          locationQuery += \"&filters[$and][\" + (idx + 4) + \"][locations][id][$eq]=\" + item;\n        });\n      } else {\n        locationQuery = \"\";\n      }\n\n      const endpoint = process.env.NEXT_PUBLIC_URL + \"/products?populate=*&\" + query + locationQuery;\n      const cookies = nookies.get(null, \"token\");\n      const options = {\n        method: \"GET\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: \"Bearer \" + cookies.token\n        }\n      };\n      const req = await fetch(endpoint, options);\n      const res = await req.json();\n      setProduct(res);\n      setIsSearching(false);\n    };\n\n    searchQuery();\n  }, [searchParameters]);\n\n  const handleAdd = () => {\n    console.log(\"\");\n    router.push(\"/dashboard/produk/tambah\");\n  };\n\n  const handleView = () => {\n    router.push(\"/dashboard/produk/lihat\");\n  };\n\n  const handleUpdate = id => {\n    console.log(\"\");\n    router.push(\"/dashboard/produk/edit/\" + id);\n  };\n\n  const handleDelete = async id => {\n    const endpoint = process.env.NEXT_PUBLIC_URL + \"/products/\" + id;\n    const cookies = nookies.get(null, \"token\");\n    const options = {\n      method: \"DELETE\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: \"Bearer \" + cookies.token\n      }\n    };\n    const req = await fetch(endpoint, options);\n    const res = await req.json();\n\n    if (res) {\n      const req = await fetchData(cookies);\n      const res = await req.json();\n      toast.success(\"Produk berhasil dihapus\");\n      setProduct(res);\n    }\n  };\n\n  const handlePageChange = async page => {\n    const cookies = nookies.get(null, \"token\");\n    const endpoint = process.env.NEXT_PUBLIC_URL + \"/products?pagination[page]=\" + page;\n    const options = {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: \"Bearer \" + cookies.token\n      }\n    };\n\n    try {\n      const req = await fetch(endpoint, options);\n      const res = await req.json();\n\n      if (res) {\n        setProduct(prevData => ({\n          data: filterDuplicateData(prevData.data.concat(res.data)),\n          meta: prevData.meta\n        }));\n      } else {\n        console.log(\"something is wrong\");\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const filterDuplicateData = arr => {\n    const seen = new Set();\n    const filteredArr = arr.filter(el => {\n      const duplicate = seen.has(el.id);\n      seen.add(el.id);\n      return !duplicate;\n    });\n    return filteredArr;\n  };\n\n  const fetchInventory = async data => {\n    setIsLoading(true);\n    const cookies = nookies.get(null, \"token\");\n    const endpoint = process.env.NEXT_PUBLIC_URL + `/inventories?filters[products][id][$eq]=${data.id}&populate=locations`;\n    const options = {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: \"Bearer \" + cookies.token\n      }\n    };\n    const req = await fetch(endpoint, options);\n    const res = await req.json(); // return req;\n    // console.log(res);\n\n    setInventory(res.data); //\n  };\n\n  const openModal = async (e, data) => {\n    // console.log(\"test\", data);\n    setVisible(e);\n    fetchInventory(data);\n  };\n\n  useEffect(() => {\n    console.log(\"inventory\", inventory);\n    setIsLoading(false);\n  }, [inventory]);\n  return /*#__PURE__*/_jsxs(_Fragment, {\n    children: [/*#__PURE__*/_jsx(Head, {\n      children: /*#__PURE__*/_jsx(\"title\", {\n        children: \"Produk\"\n      })\n    }), /*#__PURE__*/_jsx(DashboardLayout, {\n      children: /*#__PURE__*/_jsxs(LayoutWrapper, {\n        style: {},\n        children: [/*#__PURE__*/_jsx(TitlePage, {\n          titleText: \"Produk\"\n        }), /*#__PURE__*/_jsxs(LayoutContent, {\n          children: [/*#__PURE__*/_jsxs(\"div\", {\n            className: \"w-full flex justify-between gap-x-32 mb-3\",\n            children: [/*#__PURE__*/_jsxs(\"div\", {\n              className: \"w-full md:w-1/2 grid grid-cols-2 gap-x-4 gap-y-3\",\n              children: [/*#__PURE__*/_jsx(_Select, {\n                size: \"middle\",\n                allowClear: true,\n                showSearch: true,\n                showArrow: false,\n                filterOption: false,\n                notFoundContent: null,\n                placeholder: \"PABRIKASI\",\n                onSelect: e => setSearchParameters(_objectSpread(_objectSpread({}, searchParameters), {}, {\n                  manufacture: e\n                })),\n                onClear: () => setSearchParameters(_objectSpread(_objectSpread({}, searchParameters), {}, {\n                  manufacture: \"\"\n                })),\n                onSearch: e => handleSearch(e, \"manufactures\"),\n                children: searchOptionData.manufactures.map(item => /*#__PURE__*/_jsx(_Select.Option, {\n                  value: item === null || item === void 0 ? void 0 : item.id,\n                  children: item.name\n                }, item === null || item === void 0 ? void 0 : item.id))\n              }), \" \", /*#__PURE__*/_jsx(_Select, {\n                size: \"middle\",\n                allowClear: true,\n                showSearch: true,\n                showArrow: false,\n                filterOption: false,\n                notFoundContent: null,\n                placeholder: \"KATEGORI\",\n                onSelect: e => setSearchParameters(_objectSpread(_objectSpread({}, searchParameters), {}, {\n                  category: e\n                })),\n                onClear: () => setSearchParameters(_objectSpread(_objectSpread({}, searchParameters), {}, {\n                  category: \"\"\n                })),\n                onSearch: e => handleSearch(e, \"categories\"),\n                children: searchOptionData.categories.map(item => /*#__PURE__*/_jsx(_Select.Option, {\n                  value: item === null || item === void 0 ? void 0 : item.id,\n                  children: item.name\n                }, item === null || item === void 0 ? void 0 : item.id))\n              }), /*#__PURE__*/_jsx(_Select, {\n                mode: \"multiple\",\n                size: \"middle\",\n                placeholder: \"LOKASI\",\n                allowClear: true,\n                onChange: e => setSearchParameters(_objectSpread(_objectSpread({}, searchParameters), {}, {\n                  location: e\n                })),\n                onClear: () => setSearchParameters(_objectSpread(_objectSpread({}, searchParameters), {}, {\n                  location: []\n                })),\n                onSearch: e => handleSearch(e, \"locations\"),\n                children: searchOptionData.locations.map(data => /*#__PURE__*/_jsx(_Select.Option, {\n                  value: data.id,\n                  children: data.name\n                }, data.id))\n              }), /*#__PURE__*/_jsx(Search, {\n                className: \"\",\n                loading: isSearching,\n                onChange: e => setSearchParameters(_objectSpread(_objectSpread({}, searchParameters), {}, {\n                  namaSKU: e.target.value\n                })),\n                placeholder: \"NAMA PRODUK / SKU\",\n                size: \"middle\"\n              })]\n            }), /*#__PURE__*/_jsxs(\"div\", {\n              className: \"w-full flex flex-col gap-y-3 gap-x-4 md:w-1/2\",\n              children: [/*#__PURE__*/_jsx(\"div\", {\n                onClick: handleAdd,\n                className: \"bg-cyan-700 w-full cursor-pointer rounded px-5 h-10 hover:bg-cyan-800 shadow-sm flex items-center justify-center float-right\",\n                children: /*#__PURE__*/_jsx(\"div\", {\n                  className: \"text-white text-center text-sm font-bold\",\n                  children: /*#__PURE__*/_jsx(\"a\", {\n                    className: \"text-white no-underline text-xs sm:text-xs\",\n                    children: \"+ Tambah\"\n                  })\n                })\n              }), /*#__PURE__*/_jsxs(\"div\", {\n                className: \"grid grid-cols-3 gap-x-4 w-full\",\n                children: [/*#__PURE__*/_jsx(UploadProduk, {\n                  setProduct: setProduct,\n                  fetchData: fetchData\n                }), /*#__PURE__*/_jsx(ExportProduk, {\n                  data: product.data,\n                  setProduct: setProduct\n                }), /*#__PURE__*/_jsx(DownloadTemplate, {})]\n              })]\n            })]\n          }), /*#__PURE__*/_jsx(_Modal, {\n            className: \"rounded-lg m-5\",\n            head: true,\n            width: \"90%\",\n            centered: true,\n            visible: visible,\n            onOk: () => setVisible(false),\n            onCancel: () => setVisible(false),\n            bodyStyle: {\n              borderRadius: \"20px\",\n              backgroundColor: \"#E8F2F2\"\n            },\n            style: {\n              backgroundColor: \"#E8F2F2\",\n              border: \"2px solid #000\"\n            },\n            footer: null,\n            children: /*#__PURE__*/_jsx(ProductModal, {\n              data: modalProduct,\n              isLoading: isLoading,\n              inventory: inventory\n            })\n          }), /*#__PURE__*/_jsx(ProductTable, {\n            data: product,\n            onDelete: handleDelete,\n            onUpdate: handleUpdate,\n            onPageChange: handlePageChange,\n            setIsVisible: openModal,\n            setViewModalProduct: setModalProduct\n          })]\n        })]\n      })\n    })]\n  });\n};\n\nProduct.getInitialProps = async context => {\n  const cookies = nookies.get(context);\n  let data;\n  const req = await fetchData(cookies);\n  data = await req.json();\n  const manufactures = await fetchSearchParametersData(cookies, \"manufactures\");\n  const categories = await fetchSearchParametersData(cookies, \"categories\");\n  const locations = await fetchSearchParametersData(cookies, \"locations\");\n  return {\n    props: {\n      data,\n      manufactures,\n      categories,\n      locations\n    }\n  };\n};\n\nconst formatData = data => {\n  const formattedData = data.map(item => {\n    return {\n      name: `${item.attributes.name}`,\n      value: item.id,\n      id: item.id\n    };\n  });\n  return formattedData;\n};\n\nconst fetchData = async cookies => {\n  const endpoint = process.env.NEXT_PUBLIC_URL + \"/products?populate=*\";\n  const options = {\n    method: \"GET\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: \"Bearer \" + cookies.token\n    }\n  };\n  const req = await fetch(endpoint, options);\n  return req;\n};\n\nconst fetchSearchParametersData = async (cookies, url) => {\n  const endpoint = process.env.NEXT_PUBLIC_URL + `/${url}?pagination[limit]=10`;\n  const options = {\n    method: \"GET\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: \"Bearer \" + cookies.token\n    }\n  };\n  const req = await fetch(endpoint, options);\n  const res = await req.json();\n  console.log(\"response\", res);\n  return formatData(res.data) || [];\n};\n\nexport default Product;","map":null,"metadata":{},"sourceType":"module"}