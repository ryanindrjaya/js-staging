{"ast":null,"code":"import _defineProperty from \"/Users/yudiananta/Development/NextJS/ERP Dev/JS Deploy/JS-Deploy/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport actions from './actions';\nvar initState = {\n  isLoading: false,\n  errorMessage: false,\n  investors: {},\n  modalActive: false,\n  investor: {\n    key: null,\n    id: new Date().getTime(),\n    name: '',\n    company_name: '',\n    job_title: '',\n    investment_count: null,\n    exists_count: null,\n    location: '',\n    deleted_at: null // soft delete\n\n  }\n};\nexport default function reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initState;\n\n  var _ref = arguments.length > 1 ? arguments[1] : undefined,\n      type = _ref.type,\n      payload = _ref.payload;\n\n  switch (type) {\n    case actions.LOAD_FROM_FIRESTORE:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        isLoading: true,\n        errorMessage: false,\n        modalActive: false\n      });\n\n    case actions.LOAD_FROM_FIRESTORE_SUCCESS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        isLoading: false,\n        investors: payload.data,\n        errorMessage: false\n      });\n\n    case actions.LOAD_FROM_FIRESTORE_ERROR:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        isLoading: false,\n        errorMessage: 'There is a loading problem'\n      });\n\n    case actions.TOGGLE_FIRESTORE_HANDLE_MODAL:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        modalActive: !state.modalActive,\n        investor: payload.data == null ? initState.investor : payload.data\n      });\n\n    case actions.FIRESTORE_UPDATE:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        investor: payload.data\n      });\n\n    case actions.RESET_FIRESTORE_DOCUMENTS_ERROR:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        isLoading: false,\n        errorMessage: 'There is a loading problem'\n      });\n\n    default:\n      return state;\n  }\n}","map":null,"metadata":{},"sourceType":"module"}