{"ast":null,"code":"import _defineProperty from \"/Users/yudiananta/Development/NextJS/ERP Dev/JS Deploy/ERP-Sejati/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport clone from 'clone';\nvar count = 0;\n\nfunction getOption() {\n  var option = {\n    title: {},\n    tooltip: {\n      trigger: 'axis'\n    },\n    Legend: {\n      data: ['latest transaction price', 'pre - order queue']\n    },\n    toolbox: {\n      show: true,\n      feature: {\n        dataView: {\n          readOnly: false,\n          title: 'View',\n          lang: ['data view', 'turn off', 'refresh']\n        },\n        restore: {\n          title: 'Reset'\n        },\n        saveAsImage: {\n          title: 'Download'\n        }\n      }\n    },\n    grid: {\n      top: 60,\n      left: 30,\n      right: 60,\n      bottom: 30\n    },\n    dataZoom: {\n      show: false,\n      start: 0,\n      end: 100\n    },\n    visualMap: {\n      show: false,\n      min: 0,\n      max: 1000,\n      color: ['#554faf', '#f4f5f6', '#3f2159', '#9d54ad', '#968acf', '#6f68cb', '#d2d1d6', '#d78da8', '#f6fbfd', '#584ba1', '#d7edf8', '#914692', '#c64187', '#98b0c8', '#a3d1e6', '#cad8e3', '#795cae', '#de8e90', '#f09875', '#e0a695', '#e86e7a']\n    },\n    xAxis: [{\n      type: 'category',\n      boundaryGap: true,\n      data: function () {\n        var now = new Date();\n        var res = [];\n        var len = 20;\n\n        while (len--) {\n          res.unshift(now.toLocaleTimeString().replace(/^\\D*/, ''));\n          now = new Date(now - 2000);\n        }\n\n        return res;\n      }()\n    }, {\n      type: 'category',\n      boundaryGap: true,\n      data: function () {\n        var res = [];\n        var len = 20;\n\n        while (len--) {\n          res.push(20 - len + 1);\n        }\n\n        return res;\n      }()\n    }],\n    yAxis: [{\n      type: 'value',\n      scale: true,\n      name: 'Value Y',\n      max: 20,\n      min: 0,\n      boundaryGap: [0.2, 0.2]\n    }, {\n      type: 'value',\n      scale: true,\n      name: 'Value X',\n      max: 1200,\n      min: 0,\n      boundaryGap: [0.2, 0.2]\n    }],\n    series: [{\n      name: 'Pre - order queue',\n      type: 'bar',\n      xAxisIndex: 1,\n      yAxisIndex: 1,\n      itemStyle: {\n        normal: {\n          barBorderRadius: 4\n        }\n      },\n      animationEasing: 'elasticOut',\n      animationDelay: function animationDelay(idx) {\n        return idx * 10;\n      },\n      animationDelayUpdate: function animationDelayUpdate(idx) {\n        return idx * 10;\n      },\n      data: function () {\n        var res = [];\n        var len = 20;\n\n        while (len--) {\n          res.push(Math.round(Math.random() * 1000));\n        }\n\n        return res;\n      }()\n    }, {\n      name: 'Latest transaction price',\n      type: 'line',\n      data: function () {\n        var res = [];\n        var len = 0;\n\n        while (len < 20) {\n          res.push((Math.random() * 10 + 5).toFixed(1) - 0);\n          len++;\n        }\n\n        return res;\n      }()\n    }]\n  };\n  return option;\n}\n\nfunction fetchNewDate(option) {\n  var axisData = new Date().toLocaleTimeString().replace(/^\\D*/, '');\n  var data0 = option.series[0].data;\n  var data1 = option.series[1].data;\n  data0.shift();\n  data0.push(Math.round(Math.random() * 1000));\n  data1.shift();\n  data1.push((Math.random() * 10 + 5).toFixed(1) - 0);\n  option.xAxis[0].data.shift();\n  option.xAxis[0].data.push(axisData);\n  option.xAxis[1].data.shift();\n  option.xAxis[1].data.push(count++);\n  return option;\n}\n\nvar initState = {\n  option: getOption()\n};\nexport default function calendsrReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case 'UPDATE_OPTION':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        option: clone(fetchNewDate(state.get('option')))\n      });\n\n    default:\n      return state;\n  }\n}\nexport function updateOption() {\n  return {\n    type: 'UPDATE_OPTION'\n  };\n}","map":null,"metadata":{},"sourceType":"module"}