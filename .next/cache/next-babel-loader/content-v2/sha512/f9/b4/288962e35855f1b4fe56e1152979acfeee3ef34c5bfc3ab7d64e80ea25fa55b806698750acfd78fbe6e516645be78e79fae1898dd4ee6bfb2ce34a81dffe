{"ast":null,"code":"// formatter and parser input number\n// export const formatterNumber = (val) => {\n//   const newValue = Number(val).toFixed(2);\n//   if (!val) return 0;\n//   return `${newValue}`\n//     .replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")\n//     .replace(/\\.(?=\\d{0,2}$)/g, \".\");\n// };\nexport const parserNumber = val => {\n  let newValue = Number.parseFloat(val.replace(/\\$\\s?|(\\,*)/g, \"\").replace(/(\\,{1})/g, \".\")).toFixed(2);\n  let rounded = Number(newValue).toFixed(2);\n  if (!val) return 0;\n  return rounded;\n}; // formatter and parser input number\n\nexport const formatterNumber = (val, unit) => {\n  if (!val) return 0;\n  const newValue = `${val}`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\").replace(/\\.(?=\\d{0,2}$)/g, \".\");\n  let test = Number.parseFloat(newValue.replace(/\\$\\s?|(\\,*)/g, \"\").replace(/(\\,{1})/g, \".\")).toFixed(2);\n  let rounded = Number(test).toFixed(2);\n  console.log(\"formatter\", rounded, newValue);\n\n  if (unit === \"buy_price_1\" || unit === \"purchase_discount_1\" || unit === \"pricelist_1\" || unit === \"sold_price_1\") {\n    return newValue;\n  } else {\n    const newRounded = `${rounded}`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\").replace(/\\.(?=\\d{0,2}$)/g, \".\");\n    return newRounded;\n  }\n}; // export const parserNumber = (val) => {\n//   if (!val) return 0;\n//   return Number.parseFloat(\n//     val.replace(/\\$\\s?|(\\,*)/g, \"\").replace(/(\\,{1})/g, \",\")\n//   ).toFixed(2);\n// };","map":null,"metadata":{},"sourceType":"module"}