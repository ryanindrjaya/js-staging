{"ast":null,"code":"import _defineProperty from \"/Users/yudiananta/Development/NextJS/ERP Dev/JS Deploy/JS-Deploy/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport fakeData from './data';\nimport todoActions from './actions';\nvar colors = ['#7ED321', '#de1b1b', '#511E78', '#ff9009', '#42a5f5'];\nvar todos = new fakeData(5, colors.length).getAll();\nvar initState = {\n  todos: todos,\n  colors: colors\n};\nexport default function todoReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  var todos = state.todos;\n  var newtodos = [];\n\n  switch (action.type) {\n    case todoActions.CHANGE_TODO:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        todos: action.todos\n      });\n\n    case todoActions.ALL_COMPLETED:\n      todos.forEach(function (todo) {\n        todo.completed = true;\n        newtodos.push(todo);\n      });\n      return _objectSpread(_objectSpread({}, state), {}, {\n        todos: newtodos\n      });\n\n    case todoActions.DELETE_COMPLETED:\n      todos.forEach(function (todo) {\n        if (todo.completed !== true) {\n          newtodos.push(todo);\n        }\n      });\n      return _objectSpread(_objectSpread({}, state), {}, {\n        todos: newtodos\n      });\n\n    default:\n      return state;\n  }\n}","map":null,"metadata":{},"sourceType":"module"}