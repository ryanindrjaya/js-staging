{"ast":null,"code":"import _Form from \"antd/lib/form\";\nimport _CaretDownOutlined from \"@ant-design/icons/lib/icons/CaretDownOutlined\";\nimport _Select from \"antd/lib/select\";\nimport React, { useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport nookies from \"nookies\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nexport default function Supplier({\n  onChangeSupplier\n}) {\n  const {\n    0: data,\n    1: setData\n  } = useState([]);\n  const cookies = nookies.get(null, \"token\");\n  const order = useSelector(state => state.Order);\n\n  const handleChange = async id => {\n    const endpoint = process.env.NEXT_PUBLIC_URL + `/suppliers/${id}`;\n    const options = {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: \"Bearer \" + cookies.token\n      }\n    };\n    const req = await fetch(endpoint, options);\n    const res = await req.json();\n    onChangeSupplier(res.data);\n  };\n\n  const handleSearch = newValue => {\n    if (newValue) {\n      fetchSupplier(newValue, setData);\n    } else {\n      setData([]);\n    }\n  };\n\n  const options = data.map(d => /*#__PURE__*/_jsx(_Select.Option, {\n    children: d.label\n  }, d.value));\n\n  const fetchSupplier = async (query, callback) => {\n    if (!query) {\n      callback([]);\n    } else {\n      try {\n        const endpoint = process.env.NEXT_PUBLIC_URL + `/suppliers?filters[$or][0][name][$contains]=${query}&filters[$or][1][id_supplier][$contains]=${query}`;\n        const options = {\n          method: \"GET\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: \"Bearer \" + cookies.token\n          }\n        };\n        const req = await fetch(endpoint, options);\n        const res = await req.json();\n\n        if (req.status == 200) {\n          const supplierResult = res.data.map(supplier => ({\n            label: `${supplier.attributes.id_supplier} - ${supplier.attributes.name}`,\n            value: supplier.id\n          }));\n          callback(supplierResult);\n        }\n      } catch (error) {\n        console.log(error);\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsx(_Fragment, {\n    children: /*#__PURE__*/_jsx(\"div\", {\n      className: \"w-full md:w-full mb-2 md:mb-0\",\n      children: /*#__PURE__*/_jsx(_Form.Item, {\n        name: \"supplier_id\",\n        style: {\n          width: \"100%\"\n        },\n        rules: [{\n          required: true,\n          message: \"Supplier tidak boleh kosong!\"\n        }],\n        children: /*#__PURE__*/_jsx(_Select, {\n          size: \"large\",\n          showSearch: true,\n          placeholder: \"Pilih Supplier\",\n          onSearch: handleSearch,\n          onChange: handleChange,\n          filterOption: false,\n          defaultActiveFirstOption: false,\n          suffixIcon: /*#__PURE__*/_jsx(_CaretDownOutlined, {}),\n          children: options\n        })\n      })\n    })\n  });\n}","map":null,"metadata":{},"sourceType":"module"}