{"ast":null,"code":"var _jsxFileName = \"/Users/yudiananta/Development/NextJS/ERP Dev/JS Deploy/JS-Deploy/containers/Topbar/TopbarSearch.js\";\nimport React from 'react';\nimport { useSelector } from 'react-redux';\nimport { InputSearch } from '@iso/components/uielements/input';\nimport TopbarSearchModal from './TopbarSearchModal.styles';\nimport { TopbarSearchIcon } from '@iso/config/icon.config';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Searchbar(props) {\n  React.useEffect(() => {\n    const timer = setTimeout(() => {\n      try {\n        document.getElementById('InputTopbarSearch').focus();\n      } catch (e) {}\n    }, 200);\n    return () => {\n      clearTimeout(timer);\n    };\n  });\n  return /*#__PURE__*/_jsxDEV(InputSearch, {\n    id: \"InputTopbarSearch\",\n    size: \"large\",\n    placeholder: \"Enter search text\",\n    onBlur: props.onBlur,\n    prefix: /*#__PURE__*/_jsxDEV(TopbarSearchIcon, {\n      size: 24\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 15\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n}\n\nexport default function TopbarSearch() {\n  const [visible, setVisibility] = React.useState(false);\n  const customizedTheme = useSelector(state => state.ThemeSwitcher.topbarTheme);\n\n  const handleCancel = () => {\n    setVisibility(false);\n  };\n\n  const handleBlur = () => {\n    setTimeout(() => {\n      setVisibility(false);\n    }, 200);\n  };\n\n  const showModal = () => {\n    setVisibility(true);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    onClick: showModal,\n    children: [/*#__PURE__*/_jsxDEV(TopbarSearchIcon, {\n      size: 24,\n      color: customizedTheme.textColor\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TopbarSearchModal, {\n      visible: visible,\n      onOk: handleCancel,\n      onCancel: handleCancel,\n      wrapClassName: \"isoSearchModal\",\n      width: \"60%\",\n      footer: null,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"isoSearchContainer\",\n        children: visible ? /*#__PURE__*/_jsxDEV(Searchbar, {\n          onBlur: handleBlur\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 22\n        }, this) : ''\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n}","map":{"version":3,"sources":["/Users/yudiananta/Development/NextJS/ERP Dev/JS Deploy/JS-Deploy/containers/Topbar/TopbarSearch.js"],"names":["React","useSelector","InputSearch","TopbarSearchModal","TopbarSearchIcon","Searchbar","props","useEffect","timer","setTimeout","document","getElementById","focus","e","clearTimeout","onBlur","TopbarSearch","visible","setVisibility","useState","customizedTheme","state","ThemeSwitcher","topbarTheme","handleCancel","handleBlur","showModal","textColor"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,WAAT,QAA4B,kCAA5B;AACA,OAAOC,iBAAP,MAA8B,4BAA9B;AACA,SAASC,gBAAT,QAAiC,yBAAjC;;;AAEA,SAASC,SAAT,CAAmBC,KAAnB,EAA0B;AACxBN,EAAAA,KAAK,CAACO,SAAN,CAAgB,MAAM;AACpB,UAAMC,KAAK,GAAGC,UAAU,CAAC,MAAM;AAC7B,UAAI;AACFC,QAAAA,QAAQ,CAACC,cAAT,CAAwB,mBAAxB,EAA6CC,KAA7C;AACD,OAFD,CAEE,OAAOC,CAAP,EAAU,CAAE;AACf,KAJuB,EAIrB,GAJqB,CAAxB;AAKA,WAAO,MAAM;AACXC,MAAAA,YAAY,CAACN,KAAD,CAAZ;AACD,KAFD;AAGD,GATD;AAUA,sBACE,QAAC,WAAD;AACE,IAAA,EAAE,EAAC,mBADL;AAEE,IAAA,IAAI,EAAC,OAFP;AAGE,IAAA,WAAW,EAAC,mBAHd;AAIE,IAAA,MAAM,EAAEF,KAAK,CAACS,MAJhB;AAKE,IAAA,MAAM,eAAE,QAAC,gBAAD;AAAkB,MAAA,IAAI,EAAE;AAAxB;AAAA;AAAA;AAAA;AAAA;AALV;AAAA;AAAA;AAAA;AAAA,UADF;AASD;;AAED,eAAe,SAASC,YAAT,GAAwB;AACrC,QAAM,CAACC,OAAD,EAAUC,aAAV,IAA2BlB,KAAK,CAACmB,QAAN,CAAe,KAAf,CAAjC;AACA,QAAMC,eAAe,GAAGnB,WAAW,CAChCoB,KAAD,IAAWA,KAAK,CAACC,aAAN,CAAoBC,WADE,CAAnC;;AAIA,QAAMC,YAAY,GAAG,MAAM;AACzBN,IAAAA,aAAa,CAAC,KAAD,CAAb;AACD,GAFD;;AAGA,QAAMO,UAAU,GAAG,MAAM;AACvBhB,IAAAA,UAAU,CAAC,MAAM;AACfS,MAAAA,aAAa,CAAC,KAAD,CAAb;AACD,KAFS,EAEP,GAFO,CAAV;AAGD,GAJD;;AAKA,QAAMQ,SAAS,GAAG,MAAM;AACtBR,IAAAA,aAAa,CAAC,IAAD,CAAb;AACD,GAFD;;AAGA,sBACE;AAAK,IAAA,OAAO,EAAEQ,SAAd;AAAA,4BACE,QAAC,gBAAD;AAAkB,MAAA,IAAI,EAAE,EAAxB;AAA4B,MAAA,KAAK,EAAEN,eAAe,CAACO;AAAnD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,iBAAD;AACE,MAAA,OAAO,EAAEV,OADX;AAEE,MAAA,IAAI,EAAEO,YAFR;AAGE,MAAA,QAAQ,EAAEA,YAHZ;AAIE,MAAA,aAAa,EAAC,gBAJhB;AAKE,MAAA,KAAK,EAAC,KALR;AAME,MAAA,MAAM,EAAE,IANV;AAAA,6BAQE;AAAK,QAAA,SAAS,EAAC,oBAAf;AAAA,kBACGP,OAAO,gBAAG,QAAC,SAAD;AAAW,UAAA,MAAM,EAAEQ;AAAnB;AAAA;AAAA;AAAA;AAAA,gBAAH,GAAuC;AADjD;AAAA;AAAA;AAAA;AAAA;AARF;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAiBD","sourcesContent":["import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { InputSearch } from '@iso/components/uielements/input';\nimport TopbarSearchModal from './TopbarSearchModal.styles';\nimport { TopbarSearchIcon } from '@iso/config/icon.config';\n\nfunction Searchbar(props) {\n  React.useEffect(() => {\n    const timer = setTimeout(() => {\n      try {\n        document.getElementById('InputTopbarSearch').focus();\n      } catch (e) {}\n    }, 200);\n    return () => {\n      clearTimeout(timer);\n    };\n  });\n  return (\n    <InputSearch\n      id=\"InputTopbarSearch\"\n      size=\"large\"\n      placeholder=\"Enter search text\"\n      onBlur={props.onBlur}\n      prefix={<TopbarSearchIcon size={24} />}\n    />\n  );\n}\n\nexport default function TopbarSearch() {\n  const [visible, setVisibility] = React.useState(false);\n  const customizedTheme = useSelector(\n    (state) => state.ThemeSwitcher.topbarTheme\n  );\n\n  const handleCancel = () => {\n    setVisibility(false);\n  };\n  const handleBlur = () => {\n    setTimeout(() => {\n      setVisibility(false);\n    }, 200);\n  };\n  const showModal = () => {\n    setVisibility(true);\n  };\n  return (\n    <div onClick={showModal}>\n      <TopbarSearchIcon size={24} color={customizedTheme.textColor} />\n      <TopbarSearchModal\n        visible={visible}\n        onOk={handleCancel}\n        onCancel={handleCancel}\n        wrapClassName=\"isoSearchModal\"\n        width=\"60%\"\n        footer={null}\n      >\n        <div className=\"isoSearchContainer\">\n          {visible ? <Searchbar onBlur={handleBlur} /> : ''}\n        </div>\n      </TopbarSearchModal>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}