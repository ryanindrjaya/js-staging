{"ast":null,"code":"import _Form from \"antd/lib/form\";\nimport _Select from \"antd/lib/select\";\nimport _asyncToGenerator from \"/Users/yudiananta/Development/NextJS/ERP Dev/JS Deploy/ERP-Sejati/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _regeneratorRuntime from \"/Users/yudiananta/Development/NextJS/ERP Dev/JS Deploy/ERP-Sejati/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport React, { useState } from \"react\";\nimport nookies from \"nookies\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default function Categories(_ref) {\n  var selectedCategory = _ref.selectedCategory,\n      onSelectCategory = _ref.onSelectCategory,\n      setSubCategories = _ref.setSubCategories,\n      setSelectedSubCategory = _ref.setSelectedSubCategory,\n      selectedSubCategory = _ref.selectedSubCategory,\n      initialValue = _ref.initialValue;\n\n  var _useState = useState(selectedCategory),\n      category = _useState[0],\n      setCategory = _useState[1];\n\n  var _useState2 = useState([]),\n      data = _useState2[0],\n      setData = _useState2[1];\n\n  var cookies = nookies.get(null, \"token\");\n\n  var fetchSubCategoriesById = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(id) {\n      var endpoint, options, req, res, listOfData;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              endpoint = process.env.NEXT_PUBLIC_URL + \"/sub-categories?populate[category][filters][id][$eq]=\".concat(id, \"&populate=*\");\n              options = {\n                method: \"GET\",\n                headers: {\n                  Authorization: \"Bearer \" + cookies.token\n                }\n              };\n              _context.next = 4;\n              return fetch(endpoint, options);\n\n            case 4:\n              req = _context.sent;\n              _context.next = 7;\n              return req.json();\n\n            case 7:\n              res = _context.sent;\n              listOfData = [];\n              res.data.forEach(function (element) {\n                if (element.attributes.category.data !== null) {\n                  listOfData.push(element);\n                }\n              });\n              setSubCategories(listOfData);\n\n            case 11:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function fetchSubCategoriesById(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var handleChangeCategory = function handleChangeCategory(newValue) {\n    setSelectedSubCategory(0);\n    fetchSubCategoriesById(newValue);\n    setCategory(newValue);\n    onSelectCategory(newValue);\n  };\n\n  var handleSearchCategory = function handleSearchCategory(newValue) {\n    if (newValue) {\n      fetchCategory(newValue, setData);\n    } else {\n      setData([]);\n    }\n  };\n\n  var options = data.map(function (d) {\n    return /*#__PURE__*/_jsx(_Select.Option, {\n      children: d.label\n    }, d.value);\n  });\n\n  var fetchCategory = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(query, callback) {\n      var endpoint, _options, req, res, categoriesResult;\n\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              if (query) {\n                _context2.next = 4;\n                break;\n              }\n\n              callback([]);\n              _context2.next = 19;\n              break;\n\n            case 4:\n              _context2.prev = 4;\n              endpoint = process.env.NEXT_PUBLIC_URL + \"/categories?filters[$or][0][name][$contains]=\".concat(query, \"&filters[$or][1][category_id][$contains]=\").concat(query);\n              _options = {\n                method: \"GET\",\n                headers: {\n                  \"Content-Type\": \"application/json\",\n                  Authorization: \"Bearer \" + cookies.token\n                }\n              };\n              _context2.next = 9;\n              return fetch(endpoint, _options);\n\n            case 9:\n              req = _context2.sent;\n              _context2.next = 12;\n              return req.json();\n\n            case 12:\n              res = _context2.sent;\n\n              if (req.status == 200) {\n                categoriesResult = res.data.map(function (categories) {\n                  return {\n                    label: \"\".concat(categories.attributes.category_id, \" - \").concat(categories.attributes.name),\n                    value: categories.id\n                  };\n                });\n                callback(categoriesResult);\n              }\n\n              _context2.next = 19;\n              break;\n\n            case 16:\n              _context2.prev = 16;\n              _context2.t0 = _context2[\"catch\"](4);\n              console.log(_context2.t0);\n\n            case 19:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[4, 16]]);\n    }));\n\n    return function fetchCategory(_x2, _x3) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  return /*#__PURE__*/_jsx(\"div\", {\n    className: \"w-full md:w-full mb-2 md:mb-0\",\n    children: /*#__PURE__*/_jsx(_Form.Item, {\n      initialValue: initialValue,\n      name: \"category_id\",\n      rules: [{\n        required: true,\n        message: \"Kategori Produk tidak boleh kosong!\"\n      }],\n      children: /*#__PURE__*/_jsx(_Select, {\n        size: \"large\",\n        showSearch: true,\n        value: category,\n        showArrow: false,\n        placeholder: \"Pilih Kategori\",\n        onSearch: handleSearchCategory,\n        onChange: handleChangeCategory,\n        filterOption: false,\n        defaultActiveFirstOption: false,\n        children: options\n      })\n    })\n  });\n}","map":null,"metadata":{},"sourceType":"module"}