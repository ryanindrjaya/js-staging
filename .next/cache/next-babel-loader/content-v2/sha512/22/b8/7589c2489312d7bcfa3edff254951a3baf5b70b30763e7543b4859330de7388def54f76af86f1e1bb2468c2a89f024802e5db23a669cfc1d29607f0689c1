{"ast":null,"code":"import _notification from \"antd/lib/notification\";\nimport _asyncToGenerator from \"/Users/yudiananta/Development/NextJS/ERP Dev/JS Deploy/ERP-Sejati/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _regeneratorRuntime from \"/Users/yudiananta/Development/NextJS/ERP Dev/JS Deploy/ERP-Sejati/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport React from \"react\";\nimport nookies from \"nookies\";\nimport * as moment from \"moment\";\nvar cookies = nookies.get(null, \"token\");\n\nvar CreateOrder = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(products, grandTotal, totalPrice, values, listId, discPrice, form, router) {\n    var date, newDate, orderDate, supplier, location, tempProductListId, supplierId, locationId, purchaseOrderId, data, req, res;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            // CLEANING DATA\n            date = new Date(values.order_date);\n            newDate = moment.utc(date).utcOffset(7 * 60).format();\n            orderDate = newDate;\n            supplier = products.preorderData.data.attributes.supplier.data;\n            location = products.preorderData.data.attributes.location.data;\n            tempProductListId = [];\n            listId.forEach(function (element) {\n              tempProductListId.push({\n                id: element\n              });\n            });\n            supplierId = {\n              id: parseInt(Number.isNaN(parseInt(values.supplier_id)) ? supplier.id : values.supplier_id)\n            };\n            locationId = {\n              id: parseInt(Number.isNaN(parseInt(values.location)) ? location.id : values.location)\n            };\n            purchaseOrderId = {\n              id: values.no_po\n            }; // only in purchasing\n\n            delete values.delivery_date;\n            delete values.order_date;\n            delete values.products;\n            values.price_after_disc = parseInt(discPrice);\n            values.tempo_days = String(values.tempo_days);\n            values.purchasing_details = tempProductListId;\n            values.purchase = purchaseOrderId;\n            values.location = locationId;\n            values.supplier_id = supplierId;\n            values.date_purchasing = orderDate;\n            values.supplier_id = supplierId;\n            values.status_pembayaran = \"Belum Lunas\";\n            values.total_purchasing = grandTotal === 0 ? parseInt(totalPrice) : parseInt(grandTotal);\n            data = {\n              data: values\n            };\n            _context.next = 26;\n            return createData(data);\n\n          case 26:\n            req = _context.sent;\n            _context.next = 29;\n            return req.json();\n\n          case 29:\n            res = _context.sent;\n\n            if (!(req.status === 200)) {\n              _context.next = 35;\n              break;\n            }\n\n            _context.next = 33;\n            return putRelationOrder(res.data.id, res.data.attributes, values, form, router);\n\n          case 33:\n            _context.next = 36;\n            break;\n\n          case 35:\n            openNotificationWithIcon(\"error\");\n\n          case 36:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function CreateOrder(_x, _x2, _x3, _x4, _x5, _x6, _x7, _x8) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nvar createData = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(data) {\n    var endpoint, JSONdata, options, req;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            endpoint = process.env.NEXT_PUBLIC_URL + \"/purchasings\";\n            JSONdata = JSON.stringify(data);\n            options = {\n              method: \"POST\",\n              headers: {\n                \"Content-Type\": \"application/json\",\n                Authorization: \"Bearer \" + cookies.token\n              },\n              body: JSONdata\n            };\n            _context2.next = 5;\n            return fetch(endpoint, options);\n\n          case 5:\n            req = _context2.sent;\n            return _context2.abrupt(\"return\", req);\n\n          case 7:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n\n  return function createData(_x9) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\nvar putRelationOrder = /*#__PURE__*/function () {\n  var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(id, value, values, form, router) {\n    var user, dataOrder, key, JSONdata, endpoint, options, req, res;\n    return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.next = 2;\n            return getUserMe();\n\n          case 2:\n            user = _context3.sent;\n            dataOrder = {\n              data: value\n            };\n            dataOrder.data.supplier = {\n              id: values.supplier_id.id\n            };\n            dataOrder.data.purchasing_details = values.purchasing_details;\n            dataOrder.data.added_by = user.name;\n            dataOrder.data.locations = values.location; // clean object\n\n            for (key in dataOrder.data) {\n              if (dataOrder.data[key] === null || dataOrder.data[key] === undefined) {\n                delete dataOrder[key];\n              }\n            }\n\n            JSONdata = JSON.stringify(dataOrder);\n            endpoint = process.env.NEXT_PUBLIC_URL + \"/purchasings/\" + id;\n            options = {\n              method: \"PUT\",\n              headers: {\n                \"Content-Type\": \"application/json\",\n                Authorization: \"Bearer \" + cookies.token\n              },\n              body: JSONdata\n            };\n            _context3.next = 14;\n            return fetch(endpoint, options);\n\n          case 14:\n            req = _context3.sent;\n            _context3.next = 17;\n            return req.json();\n\n          case 17:\n            res = _context3.sent;\n\n            if (req.status === 200) {\n              form.resetFields();\n              router.replace(\"/dashboard/pembelian/pembelian_barang\");\n              openNotificationWithIcon(\"success\");\n            } else {\n              openNotificationWithIcon(\"error\");\n            }\n\n          case 19:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n\n  return function putRelationOrder(_x10, _x11, _x12, _x13, _x14) {\n    return _ref3.apply(this, arguments);\n  };\n}();\n\nvar getUserMe = /*#__PURE__*/function () {\n  var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4() {\n    var endpoint, options, req, res;\n    return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            endpoint = process.env.NEXT_PUBLIC_URL + \"/users/me\";\n            options = {\n              method: \"GET\",\n              headers: {\n                \"Content-Type\": \"application/json\",\n                Authorization: \"Bearer \" + cookies.token\n              }\n            };\n            _context4.next = 4;\n            return fetch(endpoint, options);\n\n          case 4:\n            req = _context4.sent;\n            _context4.next = 7;\n            return req.json();\n\n          case 7:\n            res = _context4.sent;\n            return _context4.abrupt(\"return\", res);\n\n          case 9:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4);\n  }));\n\n  return function getUserMe() {\n    return _ref4.apply(this, arguments);\n  };\n}();\n\nvar openNotificationWithIcon = function openNotificationWithIcon(type) {\n  if (type === \"error\") {\n    _notification[type]({\n      message: \"Gagal menambahkan data\",\n      description: \"Produk gagal ditambahkan. Silahkan cek NO PO atau kelengkapan data lainnya\"\n    });\n  } else if (type === \"success\") {\n    _notification[type]({\n      message: \"Berhasil menambahkan data\",\n      description: \"Produk berhasil ditambahkan. Silahkan cek pada halaman Pembelian Barang\"\n    });\n  }\n};\n\nexport default CreateOrder;","map":null,"metadata":{},"sourceType":"module"}