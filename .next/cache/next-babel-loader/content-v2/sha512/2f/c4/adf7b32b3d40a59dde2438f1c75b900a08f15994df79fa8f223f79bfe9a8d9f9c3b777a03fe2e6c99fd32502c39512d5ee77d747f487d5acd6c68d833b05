{"ast":null,"code":"import _Button from \"antd/lib/button\";\nimport _Spin from \"antd/lib/spin\";\nimport _FileImageOutlined from \"@ant-design/icons/lib/icons/FileImageOutlined\";\nimport _message from \"antd/lib/message\";\nimport _Input from \"antd/lib/input\";\nimport _Upload from \"antd/lib/upload\";\nimport _Form from \"antd/lib/form\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { useRef, useState } from \"react\";\nimport Head from \"next/head\";\nimport LayoutContent from \"@iso/components/utility/layoutContent\";\nimport LayoutWrapper from \"@iso/components/utility/layoutWrapper.js\";\nimport nookies from \"nookies\";\nimport { toast } from \"react-toastify\";\nimport { useRouter } from \"next/router\";\nimport Image from \"next/image\";\nimport DashboardLayout from \"../../../../containers/DashboardLayout/DashboardLayout\";\nimport TitlePage from \"../../../../components/TitlePage/TitlePage\";\nimport Categories from \"../../../../components/Form/AddProduct/Categories\";\nimport Manufactures from \"../../../../components/Form/AddProduct/Manufactures\";\nimport SubCategories from \"../../../../components/Form/AddProduct/subCategories\";\nimport Groups from \"../../../../components/Form/AddProduct/Groups\";\nimport Locations from \"../../../../components/Form/AddProduct/Locations\";\nimport UnitTable from \"../../../../components/ReactDataTable/Product/UnitsTable\";\nimport ConfirmDialog from \"../../../../components/Alert/ConfirmDialog\";\nimport setHargaValue from \"../utility/setHargaValue\";\nimport setDiskonValue from \"../utility/setDiskonValue\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\n\nconst Edit = ({\n  props\n}) => {\n  var _props$product, _product$attributes, _product$attributes$c, _product$attributes2, _product$attributes2$, _product$attributes3, _product$attributes3$, _product$attributes4, _product$attributes4$, _product$attributes5, _product$attributes$s, _product$attributes6, _product$attributes6$, _product$attributes6$2, _product$attributes$d, _product$attributes7, _product$attributes$S, _product$attributes8, _product$attributes9, _product$attributes9$, _product$attributes10, _product$attributes11, _product$attributes12;\n\n  const productId = props === null || props === void 0 ? void 0 : props.product.data.id;\n  const product = props === null || props === void 0 ? void 0 : (_props$product = props.product) === null || _props$product === void 0 ? void 0 : _props$product.data;\n  const manufactures = props === null || props === void 0 ? void 0 : props.manufactures;\n  const groups = props === null || props === void 0 ? void 0 : props.groups;\n  const locations = props === null || props === void 0 ? void 0 : props.locations;\n  const initCategory = product === null || product === void 0 ? void 0 : (_product$attributes = product.attributes) === null || _product$attributes === void 0 ? void 0 : (_product$attributes$c = _product$attributes.category) === null || _product$attributes$c === void 0 ? void 0 : _product$attributes$c.data;\n  const subCategory = product === null || product === void 0 ? void 0 : (_product$attributes2 = product.attributes) === null || _product$attributes2 === void 0 ? void 0 : (_product$attributes2$ = _product$attributes2.sub_category) === null || _product$attributes2$ === void 0 ? void 0 : _product$attributes2$.data;\n  const {\n    0: image,\n    1: setImage\n  } = useState((_product$attributes3 = product.attributes) !== null && _product$attributes3 !== void 0 && (_product$attributes3$ = _product$attributes3.image) !== null && _product$attributes3$ !== void 0 && _product$attributes3$.data ? (_product$attributes4 = product.attributes) === null || _product$attributes4 === void 0 ? void 0 : (_product$attributes4$ = _product$attributes4.image) === null || _product$attributes4$ === void 0 ? void 0 : _product$attributes4$.data[0].attributes : null);\n  const {\n    0: category,\n    1: setCategory\n  } = useState();\n  const {\n    0: idCategory,\n    1: setIdCategory\n  } = useState(initCategory.id);\n  const {\n    0: uploadedOnce,\n    1: setUploadedOnce\n  } = useState(true);\n  const {\n    0: fileList,\n    1: setFileList\n  } = useState([]);\n  const {\n    0: firstInput,\n    1: setFirstInputDiskon\n  } = useState(true);\n\n  const [form] = _Form.useForm();\n\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(false);\n  const cookies = nookies.get(null, \"token\");\n  const router = useRouter();\n  const submitBtn = useRef();\n  const {\n    Dragger\n  } = _Upload;\n  const {\n    TextArea\n  } = _Input;\n  const {\n    0: selectedManufactures,\n    1: setSelectedManufactures\n  } = useState({});\n  const {\n    0: selectedGroups,\n    1: setSelectedGroup\n  } = useState({});\n  const {\n    0: selectLocations,\n    1: setSelectLocation\n  } = useState();\n  const {\n    0: subCategories,\n    1: setSubCategories\n  } = useState([]);\n  const {\n    0: selectedSubCategory,\n    1: setSelectedSubCategory\n  } = useState();\n\n  function locationsList() {\n    const locationNameList = [];\n    locations.data.forEach(element => {\n      locationNameList.push(element.attributes.name);\n    });\n    return locationNameList;\n  }\n\n  const imageLoader = ({\n    src\n  }) => {\n    return process.env.BASE_URL + (image === null || image === void 0 ? void 0 : image.url);\n  };\n\n  const propsDagger = {\n    name: \"files\",\n    multiple: false,\n    fileList: fileList,\n    showUploadList: {\n      showDownloadIcon: false,\n      showRemoveIcon: true\n    },\n\n    onRemove(info) {\n      setUploadedOnce(true);\n      setImage();\n      setFileList([]);\n    },\n\n    async onChange(info) {\n      if (info.fileList.length === 1) {\n        const endpoint = process.env.NEXT_PUBLIC_URL + \"/upload\";\n        const file = info.file.originFileObj;\n        const data = new FormData();\n        data.append(\"files\", file);\n        setFileList(info.fileList);\n        const options = {\n          method: \"POST\",\n          headers: {\n            Authorization: \"Bearer \" + cookies.token\n          },\n          body: data\n        };\n\n        if (uploadedOnce) {\n          setUploadedOnce(false);\n          const req = await fetch(endpoint, options);\n          const res = await req.json();\n\n          if (req.status === 200) {\n            setImage(res[0]);\n\n            _message.success(`${info.file.name} berhasil diupload`);\n          } else {\n            _message.error(`${info.file.name} gagal upload`);\n          }\n        }\n      } else if (info.fileList.length === 0) {\n        _message.info(`Gambar berhasil dihapus`);\n      } else {\n        _message.error(`Hanya dapat menambahkan 1 gambar`);\n      }\n    }\n\n  };\n\n  const categoryChecker = values => {\n    if (values.category_id === `${initCategory.attributes.category_id} - ${initCategory.attributes.name}`) {\n      console.log(\"category tidak berubah. jadikan id\");\n      values.category_id = idCategory;\n    } else {\n      console.log(\"category berubah. jadikan tipe int\");\n      values.category_id = parseInt(values.category_id);\n    }\n\n    return values;\n  };\n\n  const subCategoryChecker = values => {\n    console.log(\"checker \", values.subCategories, subCategory);\n\n    if (values.subCategories === (subCategory === null || subCategory === void 0 ? void 0 : subCategory.attributes.name)) {\n      console.log(\"sub category tidak berubah. jadikan id\");\n      values.subCategories = subCategory.id;\n    } else if (!subCategory) {\n      console.log(\"tidak ada datanya cuy\");\n    } else {\n      console.log(\"sub category berubah. jadikan tipe int\");\n      values.subCategories = parseInt(values.subCategories);\n    }\n\n    return values;\n  };\n\n  const onFinish = async values => {\n    var _values, _values$subCategories, _values2, _values3, _values4, _values5, _values5$locations;\n\n    console.log(\"values\", values);\n    setLoading(true);\n    values = categoryChecker(values);\n    values = subCategoryChecker(values);\n    const categoryID = {\n      id: parseInt((_values = values) === null || _values === void 0 ? void 0 : _values.category_id)\n    };\n    const subCategoryID = {\n      id: (_values$subCategories = (_values2 = values) === null || _values2 === void 0 ? void 0 : _values2.subCategories) !== null && _values$subCategories !== void 0 ? _values$subCategories : null\n    };\n    const manufacturesID = {\n      id: (_values3 = values) === null || _values3 === void 0 ? void 0 : _values3.manufactures\n    };\n    const groupID = {\n      id: (_values4 = values) === null || _values4 === void 0 ? void 0 : _values4.groups\n    };\n    values.locations = ((_values5 = values) === null || _values5 === void 0 ? void 0 : (_values5$locations = _values5.locations) === null || _values5$locations === void 0 ? void 0 : _values5$locations.map(location => {\n      if (location.value) {\n        return {\n          id: location.value\n        };\n      }\n\n      return {\n        id: location\n      };\n    })) || [];\n    delete values.category_id;\n    delete values.subCategories;\n    delete values.manufactures;\n    delete values.groups;\n    const putData = {\n      // ...values,\n      category: categoryID,\n      sub_category: subCategoryID,\n      manufacture: manufacturesID,\n      group: groupID,\n      image: {\n        id: image === null || image === void 0 ? void 0 : image.id\n      }\n    };\n\n    if (putData.sub_category.id === \"\") {\n      delete putData.sub_category;\n    }\n\n    console.log(\"tester\", putData); // remove undefined or null value from data\n\n    for (const key in values) {\n      if (values[key] === undefined || values[key] === null) {\n        delete values[key];\n      }\n    } // remove undefined or null value from data\n\n\n    for (const key in putData) {\n      if (putData[key].id === undefined || putData[key].id === NaN) {\n        delete putData[key];\n      }\n    }\n\n    const data = _objectSpread(_objectSpread({}, values), putData);\n\n    console.log(\"data\", data);\n\n    for (let index = 1; index < 6; index++) {\n      if (data[`purchase_discount_${index}`] === \"-\") delete data[`purchase_discount_${index}`];\n    }\n\n    const dataPut = {\n      data: data\n    };\n    const JSONdata = JSON.stringify(dataPut);\n    const options = {\n      method: \"PUT\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: \"Bearer \" + cookies.token\n      },\n      body: JSONdata\n    };\n    const endpoint = process.env.NEXT_PUBLIC_URL + \"/products/\" + productId;\n    const req = await fetch(endpoint, options);\n    const res = await req.json();\n    console.log(\"dataput \", dataPut);\n    console.log(req);\n    console.log(res);\n\n    if (req.status === 200) {\n      toast.success(\"Produk berhasil diperbarui!\", {\n        position: toast.POSITION.TOP_RIGHT\n      });\n      router.push(\"/dashboard/produk\");\n    } else {\n      console.log(res);\n      toast.error(\"Tidak dapat memperbarui Produk\", {\n        position: toast.POSITION.TOP_RIGHT\n      });\n    }\n\n    setLoading(false);\n  };\n\n  const handleValueChange = (changedValues, allValues) => {\n    const fieldName = Object.keys(changedValues)[0];\n    const unitArr = fieldName.split(\"_\");\n    const unit = unitArr[unitArr.length - 1];\n    setDiskonValue(form, changedValues, allValues, fieldName, firstInput);\n    setHargaValue(form, changedValues, allValues, unit, firstInput);\n  };\n\n  return /*#__PURE__*/_jsxs(_Fragment, {\n    children: [/*#__PURE__*/_jsx(Head, {\n      children: /*#__PURE__*/_jsx(\"title\", {\n        children: \"Edit Produk\"\n      })\n    }), /*#__PURE__*/_jsx(DashboardLayout, {\n      children: /*#__PURE__*/_jsxs(LayoutWrapper, {\n        style: {},\n        children: [/*#__PURE__*/_jsx(TitlePage, {\n          titleText: \"Edit Produk\"\n        }), /*#__PURE__*/_jsx(LayoutContent, {\n          children: /*#__PURE__*/_jsxs(_Form, {\n            form: form,\n            name: \"edit_product\",\n            initialValues: {\n              remember: true\n            },\n            onFinish: onFinish,\n            onValuesChange: handleValueChange,\n            children: [/*#__PURE__*/_jsxs(\"div\", {\n              className: \"flex flex-wrap -mx-3 mb-3\",\n              children: [/*#__PURE__*/_jsxs(\"div\", {\n                className: \"w-full md:w-1/3 px-3 mb-2 md:mb-0\",\n                children: [/*#__PURE__*/_jsx(_Form.Item, {\n                  name: \"name\",\n                  initialValue: product === null || product === void 0 ? void 0 : (_product$attributes5 = product.attributes) === null || _product$attributes5 === void 0 ? void 0 : _product$attributes5.name,\n                  rules: [{\n                    required: true,\n                    message: \"Nama Produk tidak boleh kosong!\"\n                  }],\n                  children: /*#__PURE__*/_jsx(_Input, {\n                    style: {\n                      height: \"40px\"\n                    },\n                    placeholder: \"Nama Produk\"\n                  })\n                }), /*#__PURE__*/_jsx(Categories, {\n                  initialValue: `${initCategory.attributes.category_id} - ${initCategory.attributes.name}`,\n                  selectedCategory: category,\n                  onSelectCategory: setCategory,\n                  setSubCategories: setSubCategories,\n                  setSelectedSubCategory: setSelectedSubCategory,\n                  selectedSubCategory: selectedSubCategory\n                }), /*#__PURE__*/_jsx(SubCategories, {\n                  subCategories: subCategories,\n                  onSelect: setSelectedSubCategory,\n                  selectedSubCategory: selectedSubCategory,\n                  initialValue: `${(_product$attributes$s = (_product$attributes6 = product.attributes) === null || _product$attributes6 === void 0 ? void 0 : (_product$attributes6$ = _product$attributes6.sub_category) === null || _product$attributes6$ === void 0 ? void 0 : (_product$attributes6$2 = _product$attributes6$.data) === null || _product$attributes6$2 === void 0 ? void 0 : _product$attributes6$2.attributes.name) !== null && _product$attributes$s !== void 0 ? _product$attributes$s : \"\"}`\n                }), /*#__PURE__*/_jsx(_Form.Item, {\n                  name: \"description\",\n                  initialValue: (_product$attributes$d = (_product$attributes7 = product.attributes) === null || _product$attributes7 === void 0 ? void 0 : _product$attributes7.description) !== null && _product$attributes$d !== void 0 ? _product$attributes$d : \"\",\n                  children: /*#__PURE__*/_jsx(TextArea, {\n                    rows: 4,\n                    placeholder: \"Deskripsi\"\n                  })\n                })]\n              }), /*#__PURE__*/_jsxs(\"div\", {\n                className: \"w-full md:w-1/3 px-3 mb-2 md:mb-0\",\n                children: [/*#__PURE__*/_jsx(_Form.Item, {\n                  name: \"SKU\",\n                  rules: [{\n                    required: true,\n                    message: \"SKU tidak boleh kosong!\"\n                  }],\n                  initialValue: (_product$attributes$S = (_product$attributes8 = product.attributes) === null || _product$attributes8 === void 0 ? void 0 : _product$attributes8.SKU) !== null && _product$attributes$S !== void 0 ? _product$attributes$S : \"\",\n                  children: /*#__PURE__*/_jsx(_Input, {\n                    style: {\n                      height: \"40px\"\n                    },\n                    placeholder: \"SKU\"\n                  })\n                }), /*#__PURE__*/_jsx(Manufactures, {\n                  data: manufactures.data,\n                  initialValue: (_product$attributes9 = product.attributes) === null || _product$attributes9 === void 0 ? void 0 : (_product$attributes9$ = _product$attributes9.manufacture) === null || _product$attributes9$ === void 0 ? void 0 : _product$attributes9$.data,\n                  onSelect: setSelectedManufactures\n                }), /*#__PURE__*/_jsx(Groups, {\n                  data: groups,\n                  onSelect: setSelectedGroup,\n                  initialValue: (_product$attributes10 = product.attributes) === null || _product$attributes10 === void 0 ? void 0 : (_product$attributes11 = _product$attributes10.group) === null || _product$attributes11 === void 0 ? void 0 : _product$attributes11.data\n                }), /*#__PURE__*/_jsx(Locations, {\n                  data: locations,\n                  onSelect: setSelectLocation,\n                  initialValue: (_product$attributes12 = product.attributes) === null || _product$attributes12 === void 0 ? void 0 : _product$attributes12.locations.data\n                })]\n              }), /*#__PURE__*/_jsx(\"div\", {\n                className: \"w-full md:w-1/3 px-3 mb-2 md:mb-0\",\n                children: /*#__PURE__*/_jsx(Dragger, _objectSpread(_objectSpread({}, propsDagger), {}, {\n                  children: image == null ? /*#__PURE__*/_jsxs(_Fragment, {\n                    children: [/*#__PURE__*/_jsx(\"p\", {\n                      className: \"ant-upload-drag-icon\",\n                      children: /*#__PURE__*/_jsx(_FileImageOutlined, {})\n                    }), /*#__PURE__*/_jsx(\"p\", {\n                      className: \"ant-upload-text\",\n                      children: \"Klik atau tarik gambar ke kotak ini\"\n                    }), /*#__PURE__*/_jsx(\"p\", {\n                      className: \"ant-upload-hint  m-3\",\n                      children: \"Gambar akan digunakan sebagai contoh tampilan produk\"\n                    })]\n                  }) : /*#__PURE__*/_jsx(Image, {\n                    layout: \"fill\",\n                    loader: imageLoader,\n                    src: process.env.BASE_URL + (image === null || image === void 0 ? void 0 : image.url)\n                  })\n                }))\n              })]\n            }), /*#__PURE__*/_jsx(\"div\", {\n              children: /*#__PURE__*/_jsx(\"h6\", {\n                className: \"\",\n                children: \"HARGA\"\n              })\n            }), /*#__PURE__*/_jsx(UnitTable, {\n              initialValue: product.attributes\n            }), /*#__PURE__*/_jsx(_Form.Item, {\n              children: loading ? /*#__PURE__*/_jsx(\"div\", {\n                className: \" flex float-left ml-3 \",\n                children: /*#__PURE__*/_jsx(_Spin, {})\n              }) : /*#__PURE__*/_jsxs(_Fragment, {\n                children: [/*#__PURE__*/_jsx(ConfirmDialog, {\n                  onConfirm: () => {\n                    var _submitBtn$current;\n\n                    return submitBtn === null || submitBtn === void 0 ? void 0 : (_submitBtn$current = submitBtn.current) === null || _submitBtn$current === void 0 ? void 0 : _submitBtn$current.click();\n                  },\n                  onCancel: () => {},\n                  title: \"Edit Produk\",\n                  message: \"Apakah anda yakin ingin mengedit produk ini?\",\n                  component: /*#__PURE__*/_jsx(_Button, {\n                    className: \" hover:text-white hover:bg-cyan-700 border border-cyan-700 ml-1\",\n                    children: \"Simpan\"\n                  })\n                }), /*#__PURE__*/_jsx(_Button, {\n                  htmlType: \"submit\",\n                  ref: submitBtn\n                })]\n              })\n            })]\n          })\n        })]\n      })\n    })]\n  });\n};\n\nEdit.getInitialProps = async context => {\n  var _product$data$attribu;\n\n  const cookies = nookies.get(context);\n  const reqProduct = await fetchProduct(cookies, context);\n  const product = await reqProduct.json();\n  const categoryId = (_product$data$attribu = product.data.attributes.category.data) === null || _product$data$attribu === void 0 ? void 0 : _product$data$attribu.id;\n  const reqCategories = await fetchDataCategories(cookies);\n  const categories = await reqCategories.json();\n  const reqGroups = await fetchDataGroups(cookies);\n  const groups = await reqGroups.json();\n  const reqLocations = await fetchDataLocations(cookies);\n  const locations = await reqLocations.json();\n  const reqManufactures = await fetchDataManufactures(cookies);\n  const manufactures = await reqManufactures.json();\n  const reqSubCategories = await fetchDataSubCategories(cookies, categoryId);\n  const subCategories = await reqSubCategories.json();\n  return {\n    props: {\n      product,\n      categories,\n      groups,\n      locations,\n      manufactures,\n      subCategories\n    }\n  };\n};\n\nconst fetchProduct = async (cookies, context) => {\n  const id = context.query.id;\n  const endpoint = process.env.NEXT_PUBLIC_URL + \"/products/\" + id + \"?populate=*\";\n  const options = {\n    method: \"GET\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: \"Bearer \" + cookies.token\n    }\n  };\n  const req = await fetch(endpoint, options);\n  return req;\n};\n\nconst fetchDataCategories = async cookies => {\n  const endpoint = process.env.NEXT_PUBLIC_URL + \"/categories\";\n  const options = {\n    method: \"GET\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: \"Bearer \" + cookies.token\n    }\n  };\n  const req = await fetch(endpoint, options);\n  return req;\n};\n\nconst fetchDataManufactures = async cookies => {\n  const endpoint = process.env.NEXT_PUBLIC_URL + \"/manufactures\";\n  const options = {\n    method: \"GET\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: \"Bearer \" + cookies.token\n    }\n  };\n  const req = await fetch(endpoint, options);\n  return req;\n};\n\nconst fetchDataSubCategories = async (cookies, categoryId) => {\n  const endpoint = process.env.NEXT_PUBLIC_URL + \"/sub-categories?populate[category][filters][id][$eq]=\" + categoryId;\n  const options = {\n    method: \"GET\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: \"Bearer \" + cookies.token\n    }\n  };\n  const req = await fetch(endpoint, options);\n  return req;\n};\n\nconst fetchDataGroups = async cookies => {\n  const endpoint = process.env.NEXT_PUBLIC_URL + \"/groups\";\n  const options = {\n    method: \"GET\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: \"Bearer \" + cookies.token\n    }\n  };\n  const req = await fetch(endpoint, options);\n  return req;\n};\n\nconst fetchDataLocations = async cookies => {\n  const endpoint = process.env.NEXT_PUBLIC_URL + \"/locations\";\n  const options = {\n    method: \"GET\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: \"Bearer \" + cookies.token\n    }\n  };\n  const req = await fetch(endpoint, options);\n  return req;\n};\n\nexport default Edit;","map":null,"metadata":{},"sourceType":"module"}