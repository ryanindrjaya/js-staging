{"ast":null,"code":"import _Spin from \"antd/lib/spin\";\nimport _Upload from \"antd/lib/upload\";\nimport _Button from \"antd/lib/button\";\nimport _UploadOutlined from \"@ant-design/icons/lib/icons/UploadOutlined\";\nimport _InputNumber from \"antd/lib/input-number\";\nimport _Select from \"antd/lib/select\";\nimport _DatePicker from \"antd/lib/date-picker\";\nimport _notification from \"antd/lib/notification\";\nimport _Input from \"antd/lib/input\";\nimport _Form from \"antd/lib/form\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { useState, useEffect } from \"react\";\nimport { useRouter } from \"next/router\";\nimport Head from \"next/head\";\nimport LayoutContent from \"@iso/components/utility/layoutContent\";\nimport DashboardLayout from \"@iso/containers/DashboardLayout/DashboardLayout\";\nimport LayoutWrapper from \"@iso/components/utility/layoutWrapper.js\";\nimport TitlePage from \"@iso/components/TitlePage/TitlePage\";\nimport nookies from \"nookies\";\nimport { toast } from \"react-toastify\";\nimport moment from \"moment\";\nimport SearchBar from \"@iso/components/Form/AddOrder/SearchBar\";\nimport Supplier from \"@iso/components/Form/AddOrder/SupplierForm\"; // import EditOrderTable from \"@iso/components/Form/AddOrder/EditOrderTable\";\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\n\nconst Edit = ({\n  props\n}) => {\n  const data = props.data;\n  const locations = props.locations;\n  var initialProducts = [];\n  const products = data.data.attributes.purchase_details.data;\n  products.forEach(element => {\n    initialProducts.push(element.attributes.products.data[0]);\n  }); //   var locations = props.locations.data;\n\n  const {\n    0: selectedLocations,\n    1: setSelectedLocations\n  } = useState();\n\n  const [form] = _Form.useForm();\n\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(false);\n  const {\n    0: mapPrice,\n    1: setMapPrice\n  } = useState({});\n  const {\n    0: productList,\n    1: setProductList\n  } = useState(initialProducts);\n  const {\n    0: supplier,\n    1: setSupplier\n  } = useState(data.data.attributes.supplier.data);\n  const {\n    0: totalPrice,\n    1: setTotalPrice\n  } = useState(data.data.attributes.delivery_total);\n  const {\n    0: grandTotal,\n    1: setGrandTotal\n  } = useState(0);\n  const {\n    0: additionalFee,\n    1: setAdditionalFee\n  } = useState();\n  const {\n    0: qty,\n    1: setQty\n  } = useState();\n  const {\n    0: listId,\n    1: setListId\n  } = useState([]);\n  const {\n    0: price,\n    1: setPrice\n  } = useState();\n  const {\n    0: dataValues,\n    1: setDataValues\n  } = useState();\n  const {\n    0: tempoDays,\n    1: setTempoDays\n  } = useState(0);\n  const {\n    0: tempoOption,\n    1: setTempoOption\n  } = useState(\"Hari\");\n  const {\n    0: doneCreateDetail,\n    1: setDoneCreateDetail\n  } = useState(false);\n  const router = useRouter(); // temp\n\n  const {\n    0: biayaTambahan,\n    1: setBiayaTambahan\n  } = useState(0);\n  const {\n    0: biayaPengiriman,\n    1: setBiayaPengiriman\n  } = useState(0);\n  const cookies = nookies.get(null, \"token\");\n  const tempList = [];\n  var tempListId = [];\n  var tempProductListId = [];\n  var tempSupplierId = 0;\n  var tempLocationId;\n  const mapPriceList = {};\n  const {\n    TextArea\n  } = _Input;\n  var formatter = new Intl.NumberFormat(\"id-ID\", {\n    style: \"currency\",\n    currency: \"IDR\",\n    maximumFractionDigits: 0\n  });\n\n  const onFinish = async values => {\n    setLoading(true);\n    setDataValues(values);\n    setLoading(false);\n  };\n\n  const createDetailOrder = async () => {\n    if (mapPrice) {\n      productList.forEach(element => {\n        var _dataValues$jumlah_qt;\n\n        const id = element.id;\n        var qty = parseInt((_dataValues$jumlah_qt = dataValues.jumlah_qty[id]) !== null && _dataValues$jumlah_qt !== void 0 ? _dataValues$jumlah_qt : 1);\n        var unit = \"\";\n        var subTotal = 0;\n        console.log(mapPrice);\n        console.log(id);\n\n        if (mapPrice[id]) {\n          var _mapPrice$id;\n\n          var price = 0;\n\n          if (price[id]) {\n            price = price[id].price_1st;\n          }\n\n          subTotal = ((_mapPrice$id = mapPrice[id]) === null || _mapPrice$id === void 0 ? void 0 : _mapPrice$id.priceUnit) - price;\n          var price1 = calculatePercentage(subTotal, mapPrice[id].dp1);\n          var price2 = calculatePercentage(price1, mapPrice[id].dp2);\n          var price3 = calculatePercentage(price2, mapPrice[id].dp3);\n          unit = mapPrice[id].defaultUnit, subTotal = price3 * qty;\n        } else {\n          subTotal = element.attributes.buy_price_1 - 0;\n          var price1 = calculatePercentage(subTotal, element.attributes.unit_1_dp1);\n          var price2 = calculatePercentage(price1, element.attributes.unit_1_dp2);\n          var price3 = calculatePercentage(price2, element.attributes.unit_1_dp3);\n          unit = element.attributes.unit_1, subTotal = price3 * qty;\n        }\n\n        POSTPurchaseDetail(qty, unit, subTotal, id);\n      });\n    }\n  };\n\n  const POSTPurchaseDetail = async (qty, unit, subTotal, productId) => {\n    var disc = 0;\n    if (price) if (price[productId]) disc = price[productId];\n    var data = {\n      data: {\n        total_order: String(qty),\n        unit_order: unit,\n        sub_total: parseInt(subTotal),\n        products: {\n          id: productId\n        },\n        disc: parseInt(disc)\n      }\n    };\n    const endpoint = process.env.NEXT_PUBLIC_URL + \"/purchase-details\";\n    const JSONdata = JSON.stringify(data);\n    const options = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: \"Bearer \" + cookies.token\n      },\n      body: JSONdata\n    };\n    const req = await fetch(endpoint, options);\n    const res = await req.json();\n\n    if (req.status === 200) {\n      var _res$data;\n\n      tempListId.push((_res$data = res.data) === null || _res$data === void 0 ? void 0 : _res$data.id);\n\n      if (tempListId.length === productList.length) {\n        setListId(tempListId);\n      }\n    }\n  };\n\n  const createOrder = async values => {\n    var orderDate = new Date(values.order_date);\n    var deliveryDate = new Date(values.delivery_date);\n    var supplierId = {\n      id: parseInt(values.supplier_id)\n    };\n    tempSupplierId = parseInt(values.supplier_id);\n    tempLocationId = parseInt(values.location);\n    listId.forEach(element => {\n      tempProductListId.push({\n        id: element\n      });\n    });\n    values.order_date = orderDate;\n    values.delivery_date = deliveryDate;\n    values.supplier_id = supplierId;\n    values.status = \"Dipesan\";\n    values.delivery_total = grandTotal === 0 ? parseInt(totalPrice) : parseInt(grandTotal);\n    values.purchase_details = null;\n    values.supplier_id = null;\n    var data = {\n      data: values\n    };\n    const endpoint = process.env.NEXT_PUBLIC_URL + \"/purchases\";\n    const JSONdata = JSON.stringify(data);\n    const options = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: \"Bearer \" + cookies.token\n      },\n      body: JSONdata\n    };\n    const req = await fetch(endpoint, options);\n    const res = await req.json();\n\n    if (req.status === 200) {\n      await putRelationOrder(res.data.id, res.data.attributes);\n    } else {\n      openNotificationWithIcon(\"error\");\n    }\n  };\n\n  const putRelationOrder = async (id, value) => {\n    const user = await getUserMe();\n    const dataOrder = {\n      data: value\n    };\n    dataOrder.data.supplier = {\n      id: tempSupplierId\n    };\n    dataOrder.data.purchase_details = tempProductListId;\n    dataOrder.data.added_by = user.name;\n    dataOrder.data.locations = {\n      id: tempLocationId\n    }; // clean object\n\n    for (var key in dataOrder) {\n      if (dataOrder[key] === null || dataOrder[key] === undefined) {\n        delete dataOrder[key];\n      }\n    }\n\n    const JSONdata = JSON.stringify(dataOrder);\n    const endpoint = process.env.NEXT_PUBLIC_URL + \"/purchases/\" + id;\n    const options = {\n      method: \"PUT\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: \"Bearer \" + cookies.token\n      },\n      body: JSONdata\n    };\n    const req = await fetch(endpoint, options);\n    const res = await req.json();\n\n    if (req.status === 200) {\n      form.resetFields();\n      router.replace(\"/dashboard/pembelian/order_pembelian\");\n      openNotificationWithIcon(\"success\");\n    } else {\n      openNotificationWithIcon(\"error\");\n    }\n  };\n\n  const getUserMe = async () => {\n    const endpoint = process.env.NEXT_PUBLIC_URL + \"/users/me\";\n    const options = {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: \"Bearer \" + cookies.token\n      }\n    };\n    const req = await fetch(endpoint, options);\n    const res = await req.json();\n    return res;\n  };\n\n  const onChange = async () => {\n    var isDuplicatedData = false;\n    tempList.find(item => {\n      productList.forEach(element => {\n        if (element.id === item.id) isDuplicatedData = true;\n      });\n    });\n\n    if (!isDuplicatedData) {\n      setProductList(productList => [...productList, tempList[0]]);\n      toast.success(\"Produk berhasil ditambahkan!\", {\n        position: toast.POSITION.TOP_RIGHT,\n        autoClose: 1000\n      });\n    }\n  };\n\n  const sumTotalPrice = () => {\n    var total = 0;\n\n    for (var key in mapPriceList) {\n      total = total + mapPriceList[key];\n    }\n\n    setTotalPrice(total);\n  };\n\n  const sumDeliveryPrice = price => {\n    setBiayaPengiriman(price);\n  };\n\n  const sumAdditionalPrice = () => {\n    var newTotal = 0;\n\n    for (var key in additionalFee) {\n      newTotal = newTotal + additionalFee[key];\n    }\n\n    var test = totalPrice + newTotal;\n    setBiayaTambahan(newTotal);\n  };\n\n  const changeQty = (values, data) => {\n    setQty(_objectSpread(_objectSpread({}, qty), {}, {\n      [data.id]: {\n        qty: values\n      }\n    }));\n  };\n\n  const calculatePercentage = (value, percent) => {\n    var newValue = value - value * percent / 100;\n    return newValue;\n  };\n\n  useEffect(() => {\n    setGrandTotal(totalPrice + biayaPengiriman + biayaTambahan);\n  }, [biayaPengiriman, biayaTambahan, totalPrice]);\n  useEffect(() => {\n    sumAdditionalPrice();\n  }, [additionalFee]);\n  useEffect(() => {\n    if (listId.length > 0) {\n      createOrder(dataValues);\n    }\n  }, [listId]);\n  useEffect(() => {\n    if (dataValues) createDetailOrder();\n  }, [dataValues]);\n  useEffect(() => {\n    console.log(price);\n  }, [price]);\n  useEffect(() => {\n    var testMap = {};\n    products.forEach(element => {\n      const product = element.attributes.products.data[0].attributes;\n      const productId = element.attributes.products.data[0].id;\n      const defaultUnit = element.attributes.unit_order;\n      var dp1 = 0;\n      var dp2 = 0;\n      var dp3 = 0;\n      var priceUnit = 0;\n\n      for (let index = 1; index < 6; index++) {\n        if (product[`unit_${index}`] === defaultUnit) {\n          dp1 = product[`unit_${index}_dp1`];\n          dp2 = product[`unit_${index}_dp2`];\n          dp3 = product[`unit_${index}_dp3`];\n          priceUnit = product[`buy_price_${index}`];\n        }\n      }\n\n      testMap[productId] = {\n        defaultUnit: defaultUnit,\n        priceUnit: priceUnit,\n        dp1: dp1,\n        dp2: dp2,\n        dp3: dp3\n      };\n      setMapPrice(testMap);\n    });\n  }, []);\n\n  const openNotificationWithIcon = type => {\n    if (type === \"error\") {\n      _notification[type]({\n        message: \"Gagal menambahkan data\",\n        description: \"Produk gagal ditambahkan. Silahkan cek NO PO atau kelengkapan data lainnya\"\n      });\n    } else if (type === \"success\") {\n      _notification[type]({\n        message: \"Berhasil menambahkan data\",\n        description: \"Produk berhasil ditambahkan. Silahkan cek pada halaman Order Pembelian\"\n      });\n    }\n  };\n\n  const validateError = () => {\n    var listError = form.getFieldsError();\n    listError.forEach(element => {\n      if (element.errors[0]) {\n        _notification[\"error\"]({\n          message: \"Field Kosong\",\n          description: element.errors[0]\n        });\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxs(_Fragment, {\n    children: [/*#__PURE__*/_jsx(Head, {\n      children: /*#__PURE__*/_jsx(\"title\", {\n        children: \"Edit Order Pembelian\"\n      })\n    }), /*#__PURE__*/_jsx(DashboardLayout, {\n      children: /*#__PURE__*/_jsxs(LayoutWrapper, {\n        style: {},\n        children: [/*#__PURE__*/_jsx(TitlePage, {\n          titleText: \"Edit Order Pembelian\"\n        }), /*#__PURE__*/_jsx(LayoutContent, {\n          children: /*#__PURE__*/_jsxs(_Form, {\n            form: form,\n            name: \"add_order\",\n            initialValues: {\n              remember: true\n            },\n            onFinish: onFinish,\n            children: [/*#__PURE__*/_jsxs(\"div\", {\n              className: \"flex flex-wrap -mx-3 mb-3\",\n              children: [/*#__PURE__*/_jsx(\"div\", {\n                className: \"w-full md:w-1/4 px-3 mb-2 md:mb-0\",\n                children: /*#__PURE__*/_jsx(Supplier, {\n                  onChangeSupplier: setSupplier,\n                  initialValue: data.data.attributes.supplier\n                })\n              }), /*#__PURE__*/_jsx(\"div\", {\n                className: \"w-full md:w-1/4 px-3 mb-2 md:mb-0\",\n                children: /*#__PURE__*/_jsx(_Form.Item, {\n                  initialValue: data.data.attributes.no_po,\n                  name: \"no_po\",\n                  rules: [{\n                    required: true,\n                    message: \"Nomor PO tidak boleh kosong!\"\n                  }],\n                  children: /*#__PURE__*/_jsx(_Input, {\n                    disabled: true,\n                    style: {\n                      height: \"40px\"\n                    },\n                    placeholder: \"No.PO\"\n                  })\n                })\n              }), /*#__PURE__*/_jsx(\"div\", {\n                className: \"w-full md:w-1/4 px-3 mb-2 md:mb-0\",\n                children: /*#__PURE__*/_jsx(_Form.Item, {\n                  initialValue: moment(data.data.attributes.order_date),\n                  name: \"order_date\",\n                  rules: [{\n                    required: true,\n                    message: \"Tanggal tidak boleh kosong!\"\n                  }],\n                  children: /*#__PURE__*/_jsx(_DatePicker, {\n                    placeholder: \"Tanggal Pesanan\",\n                    size: \"large\",\n                    format: \"DD/MM/YYYY\",\n                    style: {\n                      width: \"100%\"\n                    }\n                  })\n                })\n              }), /*#__PURE__*/_jsx(\"div\", {\n                className: \"w-full md:w-1/4 px-3 mb-2 md:mb-0\",\n                children: /*#__PURE__*/_jsx(_Form.Item, {\n                  initialValue: moment(data.data.attributes.delivery_date),\n                  name: \"delivery_date\",\n                  rules: [{\n                    required: true,\n                    message: \"Tanggal tidak boleh kosong!\"\n                  }],\n                  children: /*#__PURE__*/_jsx(_DatePicker, {\n                    placeholder: \"Tanggal Pengiriman\",\n                    size: \"large\",\n                    format: \"DD/MM/YYYY\",\n                    style: {\n                      width: \"100%\"\n                    }\n                  })\n                })\n              }), /*#__PURE__*/_jsxs(\"div\", {\n                className: \"w-full md:w-3/4 px-3 mb-2 md:mb-0\",\n                children: [/*#__PURE__*/_jsx(\"p\", {\n                  className: \"font-bold m-0\",\n                  children: \"Alamat Supplier : \"\n                }), /*#__PURE__*/_jsxs(\"p\", {\n                  className: \"m-0\",\n                  children: [\" \", supplier === null || supplier === void 0 ? void 0 : supplier.attributes.address]\n                }), /*#__PURE__*/_jsxs(\"p\", {\n                  children: [\" \", supplier === null || supplier === void 0 ? void 0 : supplier.attributes.phone]\n                })]\n              }), /*#__PURE__*/_jsx(\"div\", {\n                className: \"w-full md:w-1/4 px-3 mb-2 md:mb-0\",\n                children: /*#__PURE__*/_jsxs(_Input.Group, {\n                  compact: true,\n                  children: [/*#__PURE__*/_jsx(_Form.Item, {\n                    name: \"tempo_days\",\n                    initialValue: data.data.attributes.tempo_days,\n                    children: /*#__PURE__*/_jsx(_Input, {\n                      size: \"large\",\n                      style: {\n                        width: \"100%\"\n                      },\n                      onChange: setTempoDays\n                    })\n                  }), /*#__PURE__*/_jsx(_Form.Item, {\n                    name: \"tempo_time\",\n                    initialValue: data.data.attributes.tempo_time,\n                    children: /*#__PURE__*/_jsxs(_Select, {\n                      size: \"large\",\n                      onChange: setTempoOption,\n                      style: {\n                        width: \"100%\"\n                      },\n                      children: [/*#__PURE__*/_jsx(_Select.Option, {\n                        value: \"Hari\",\n                        children: \"Hari\"\n                      }), /*#__PURE__*/_jsx(_Select.Option, {\n                        value: \"Bulan\",\n                        children: \"Bulan\"\n                      })]\n                    })\n                  })]\n                })\n              }), /*#__PURE__*/_jsx(\"div\", {\n                className: \"w-full md:w-4/4 px-3 mb-2 mt-5 mx-3  md:mb-0\",\n                children: /*#__PURE__*/_jsx(SearchBar, {\n                  form: form,\n                  tempList: tempList,\n                  onChange: onChange\n                })\n              }), /*#__PURE__*/_jsx(\"div\", {\n                className: \"w-full md:w-4/4 px-3 mb-2 mt-5 mx-3  md:mb-0\"\n              })]\n            }), /*#__PURE__*/_jsx(\"div\", {\n              className: \"flex justify-end\",\n              children: /*#__PURE__*/_jsxs(\"p\", {\n                className: \"font-bold\",\n                children: [\"Total Item : \", productList.length, \" \"]\n              })\n            }), /*#__PURE__*/_jsx(\"div\", {\n              className: \"flex justify-end\",\n              children: /*#__PURE__*/_jsxs(\"p\", {\n                className: \"font-bold\",\n                children: [\"Total Harga : \", formatter.format(totalPrice), \" \"]\n              })\n            }), /*#__PURE__*/_jsxs(\"div\", {\n              className: \"flex flex-wrap -mx-3 mb-3\",\n              children: [/*#__PURE__*/_jsx(\"div\", {\n                className: \"w-full md:w-1/3 px-3 mt-5 md:mb-0\",\n                children: /*#__PURE__*/_jsx(_Form.Item, {\n                  name: \"delivery_details\",\n                  children: /*#__PURE__*/_jsx(TextArea, {\n                    rows: 4,\n                    placeholder: \"Detail Pengiriman\"\n                  })\n                })\n              }), /*#__PURE__*/_jsx(\"div\", {\n                className: \"w-full md:w-1/3 px-3 mt-5 md:mb-0\",\n                children: /*#__PURE__*/_jsx(_Form.Item, {\n                  name: \"delivery_address\",\n                  children: /*#__PURE__*/_jsx(TextArea, {\n                    rows: 4,\n                    placeholder: \"Alamat Pengiriman\"\n                  })\n                })\n              }), /*#__PURE__*/_jsx(\"div\", {\n                className: \"w-full md:w-1/3 px-3 mt-5 md:mb-0\",\n                children: /*#__PURE__*/_jsx(_Form.Item, {\n                  name: \"delivery_fee\",\n                  children: /*#__PURE__*/_jsx(_InputNumber, {\n                    onChange: sumDeliveryPrice,\n                    size: \"large\",\n                    placeholder: \"Biaya Pengiriman\",\n                    style: {\n                      width: \"100%\"\n                    }\n                  })\n                })\n              }), /*#__PURE__*/_jsx(\"div\", {\n                className: \"w-full md:w-1/3 px-3 mb-2 mt-5 md:mb-0\",\n                children: /*#__PURE__*/_jsx(_Form.Item, {\n                  name: \"delivery_status\",\n                  initialValue: \"Loading\",\n                  children: /*#__PURE__*/_jsxs(_Select, {\n                    size: \"large\",\n                    style: {\n                      width: \"100%\"\n                    },\n                    children: [/*#__PURE__*/_jsx(_Select.Option, {\n                      value: \"Loading\",\n                      children: \"Loading\"\n                    }), /*#__PURE__*/_jsx(_Select.Option, {\n                      value: \"Pending\",\n                      children: \"Pending\"\n                    }), /*#__PURE__*/_jsx(_Select.Option, {\n                      value: \"Antrian\",\n                      children: \"Antrian\"\n                    }), /*#__PURE__*/_jsx(_Select.Option, {\n                      value: \"Terkirim\",\n                      children: \"Terkirim\"\n                    })]\n                  })\n                })\n              }), /*#__PURE__*/_jsx(\"div\", {\n                className: \"w-full md:w-1/3 px-3 mt-5 md:mb-0\",\n                children: /*#__PURE__*/_jsx(_Form.Item, {\n                  name: \"location\",\n                  initialValue: data.data.attributes.location.data.attributes.name,\n                  rules: [{\n                    required: true,\n                    message: \"Lokasi tidak boleh kosong!\"\n                  }],\n                  children: /*#__PURE__*/_jsx(_Select, {\n                    size: \"large\",\n                    style: {\n                      width: \"100%\"\n                    },\n                    children: locations.data.map(element => {\n                      return /*#__PURE__*/_jsx(_Select.Option, {\n                        value: element.id,\n                        children: element.attributes.name\n                      });\n                    })\n                  })\n                })\n              }), /*#__PURE__*/_jsx(\"div\", {\n                className: \"w-full md:w-1/3 px-3 mb-2 mt-5 md:mb-0\",\n                children: /*#__PURE__*/_jsx(_Upload, {\n                  children: /*#__PURE__*/_jsx(_Button, {\n                    className: \"text-gray-500\",\n                    style: {\n                      width: \"100%\"\n                    },\n                    size: \"large\",\n                    icon: /*#__PURE__*/_jsx(_UploadOutlined, {}),\n                    children: \"Upload Dokumen\"\n                  })\n                })\n              })]\n            }), /*#__PURE__*/_jsx(\"div\", {\n              className: \"flex justify-end font-bold w-full mb-3 md:w-3/4\",\n              children: /*#__PURE__*/_jsx(\"p\", {\n                children: \"Biaya Tambahan Lain-lain\"\n              })\n            }), /*#__PURE__*/_jsxs(\"div\", {\n              className: \"flex justify-end\",\n              children: [/*#__PURE__*/_jsxs(\"div\", {\n                className: \"w-full md:w-1/3 px-3 mb-2 text-center md:mb-0\",\n                children: [/*#__PURE__*/_jsx(\"p\", {\n                  className: \"mb-4 font-bold\",\n                  children: \"Keterangan\"\n                }), /*#__PURE__*/_jsx(_Form.Item, {\n                  name: \"additional_fee_1_desc\",\n                  children: /*#__PURE__*/_jsx(_Input, {\n                    size: \"large\",\n                    style: {\n                      width: \"100%\"\n                    }\n                  })\n                }), /*#__PURE__*/_jsx(_Form.Item, {\n                  name: \"additional_fee_2_desc\",\n                  children: /*#__PURE__*/_jsx(_Input, {\n                    size: \"large\",\n                    style: {\n                      width: \"100%\"\n                    }\n                  })\n                }), /*#__PURE__*/_jsx(_Form.Item, {\n                  name: \"additional_fee_3_desc\",\n                  children: /*#__PURE__*/_jsx(_Input, {\n                    size: \"large\",\n                    style: {\n                      width: \"100%\"\n                    }\n                  })\n                }), /*#__PURE__*/_jsx(_Form.Item, {\n                  name: \"additional_fee_4_desc\",\n                  children: /*#__PURE__*/_jsx(_Input, {\n                    size: \"large\",\n                    style: {\n                      width: \"100%\"\n                    }\n                  })\n                }), /*#__PURE__*/_jsx(_Form.Item, {\n                  name: \"additional_fee_5_desc\",\n                  children: /*#__PURE__*/_jsx(_Input, {\n                    size: \"large\",\n                    style: {\n                      width: \"100%\"\n                    }\n                  })\n                })]\n              }), /*#__PURE__*/_jsxs(\"div\", {\n                className: \"w-full md:w-1/3 px-3 mb-2 text-center md:mb-0\",\n                children: [/*#__PURE__*/_jsx(\"p\", {\n                  className: \"mb-4 font-bold\",\n                  children: \"Jumlah\"\n                }), /*#__PURE__*/_jsx(_Form.Item, {\n                  name: \"additional_fee_1_sub\",\n                  children: /*#__PURE__*/_jsx(_InputNumber, {\n                    size: \"large\",\n                    style: {\n                      width: \"100%\"\n                    },\n                    onChange: e => setAdditionalFee(_objectSpread(_objectSpread({}, additionalFee), {}, {\n                      additional_fee_1_sub: e\n                    }))\n                  })\n                }), /*#__PURE__*/_jsx(_Form.Item, {\n                  name: \"additional_fee_2_sub\",\n                  children: /*#__PURE__*/_jsx(_InputNumber, {\n                    size: \"large\",\n                    style: {\n                      width: \"100%\"\n                    },\n                    onChange: e => setAdditionalFee(_objectSpread(_objectSpread({}, additionalFee), {}, {\n                      additional_fee_2_sub: e\n                    }))\n                  })\n                }), /*#__PURE__*/_jsx(_Form.Item, {\n                  name: \"additional_fee_3_sub\",\n                  children: /*#__PURE__*/_jsx(_InputNumber, {\n                    size: \"large\",\n                    style: {\n                      width: \"100%\"\n                    },\n                    onChange: e => setAdditionalFee(_objectSpread(_objectSpread({}, additionalFee), {}, {\n                      additional_fee_3_sub: e\n                    }))\n                  })\n                }), /*#__PURE__*/_jsx(_Form.Item, {\n                  name: \"additional_fee_4_sub\",\n                  children: /*#__PURE__*/_jsx(_InputNumber, {\n                    size: \"large\",\n                    style: {\n                      width: \"100%\"\n                    },\n                    onChange: e => setAdditionalFee(_objectSpread(_objectSpread({}, additionalFee), {}, {\n                      additional_fee_4_sub: e\n                    }))\n                  })\n                }), /*#__PURE__*/_jsx(_Form.Item, {\n                  name: \"additional_fee_5_sub\",\n                  children: /*#__PURE__*/_jsx(_InputNumber, {\n                    size: \"large\",\n                    style: {\n                      width: \"100%\"\n                    },\n                    onChange: e => setAdditionalFee(_objectSpread(_objectSpread({}, additionalFee), {}, {\n                      additional_fee_5_sub: e\n                    }))\n                  })\n                })]\n              })]\n            }), /*#__PURE__*/_jsx(\"div\", {\n              children: /*#__PURE__*/_jsxs(\"p\", {\n                className: \"font-bold flex justify-end\",\n                children: [\"Total Biaya : \", grandTotal === 0 ? formatter.format(totalPrice) : formatter.format(grandTotal)]\n              })\n            }), /*#__PURE__*/_jsx(_Form.Item, {\n              name: \"additional_note\",\n              children: /*#__PURE__*/_jsx(TextArea, {\n                rows: 4,\n                placeholder: \"Catatan Tambahan\"\n              })\n            }), /*#__PURE__*/_jsx(_Form.Item, {\n              className: \"mt-5\",\n              children: loading ? /*#__PURE__*/_jsx(\"div\", {\n                className: \" flex float-left ml-3 \",\n                children: /*#__PURE__*/_jsx(_Spin, {})\n              }) : /*#__PURE__*/_jsx(_Button, {\n                onClick: validateError,\n                htmlType: \"submit\",\n                className: \" hover:text-white hover:bg-cyan-700 border border-cyan-700 ml-1\",\n                children: \"Tambah\"\n              })\n            })]\n          })\n        })]\n      })\n    })]\n  });\n};\n\nEdit.getInitialProps = async context => {\n  const cookies = nookies.get(context);\n  const id = context.query.id;\n  const endpoint = process.env.NEXT_PUBLIC_URL + \"/purchases/\" + id + \"?populate=deep\";\n  const options = {\n    method: \"GET\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: \"Bearer \" + cookies.token\n    }\n  };\n  const res = await fetch(endpoint, options);\n  const data = await res.json();\n  const req = await fetchDataLocation(cookies);\n  const locations = await req.json();\n  return {\n    props: {\n      data,\n      locations\n    }\n  };\n};\n\nconst fetchDataLocation = async cookies => {\n  const endpoint = process.env.NEXT_PUBLIC_URL + \"/locations\";\n  const options = {\n    method: \"GET\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: \"Bearer \" + cookies.token\n    }\n  };\n  const req = await fetch(endpoint, options);\n  return req;\n};\n\nexport default Edit;","map":null,"metadata":{},"sourceType":"module"}