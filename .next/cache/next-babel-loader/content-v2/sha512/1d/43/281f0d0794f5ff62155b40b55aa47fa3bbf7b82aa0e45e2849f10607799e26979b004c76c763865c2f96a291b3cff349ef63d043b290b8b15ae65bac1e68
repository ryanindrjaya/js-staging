{"ast":null,"code":"function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport jwtConfig from '@iso/config/jwt.config';\nimport jwtDecode from 'jwt-decode';\n\nclass JwtAuth {\n  constructor() {\n    _defineProperty(this, \"login\", async userInfo => {\n      if (!userInfo.username || !userInfo.password) {\n        return {\n          error: 'please fill in the input'\n        };\n      }\n\n      return await fetch(jwtConfig.fetchUrl, {\n        method: 'post',\n        headers: {\n          Accept: 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(userInfo)\n      }).then(response => response.json()).then(res => {\n        const result = {};\n\n        if (res.token) {\n          result.profile = jwtDecode(res.token);\n          result.token = res.token;\n          return result;\n        } else {\n          return res;\n        }\n      }).catch(error => ({\n        error\n      }));\n    });\n  }\n\n}\n\nexport default new JwtAuth();","map":null,"metadata":{},"sourceType":"module"}