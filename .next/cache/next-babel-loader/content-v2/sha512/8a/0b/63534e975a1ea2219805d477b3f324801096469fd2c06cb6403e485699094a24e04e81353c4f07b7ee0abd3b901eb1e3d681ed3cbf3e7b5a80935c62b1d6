{"ast":null,"code":"import _Button from \"antd/lib/button\";\nimport _Spin from \"antd/lib/spin\";\nimport _Select from \"antd/lib/select\";\nimport _LockOutlined from \"@ant-design/icons/lib/icons/LockOutlined\";\nimport _MailOutlined from \"@ant-design/icons/lib/icons/MailOutlined\";\nimport _Input from \"antd/lib/input\";\nimport _UserOutlined from \"@ant-design/icons/lib/icons/UserOutlined\";\nimport _Form from \"antd/lib/form\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { useState } from \"react\";\nimport Head from \"next/head\";\nimport LayoutContent from \"@iso/components/utility/layoutContent\";\nimport DashboardLayout from \"../../../containers/DashboardLayout/DashboardLayout\";\nimport LayoutWrapper from \"@iso/components/utility/layoutWrapper.js\";\nimport TitlePage from \"../../../components/TitlePage/TitlePage\";\nimport nookies from \"nookies\";\nimport { toast } from \"react-toastify\";\nimport Locations from \"../../../components/Form/Locations\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\n\nconst Tambah = ({\n  props\n}) => {\n  var _props$data;\n\n  const [form] = _Form.useForm();\n\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(false);\n  const {\n    0: selectLocations,\n    1: setSelectLocation\n  } = useState({});\n  const cookies = nookies.get(null, \"token\");\n  const role = props === null || props === void 0 ? void 0 : (_props$data = props.data) === null || _props$data === void 0 ? void 0 : _props$data.roles;\n  const locations = props === null || props === void 0 ? void 0 : props.locations;\n\n  const onFinish = async values => {\n    setLoading(true);\n    const role = await getRole(values.role_id);\n    const locationsID = [];\n\n    for (let index = 0; index < values.locations.length; index++) {\n      locationsID.push({\n        id: values.locations[index]\n      });\n    }\n\n    const data = _objectSpread(_objectSpread({}, values), {}, {\n      role,\n      locations: locationsID,\n      deleteAble: true\n    });\n\n    const endpoint = process.env.NEXT_PUBLIC_URL + \"/auth/local/register\";\n    const JSONdata = JSON.stringify(data);\n    const options = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: \"Bearer \" + cookies.token\n      },\n      body: JSONdata\n    };\n    const req = await fetch(endpoint, options);\n    const res = await req.json();\n\n    if (req.status === 200) {\n      form.resetFields();\n      toast.success(\"Data Pengguna berhasil ditambahkan!\", {\n        position: toast.POSITION.TOP_RIGHT\n      });\n    } else {\n      var _res$error;\n\n      (_res$error = res.error) === null || _res$error === void 0 ? void 0 : _res$error.details.errors.map(error => {\n        const ErrorMsg = error.path[0];\n        toast.error(\"Tidak dapat menambahkan Pengguna\", {\n          position: toast.POSITION.TOP_RIGHT\n        });\n      });\n    }\n\n    setLoading(false);\n  };\n\n  const getRole = async roleId => {\n    const endpoint = process.env.NEXT_PUBLIC_URL + \"/users-permissions/roles/\" + roleId;\n    const options = {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: \"Bearer \" + cookies.token\n      }\n    };\n    const req = await fetch(endpoint, options);\n    const res = await req.json();\n    return res.role;\n  };\n\n  return /*#__PURE__*/_jsxs(_Fragment, {\n    children: [/*#__PURE__*/_jsx(Head, {\n      children: /*#__PURE__*/_jsx(\"title\", {\n        children: \"Tambahkan Pengguna\"\n      })\n    }), /*#__PURE__*/_jsx(DashboardLayout, {\n      children: /*#__PURE__*/_jsxs(LayoutWrapper, {\n        style: {},\n        children: [/*#__PURE__*/_jsx(TitlePage, {\n          titleText: \"Tambahkan Pengguna\"\n        }), /*#__PURE__*/_jsx(LayoutContent, {\n          children: /*#__PURE__*/_jsxs(_Form, {\n            form: form,\n            name: \"add_user\",\n            initialValues: {\n              remember: true\n            },\n            onFinish: onFinish,\n            children: [/*#__PURE__*/_jsxs(\"div\", {\n              className: \"flex flex-wrap -mx-3 mb-6\",\n              children: [/*#__PURE__*/_jsx(\"div\", {\n                className: \"w-full md:w-1/3 px-3 mb-2 md:mb-0\",\n                children: /*#__PURE__*/_jsx(_Form.Item, {\n                  name: \"username\",\n                  rules: [{\n                    required: true,\n                    message: \"Username tidak boleh kosong!\"\n                  }],\n                  children: /*#__PURE__*/_jsx(_Input, {\n                    style: {\n                      height: \"50px\"\n                    },\n                    prefix: /*#__PURE__*/_jsx(_UserOutlined, {\n                      style: {\n                        fontSize: \"150%\"\n                      },\n                      className: \"site-form-item-icon mr-5\"\n                    }),\n                    placeholder: \"Username\"\n                  })\n                })\n              }), /*#__PURE__*/_jsx(\"div\", {\n                className: \"w-full md:w-1/3 px-3 mb-2 md:mb-0\",\n                children: /*#__PURE__*/_jsx(_Form.Item, {\n                  name: \"name\",\n                  rules: [{\n                    required: true,\n                    message: \"Nama tidak boleh kosong!\"\n                  }],\n                  children: /*#__PURE__*/_jsx(_Input, {\n                    style: {\n                      height: \"50px\"\n                    },\n                    prefix: /*#__PURE__*/_jsx(_UserOutlined, {\n                      style: {\n                        fontSize: \"150%\"\n                      },\n                      className: \"site-form-item-icon mr-5\"\n                    }),\n                    placeholder: \"Nama\"\n                  })\n                })\n              }), /*#__PURE__*/_jsx(\"div\", {\n                className: \"w-full md:w-1/3 px-3 mb-2 md:mb-0\",\n                children: /*#__PURE__*/_jsx(_Form.Item, {\n                  name: \"email\",\n                  rules: [{\n                    required: true,\n                    message: \"Email tidak boleh kosong!\"\n                  }],\n                  children: /*#__PURE__*/_jsx(_Input, {\n                    style: {\n                      height: \"50px\"\n                    },\n                    prefix: /*#__PURE__*/_jsx(_MailOutlined, {\n                      style: {\n                        fontSize: \"150%\"\n                      },\n                      className: \"site-form-item-icon mr-5\"\n                    }),\n                    placeholder: \"Email\"\n                  })\n                })\n              }), /*#__PURE__*/_jsx(\"div\", {\n                className: \"w-full md:w-1/3 px-3 mb-2 md:mb-0\",\n                children: /*#__PURE__*/_jsx(_Form.Item, {\n                  name: \"password\",\n                  rules: [{\n                    required: true,\n                    message: \"Password tidak boleh kosong!\"\n                  }],\n                  children: /*#__PURE__*/_jsx(_Input.Password, {\n                    style: {\n                      height: \"50px\"\n                    },\n                    prefix: /*#__PURE__*/_jsx(_LockOutlined, {\n                      style: {\n                        fontSize: \"150%\"\n                      },\n                      className: \"site-form-item-icon mr-5\"\n                    }),\n                    placeholder: \"Kata Sandi\"\n                  })\n                })\n              }), /*#__PURE__*/_jsx(\"div\", {\n                className: \"w-full md:w-1/3 px-3 mb-2 md:mb-0\",\n                children: /*#__PURE__*/_jsx(_Form.Item, {\n                  name: \"confirm\",\n                  dependencies: [\"password\"],\n                  hasFeedback: true,\n                  rules: [{\n                    required: true,\n                    message: \"Konfirmasi Kata Sandi diperlukan\"\n                  }, ({\n                    getFieldValue\n                  }) => ({\n                    validator(_, value) {\n                      if (!value || getFieldValue(\"password\") === value) {\n                        return Promise.resolve();\n                      }\n\n                      return Promise.reject(new Error(\"Kata Sandi tidak cocok!\"));\n                    }\n\n                  })],\n                  children: /*#__PURE__*/_jsx(_Input.Password, {\n                    style: {\n                      height: \"50px\"\n                    },\n                    prefix: /*#__PURE__*/_jsx(_LockOutlined, {\n                      style: {\n                        fontSize: \"150%\"\n                      },\n                      className: \"site-form-item-icon mr-5\"\n                    }),\n                    placeholder: \"Konfirmasi Kata Sandi\"\n                  })\n                })\n              })]\n            }), /*#__PURE__*/_jsx(Locations, {\n              data: locations,\n              onSelect: setSelectLocation,\n              errMsg: \"Harap pilih lokasi user\",\n              required: true\n            }), /*#__PURE__*/_jsx(_Form.Item, {\n              name: \"role_id\",\n              className: \"w-1/4 mb-5 ml-1\",\n              children: /*#__PURE__*/_jsx(_Select, {\n                size: \"large\",\n                placeholder: \"Role\",\n                children: role.map(role => role.name === \"Authenticated\" || role.name === \"Public\" ? /*#__PURE__*/_jsx(_Select.Option, {\n                  hidden: true,\n                  disabled: true,\n                  value: role.id,\n                  children: role.name\n                }) : /*#__PURE__*/_jsx(_Select.Option, {\n                  value: role.id,\n                  children: role.name\n                }))\n              })\n            }), /*#__PURE__*/_jsx(_Form.Item, {\n              children: loading ? /*#__PURE__*/_jsx(\"div\", {\n                className: \" flex float-left ml-3\",\n                children: /*#__PURE__*/_jsx(_Spin, {})\n              }) : /*#__PURE__*/_jsx(_Button, {\n                htmlType: \"submit\",\n                className: \" hover:text-white hover:bg-cyan-700 border border-cyan-700 ml-1\",\n                children: \"Submit\"\n              })\n            })]\n          })\n        })]\n      })\n    })]\n  });\n};\n\nTambah.getInitialProps = async context => {\n  const cookies = nookies.get(context);\n  let data;\n  const req = await fetchData(cookies, \"/users-permissions/roles\");\n  data = await req.json();\n  const reqLocations = await fetchData(cookies, \"/locations\");\n  const resLocations = await reqLocations.json();\n  return {\n    props: {\n      data,\n      locations: resLocations\n    }\n  };\n};\n\nconst fetchData = async (cookies, url) => {\n  const endpoint = process.env.NEXT_PUBLIC_URL + url;\n  const options = {\n    method: \"GET\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: \"Bearer \" + cookies.token\n    }\n  };\n  const req = await fetch(endpoint, options);\n  return req;\n};\n\nexport default Tambah;","map":null,"metadata":{},"sourceType":"module"}