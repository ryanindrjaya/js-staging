{"ast":null,"code":"import _EditOutlined from \"@ant-design/icons/lib/icons/EditOutlined\";\nimport _CheckOutlined from \"@ant-design/icons/lib/icons/CheckOutlined\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport { Textarea as Input } from './uielements/input';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function EditableComponent(props) {\n  const [state, setState] = React.useState({\n    value: props.value,\n    editable: false\n  });\n\n  function handleChange(event) {\n    const value = event.target.value;\n    setState(_objectSpread(_objectSpread({}, state), {}, {\n      value\n    }));\n  }\n\n  function check() {\n    setState(_objectSpread(_objectSpread({}, state), {}, {\n      editable: false\n    }));\n\n    if (props.onChange) {\n      props.onChange(props.itemKey, state.value);\n    }\n  }\n\n  function edit() {\n    setState(_objectSpread(_objectSpread({}, state), {}, {\n      editable: true\n    }));\n  }\n\n  const {\n    value,\n    editable\n  } = state;\n  return /*#__PURE__*/_jsx(\"div\", {\n    className: \"isoNoteContent\",\n    children: editable ? /*#__PURE__*/_jsxs(\"div\", {\n      className: \"isoNoteEditWrapper\",\n      children: [/*#__PURE__*/_jsx(Input, {\n        rows: 3,\n        value: value,\n        onChange: handleChange,\n        onPressEnter: check\n      }), /*#__PURE__*/_jsx(_CheckOutlined, {\n        className: \"isoNoteEditIcon\",\n        onClick: check\n      })]\n    }) : /*#__PURE__*/_jsxs(\"p\", {\n      className: \"isoNoteTextWrapper\",\n      onClick: edit,\n      children: [value || ' ', /*#__PURE__*/_jsx(_EditOutlined, {\n        className: \"isoNoteEditIcon\"\n      })]\n    })\n  });\n}","map":null,"metadata":{},"sourceType":"module"}