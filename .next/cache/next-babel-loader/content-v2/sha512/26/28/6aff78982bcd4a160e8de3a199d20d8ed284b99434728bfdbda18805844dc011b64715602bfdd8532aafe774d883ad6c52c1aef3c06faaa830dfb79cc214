{"ast":null,"code":"const notesAction = {\n  CHANGE_NOTE: 'CHANGE_NOTE',\n  ADD_NOTE: 'ADD_NOTE',\n  EDIT_NOTE: 'EDIT_NOTE',\n  DELETE_NOTE: 'DELETE_NOTE',\n  CHANGE_COLOR: 'CHANGE_COLOR',\n  changeNote: id => {\n    return (dispatch, getState) => {\n      const notes = getState().Notes.notes;\n      const seectedColor = notes[notes.findIndex(note => note.id === id)].color;\n      dispatch({\n        type: notesAction.CHANGE_NOTE,\n        selectedId: id,\n        seectedColor\n      });\n    };\n  },\n  addNote: () => {\n    return (dispatch, getState) => {\n      const newNote = {\n        id: new Date(),\n        note: 'New Note',\n        createTime: new Date(),\n        color: getState().Notes.seectedColor\n      };\n      const notes = [newNote, ...getState().Notes.notes];\n      dispatch({\n        type: notesAction.ADD_NOTE,\n        selectedId: newNote.id,\n        notes\n      });\n    };\n  },\n  editNote: (id, newNote) => {\n    return (dispatch, getState) => {\n      const oldNotes = getState().Notes.notes;\n      const notes = [];\n      oldNotes.forEach(note => {\n        if (note.id !== id) {\n          notes.push(note);\n        } else {\n          note.note = newNote;\n          notes.push(note);\n        }\n      });\n      dispatch({\n        type: notesAction.EDIT_NOTE,\n        notes\n      });\n    };\n  },\n  deleteNote: id => {\n    return (dispatch, getState) => {\n      const oldNotes = getState().Notes.notes;\n      const notes = [];\n      oldNotes.forEach(note => {\n        if (note.id !== id) {\n          notes.push(note);\n        }\n      });\n      let selectedId = getState().Notes.selectedId;\n\n      if (selectedId === id) {\n        if (notes.length === 0) {\n          selectedId = undefined;\n        } else {\n          selectedId = notes[0].id;\n        }\n      }\n\n      dispatch({\n        type: notesAction.DELETE_NOTE,\n        notes,\n        selectedId\n      });\n    };\n  },\n  changeColor: seectedColor => {\n    return (dispatch, getState) => {\n      const oldNotes = getState().Notes.notes;\n      const selectedId = getState().Notes.selectedId;\n      const notes = [];\n      oldNotes.forEach(note => {\n        if (note.id !== selectedId) {\n          notes.push(note);\n        } else {\n          note.color = seectedColor;\n          notes.push(note);\n        }\n      });\n      dispatch({\n        type: notesAction.CHANGE_COLOR,\n        notes,\n        seectedColor\n      });\n    };\n  }\n};\nexport default notesAction;","map":null,"metadata":{},"sourceType":"module"}