{"ast":null,"code":"import _ConfigProvider from \"antd/lib/config-provider\";\nimport React from 'react';\nimport { IntlProvider } from 'react-intl';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { ThemeProvider } from 'styled-components';\nimport themes from '@iso/config/theme/theme.config';\nimport AppLocale from '@iso/config/translation';\nimport useWindowSize from '@iso/lib/hooks/useWindowSize';\nimport appActions from '@iso/redux/app/actions';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar toggleAll = appActions.toggleAll;\nexport default function AppProvider(_ref) {\n  var children = _ref.children;\n  var dispatch = useDispatch();\n\n  var _useSelector = useSelector(function (state) {\n    return state.LanguageSwitcher.language;\n  }),\n      locale = _useSelector.locale;\n\n  var _useSelector2 = useSelector(function (state) {\n    return state.ThemeSwitcher.changeThemes;\n  }),\n      themeName = _useSelector2.themeName;\n\n  var currentAppLocale = AppLocale[locale];\n\n  var _useWindowSize = useWindowSize(),\n      width = _useWindowSize.width,\n      height = _useWindowSize.height;\n\n  React.useEffect(function () {\n    dispatch(toggleAll(width, height));\n  }, [dispatch]);\n  return /*#__PURE__*/_jsx(_ConfigProvider, {\n    locale: currentAppLocale.antd,\n    children: /*#__PURE__*/_jsx(IntlProvider, {\n      locale: currentAppLocale.locale,\n      messages: currentAppLocale.messages,\n      children: /*#__PURE__*/_jsx(ThemeProvider, {\n        theme: themes[themeName],\n        children: children\n      })\n    })\n  });\n}","map":null,"metadata":{},"sourceType":"module"}