{"ast":null,"code":"var _jsxFileName = \"/Users/yudiananta/Development/NextJS/ERP Dev/JS Deploy/JS-Deploy/components/utility/intlMessages.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from \"react\";\nimport { injectIntl, FormattedMessage } from \"react-intl\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst InjectMassage = props => /*#__PURE__*/_jsxDEV(FormattedMessage, _objectSpread({}, props), void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 4,\n  columnNumber: 34\n}, this);\n\nexport default injectIntl(InjectMassage, {\n  withRef: false\n});","map":{"version":3,"sources":["/Users/yudiananta/Development/NextJS/ERP Dev/JS Deploy/JS-Deploy/components/utility/intlMessages.js"],"names":["React","injectIntl","FormattedMessage","InjectMassage","props","withRef"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,EAAqBC,gBAArB,QAA6C,YAA7C;;;AAEA,MAAMC,aAAa,GAAIC,KAAD,iBAAW,QAAC,gBAAD,oBAAsBA,KAAtB;AAAA;AAAA;AAAA;AAAA,QAAjC;;AACA,eAAeH,UAAU,CAACE,aAAD,EAAgB;AACvCE,EAAAA,OAAO,EAAE;AAD8B,CAAhB,CAAzB","sourcesContent":["import React from \"react\";\nimport { injectIntl, FormattedMessage } from \"react-intl\";\n\nconst InjectMassage = (props) => <FormattedMessage {...props} />;\nexport default injectIntl(InjectMassage, {\n  withRef: false,\n});\n"]},"metadata":{},"sourceType":"module"}