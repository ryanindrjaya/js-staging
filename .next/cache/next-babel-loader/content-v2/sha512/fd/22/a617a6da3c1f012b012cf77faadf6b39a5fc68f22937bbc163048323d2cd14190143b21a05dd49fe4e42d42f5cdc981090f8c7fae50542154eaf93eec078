{"ast":null,"code":"import { all, takeEvery, put, call } from 'redux-saga/effects';\nimport actions from './actions';\nimport youtubeSearchApi from '@iso/config/youtube_search.config';\nexport const per_page = 10;\nconst maxResults = 10;\nconst youtubeSearchURL = `https://www.googleapis.com/youtube/v3/search?maxResults=${maxResults}&type=video&key=${youtubeSearchApi}&part=snippet`;\n\nconst onSearchReqeust = async (searcText, pageToken) => await fetch(`${youtubeSearchURL}&q=${encodeURIComponent(searcText)}${pageToken}`).then(res => res.json()).then(res => res).catch(error => error);\n\nfunction* searchRequest({\n  payload\n}) {\n  const {\n    searcText,\n    pageToken\n  } = payload;\n\n  try {\n    const searchResult = yield call(onSearchReqeust, searcText, pageToken ? `&pageToken=${pageToken}` : '');\n\n    if (searchResult.items) {\n      yield put(actions.youtubeSearchSuccess(searchResult.items, searchResult.pageInfo.totalResults, searchResult.nextPageToken, searchResult.prevPageToken));\n    } else {\n      yield put(actions.youtubeSearchSuccess());\n    }\n  } catch (error) {\n    yield put(actions.youtubeSearchSuccess());\n  }\n}\n\nexport default function* rootSaga() {\n  yield all([takeEvery(actions.YOUTUBE_SEARCH, searchRequest)]);\n}","map":null,"metadata":{},"sourceType":"module"}