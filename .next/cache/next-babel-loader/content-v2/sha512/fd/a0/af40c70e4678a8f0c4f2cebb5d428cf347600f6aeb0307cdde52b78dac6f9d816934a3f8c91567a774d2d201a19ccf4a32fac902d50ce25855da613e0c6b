{"ast":null,"code":"import _Input from \"antd/lib/input\";\nimport Head from \"next/head\";\nimport React, { useState } from \"react\";\nimport LayoutContent from \"@iso/components/utility/layoutContent\";\nimport DashboardLayout from \"../../../containers/DashboardLayout/DashboardLayout\";\nimport LayoutWrapper from \"@iso/components/utility/layoutWrapper.js\";\nimport SupplierTable from \"../../../components/ReactDataTable/SupplierTable\";\nimport { useRouter } from \"next/router\";\nimport TitlePage from \"../../../components/TitlePage/TitlePage\";\nimport { toast } from \"react-toastify\";\nimport nookies from \"nookies\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\n\nconst Supplier = ({\n  props\n}) => {\n  const data = props.data;\n  const {\n    0: supplier,\n    1: setSupplier\n  } = useState(data);\n  const {\n    0: isSearching,\n    1: setIsSearching\n  } = useState(false);\n  const {\n    Search\n  } = _Input;\n  const router = useRouter();\n\n  const handleAdd = () => {\n    router.push(\"/dashboard/supplier/tambah\");\n  };\n\n  const handleDelete = async id => {\n    const endpoint = process.env.NEXT_PUBLIC_URL + \"/suppliers/\" + id;\n    const cookies = nookies.get(null, \"token\");\n    const options = {\n      method: \"DELETE\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: \"Bearer \" + cookies.token\n      }\n    };\n    const req = await fetch(endpoint, options);\n    const res = await req.json();\n\n    if (res) {\n      const req = await fetchData(cookies);\n      const res = await req.json();\n      toast.success(\"Supplier berhasil dihapus\");\n      setSupplier(res);\n    }\n  };\n\n  const handlePageChange = async page => {\n    const cookies = nookies.get(null, \"token\");\n    const endpoint = process.env.NEXT_PUBLIC_URL + \"/suppliers?pagination[page]=\" + page;\n    const options = {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: \"Bearer \" + cookies.token\n      }\n    };\n\n    try {\n      const req = await fetch(endpoint, options);\n      const res = await req.json();\n\n      if (res) {\n        setSupplier(prevData => ({\n          data: filterDuplicateData(prevData.data.concat(res.data)),\n          meta: prevData.meta\n        }));\n      } else {\n        console.log(\"something is wrong\");\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const onSearch = async e => {\n    if (e.target.value.length >= 2) {\n      setIsSearching(true);\n      const req = await searchQuery(e.target.value);\n      const res = await req.json();\n      setSupplier(res);\n      setIsSearching(false);\n    } else {\n      setSupplier(data);\n      setIsSearching(false);\n    }\n  };\n\n  const searchQuery = async keywords => {\n    const endpoint = process.env.NEXT_PUBLIC_URL + \"/suppliers?filters[$or][0][name][$contains]=\" + keywords + \"&filters[$or][1][id_supplier][$contains]=\" + keywords + \"&populate=*\";\n    const cookies = nookies.get(null, \"token\");\n    const options = {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: \"Bearer \" + cookies.token\n      }\n    };\n    const req = await fetch(endpoint, options);\n    return req;\n  };\n\n  return /*#__PURE__*/_jsxs(_Fragment, {\n    children: [/*#__PURE__*/_jsx(Head, {\n      children: /*#__PURE__*/_jsx(\"title\", {\n        children: \"Daftar Supplier\"\n      })\n    }), /*#__PURE__*/_jsx(DashboardLayout, {\n      children: /*#__PURE__*/_jsxs(LayoutWrapper, {\n        style: {},\n        children: [/*#__PURE__*/_jsx(TitlePage, {\n          titleText: \"Supplier\"\n        }), /*#__PURE__*/_jsxs(LayoutContent, {\n          children: [/*#__PURE__*/_jsxs(\"div\", {\n            className: \"w-full flex justify-between\",\n            children: [/*#__PURE__*/_jsx(Search, {\n              className: \"\",\n              loading: isSearching,\n              onChange: e => onSearch(e),\n              placeholder: \"Cari Supplier\",\n              style: {\n                width: 200\n              }\n            }), /*#__PURE__*/_jsx(\"button\", {\n              onClick: handleAdd,\n              type: \"button\",\n              className: \"bg-cyan-700 rounded px-5 py-2 hover:bg-cyan-800  shadow-sm flex float-right mb-5\",\n              children: /*#__PURE__*/_jsx(\"div\", {\n                className: \"text-white text-center text-sm font-bold\",\n                children: /*#__PURE__*/_jsx(\"a\", {\n                  className: \"text-white no-underline text-xs sm:text-xs\",\n                  children: \"+ Tambah\"\n                })\n              })\n            })]\n          }), /*#__PURE__*/_jsx(SupplierTable, {\n            data: supplier,\n            onDelete: handleDelete,\n            onPageChange: handlePageChange\n          })]\n        })]\n      })\n    })]\n  });\n};\n\nSupplier.getInitialProps = async context => {\n  const cookies = nookies.get(context);\n  let data;\n  const req = await fetchData(cookies);\n  data = await req.json();\n  return {\n    props: {\n      data\n    }\n  };\n};\n\nconst fetchData = async cookies => {\n  const endpoint = process.env.NEXT_PUBLIC_URL + \"/suppliers?populate=*\";\n  const options = {\n    method: \"GET\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: \"Bearer \" + cookies.token\n    }\n  };\n  const req = await fetch(endpoint, options);\n  return req;\n};\n\nexport default Supplier;","map":null,"metadata":{},"sourceType":"module"}