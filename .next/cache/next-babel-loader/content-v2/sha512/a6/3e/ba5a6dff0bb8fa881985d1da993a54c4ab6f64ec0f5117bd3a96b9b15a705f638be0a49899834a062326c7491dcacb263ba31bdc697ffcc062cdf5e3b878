{"ast":null,"code":"import _defineProperty from \"/Users/yudiananta/Development/NextJS/ERP Dev/JS Deploy/ERP-Sejati/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectWithoutProperties from \"/Users/yudiananta/Development/NextJS/ERP Dev/JS Deploy/ERP-Sejati/node_modules/next/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _excluded = [\"type\"];\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport clone from 'clone';\nimport { newInvoice } from './config';\nimport actions from './actions';\nvar initState = {\n  invoices: [],\n  initialInvoices: false,\n  currentInvoice: {},\n  editableInvoice: {},\n  isNewInvoice: false,\n  enableEditView: false\n};\nexport default function cardReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initState;\n\n  var _ref = arguments.length > 1 ? arguments[1] : undefined;\n\n  var type = _ref.type,\n      action = _objectWithoutProperties(_ref, _excluded);\n\n  switch (type) {\n    case actions.UPDATE_INVOICE:\n      {\n        var currentInvoice = action.invoice ? action.invoice : state.currentInvoice;\n        return _objectSpread(_objectSpread({}, state), {}, {\n          invoices: action.invoices,\n          currentInvoice: clone(currentInvoice),\n          initialInvoices: true,\n          isNewInvoice: false,\n          enableEditView: false\n        });\n      }\n\n    case actions.SELECT_CURRENT_INVOICE:\n      {\n        var invoices = state.invoices;\n        var index = invoices.map(function (invoice) {\n          return invoice.id;\n        }).indexOf(action.id);\n        var isNewInvoice = index === -1;\n\n        var _currentInvoice = isNewInvoice ? _objectSpread({\n          id: action.id,\n          number: \"#\".concat(action.id),\n          key: action.id\n        }, newInvoice) : invoices[index];\n\n        var enableEditView = isNewInvoice;\n        return _objectSpread(_objectSpread({}, state), {}, {\n          currentInvoice: _currentInvoice,\n          isNewInvoice: isNewInvoice,\n          enableEditView: enableEditView,\n          editableInvoice: clone(_currentInvoice)\n        });\n      }\n\n    case actions.TOGGLE_VIEW:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        enableEditView: action.view,\n        editableInvoice: clone(state.currentInvoice)\n      });\n\n    case actions.UPDATE_EDIT_INVOICE:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        editableInvoice: clone(action.invoice)\n      });\n\n    default:\n      return state;\n  }\n}","map":null,"metadata":{},"sourceType":"module"}