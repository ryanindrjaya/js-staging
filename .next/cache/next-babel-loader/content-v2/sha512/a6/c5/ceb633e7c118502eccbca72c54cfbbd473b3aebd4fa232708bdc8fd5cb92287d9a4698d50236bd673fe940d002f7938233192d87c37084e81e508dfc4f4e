{"ast":null,"code":"import _Form from \"antd/lib/form\";\nimport _Select from \"antd/lib/select\";\nvar _jsxFileName = \"/Users/yudiananta/Development/NextJS/ERP Dev/JS Deploy/ERP-Sejati/components/Form/AddProduct/Categories.js\";\nimport React, { useState } from \"react\";\nimport nookies from \"nookies\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Categories({\n  selectedCategory,\n  onSelectCategory,\n  setSubCategories,\n  setSelectedSubCategory,\n  selectedSubCategory,\n  initialValue\n}) {\n  const {\n    0: category,\n    1: setCategory\n  } = useState(selectedCategory);\n  const {\n    0: data,\n    1: setData\n  } = useState([]);\n  const cookies = nookies.get(null, \"token\");\n\n  const fetchSubCategoriesById = async id => {\n    const endpoint = process.env.NEXT_PUBLIC_URL + `/sub-categories?populate[category][filters][id][$eq]=${id}&populate=*`;\n    const options = {\n      method: \"GET\",\n      headers: {\n        Authorization: \"Bearer \" + cookies.token\n      }\n    };\n    const req = await fetch(endpoint, options);\n    const res = await req.json();\n    const listOfData = [];\n    res.data.forEach(element => {\n      if (element.attributes.category.data !== null) {\n        listOfData.push(element);\n      }\n    });\n    setSubCategories(listOfData);\n  };\n\n  const handleChangeCategory = newValue => {\n    setSelectedSubCategory(0);\n    fetchSubCategoriesById(newValue);\n    setCategory(newValue);\n    onSelectCategory(newValue);\n  };\n\n  const handleSearchCategory = newValue => {\n    if (newValue) {\n      fetchCategory(newValue, setData);\n    } else {\n      setData([]);\n    }\n  };\n\n  const options = data.map(d => /*#__PURE__*/_jsxDEV(_Select.Option, {\n    children: d.label\n  }, d.value, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 35\n  }, this));\n\n  const fetchCategory = async (query, callback) => {\n    if (!query) {\n      callback([]);\n    } else {\n      try {\n        const endpoint = process.env.NEXT_PUBLIC_URL + `/categories?filters[$or][0][name][$contains]=${query}&filters[$or][1][category_id][$contains]=${query}`;\n        const options = {\n          method: \"GET\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: \"Bearer \" + cookies.token\n          }\n        };\n        const req = await fetch(endpoint, options);\n        const res = await req.json();\n\n        if (req.status == 200) {\n          const categoriesResult = res.data.map(categories => ({\n            label: `${categories.attributes.category_id} - ${categories.attributes.name}`,\n            value: categories.id\n          }));\n          callback(categoriesResult);\n        }\n      } catch (error) {\n        console.log(error);\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"w-full md:w-full mb-2 md:mb-0\",\n    children: /*#__PURE__*/_jsxDEV(_Form.Item, {\n      initialValue: initialValue,\n      name: \"category_id\",\n      rules: [{\n        required: true,\n        message: \"Kategori Produk tidak boleh kosong!\"\n      }],\n      children: /*#__PURE__*/_jsxDEV(_Select, {\n        size: \"large\",\n        showSearch: true,\n        value: category,\n        showArrow: false,\n        placeholder: \"Pilih Kategori\",\n        onSearch: handleSearchCategory,\n        onChange: handleChangeCategory,\n        filterOption: false,\n        defaultActiveFirstOption: false,\n        children: options\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 5\n  }, this);\n}","map":{"version":3,"sources":["/Users/yudiananta/Development/NextJS/ERP Dev/JS Deploy/ERP-Sejati/components/Form/AddProduct/Categories.js"],"names":["React","useState","nookies","Categories","selectedCategory","onSelectCategory","setSubCategories","setSelectedSubCategory","selectedSubCategory","initialValue","category","setCategory","data","setData","cookies","get","fetchSubCategoriesById","id","endpoint","process","env","NEXT_PUBLIC_URL","options","method","headers","Authorization","token","req","fetch","res","json","listOfData","forEach","element","attributes","push","handleChangeCategory","newValue","handleSearchCategory","fetchCategory","map","d","label","value","query","callback","status","categoriesResult","categories","category_id","name","error","console","log","required","message"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { Form, Select } from \"antd\";\nimport nookies from \"nookies\";\n\nexport default function Categories({\n  selectedCategory,\n  onSelectCategory,\n  setSubCategories,\n  setSelectedSubCategory,\n  selectedSubCategory,\n  initialValue,\n}) {\n  const [category, setCategory] = useState(selectedCategory);\n  const [data, setData] = useState([]);\n  const cookies = nookies.get(null, \"token\");\n\n  const fetchSubCategoriesById = async (id) => {\n    const endpoint = process.env.NEXT_PUBLIC_URL + `/sub-categories?populate[category][filters][id][$eq]=${id}&populate=*`;\n\n    const options = {\n      method: \"GET\",\n      headers: {\n        Authorization: \"Bearer \" + cookies.token,\n      },\n    };\n\n    const req = await fetch(endpoint, options);\n    const res = await req.json();\n\n    const listOfData = [];\n\n    res.data.forEach((element) => {\n      if (element.attributes.category.data !== null) {\n        listOfData.push(element);\n      }\n    });\n\n    setSubCategories(listOfData);\n  };\n\n  const handleChangeCategory = (newValue) => {\n    setSelectedSubCategory(0);\n    fetchSubCategoriesById(newValue);\n\n    setCategory(newValue);\n    onSelectCategory(newValue);\n  };\n\n  const handleSearchCategory = (newValue) => {\n    if (newValue) {\n      fetchCategory(newValue, setData);\n    } else {\n      setData([]);\n    }\n  };\n\n  const options = data.map((d) => <Select.Option key={d.value}>{d.label}</Select.Option>);\n\n  const fetchCategory = async (query, callback) => {\n    if (!query) {\n      callback([]);\n    } else {\n      try {\n        const endpoint =\n          process.env.NEXT_PUBLIC_URL + `/categories?filters[$or][0][name][$contains]=${query}&filters[$or][1][category_id][$contains]=${query}`;\n        const options = {\n          method: \"GET\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: \"Bearer \" + cookies.token,\n          },\n        };\n\n        const req = await fetch(endpoint, options);\n        const res = await req.json();\n\n        if (req.status == 200) {\n          const categoriesResult = res.data.map((categories) => ({\n            label: `${categories.attributes.category_id} - ${categories.attributes.name}`,\n            value: categories.id,\n          }));\n\n          callback(categoriesResult);\n        }\n      } catch (error) {\n        console.log(error);\n      }\n    }\n  };\n\n  return (\n    <div className=\"w-full md:w-full mb-2 md:mb-0\">\n      <Form.Item\n        initialValue={initialValue}\n        name=\"category_id\"\n        rules={[\n          {\n            required: true,\n            message: \"Kategori Produk tidak boleh kosong!\",\n          },\n        ]}\n      >\n        <Select\n          size=\"large\"\n          showSearch\n          value={category}\n          showArrow={false}\n          placeholder=\"Pilih Kategori\"\n          onSearch={handleSearchCategory}\n          onChange={handleChangeCategory}\n          filterOption={false}\n          defaultActiveFirstOption={false}\n        >\n          {options}\n        </Select>\n      </Form.Item>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}