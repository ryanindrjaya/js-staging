{"ast":null,"code":"import DataTable from \"react-data-table-component\";\nimport * as moment from \"moment\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default function ReactDataTable(_ref) {\n  var data = _ref.data;\n  var formatter = new Intl.NumberFormat(\"id-ID\", {\n    style: \"currency\",\n    currency: \"IDR\",\n    maximumFractionDigits: 0\n  });\n  var customStyles = {\n    headerStyle: {\n      textAlign: \"center\"\n    },\n    headCells: {\n      style: {\n        color: \"white\",\n        background: \"#036B82\"\n      }\n    }\n  };\n\n  var getProductDisc = function getProductDisc(row) {\n    var _row$attributes;\n\n    var disc1 = 0;\n    var disc2 = 0;\n    var disc3 = 0;\n    var discTetap = (_row$attributes = row.attributes) === null || _row$attributes === void 0 ? void 0 : _row$attributes.disc;\n\n    for (var index = 1; index < 6; index++) {\n      var _row$attributes2;\n\n      var unitProduct = (_row$attributes2 = row.attributes) === null || _row$attributes2 === void 0 ? void 0 : _row$attributes2.product.data.attributes[\"unit_\".concat(index)];\n      var unitOrder = row.attributes.unit_order;\n\n      if (unitProduct === unitOrder) {\n        var _row$attributes3, _row$attributes4, _row$attributes5;\n\n        disc1 = (_row$attributes3 = row.attributes) === null || _row$attributes3 === void 0 ? void 0 : _row$attributes3.product.data.attributes[\"unit_\".concat(index, \"_dp1\")];\n        disc2 = (_row$attributes4 = row.attributes) === null || _row$attributes4 === void 0 ? void 0 : _row$attributes4.product.data.attributes[\"unit_\".concat(index, \"_dp2\")];\n        disc3 = (_row$attributes5 = row.attributes) === null || _row$attributes5 === void 0 ? void 0 : _row$attributes5.product.data.attributes[\"unit_\".concat(index, \"_dp3\")];\n      }\n    }\n\n    return /*#__PURE__*/_jsxs(\"div\", {\n      children: [disc1, \", \", disc2, \", \", disc3, \", \", formatter.format(discTetap)]\n    });\n  };\n\n  var formatDate = function formatDate(data) {\n    var _data$attributes;\n\n    var date = new Date(data === null || data === void 0 ? void 0 : (_data$attributes = data.attributes) === null || _data$attributes === void 0 ? void 0 : _data$attributes.expired_date);\n    var NewDate = moment(date, \"DD-MM-YYYY\").format();\n    NewDate = NewDate.split(\"T\")[0];\n    var dArr = NewDate.split(\"-\"); // ex input: \"2010-01-18\"\n\n    var finalDate = dArr[2] + \"-\" + dArr[1] + \"-\" + dArr[0]; //ex output: \"18/01/10\"\n\n    return finalDate;\n  };\n\n  var columns = [{\n    name: \"Nama Produk\",\n    width: \"250px\",\n    selector: function selector(row) {\n      var _row$attributes$produ, _row$attributes6;\n\n      return (_row$attributes$produ = (_row$attributes6 = row.attributes) === null || _row$attributes6 === void 0 ? void 0 : _row$attributes6.product.data.attributes.name) !== null && _row$attributes$produ !== void 0 ? _row$attributes$produ : \"-\";\n    }\n  }, {\n    name: \"Harga Sebelum Disc\",\n    width: \"200px\",\n    selector: function selector(row) {\n      var _row$attributes7;\n\n      return formatter.format((_row$attributes7 = row.attributes) === null || _row$attributes7 === void 0 ? void 0 : _row$attributes7.unit_price);\n    }\n  }, {\n    name: \"Jumlah Pembelian\",\n    width: \"150px\",\n    selector: function selector(row) {\n      var _row$attributes8, _row$attributes9;\n\n      return \"\".concat((_row$attributes8 = row.attributes) === null || _row$attributes8 === void 0 ? void 0 : _row$attributes8.total_order, \" \").concat((_row$attributes9 = row.attributes) === null || _row$attributes9 === void 0 ? void 0 : _row$attributes9.unit_order);\n    }\n  }, {\n    name: \"Disc 1, 2, 3, Tetap\",\n    width: \"150px\",\n    selector: function selector(row) {\n      return getProductDisc(row);\n    }\n  }, {\n    name: \"EXP.Date\",\n    width: \"150px\",\n    selector: function selector(row) {\n      return formatDate(row);\n    }\n  }, {\n    name: \"Batch\",\n    width: \"150px\",\n    selector: function selector(row) {\n      var _row$attributes$batch;\n\n      return (_row$attributes$batch = row.attributes.batch) !== null && _row$attributes$batch !== void 0 ? _row$attributes$batch : \"-\";\n    }\n  }, {\n    name: \"SubTotal\",\n    width: \"150px\",\n    selector: function selector(row) {\n      var _row$attributes10;\n\n      return formatter.format((_row$attributes10 = row.attributes) === null || _row$attributes10 === void 0 ? void 0 : _row$attributes10.sub_total);\n    }\n  }];\n  return /*#__PURE__*/_jsx(DataTable, {\n    customStyles: customStyles,\n    paginationRowsPerPageOptions: [50],\n    columns: columns,\n    data: data.data,\n    pagination: true,\n    noDataComponent: \"Belum ada data Pembelian\"\n  });\n}","map":null,"metadata":{},"sourceType":"module"}