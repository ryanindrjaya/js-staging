{"ast":null,"code":"import _notification from \"antd/lib/notification\";\nimport _Input from \"antd/lib/input\";\nimport Head from \"next/head\";\nimport React, { useState } from \"react\";\nimport LayoutContent from \"@iso/components/utility/layoutContent\";\nimport DashboardLayout from \"../../../../containers/DashboardLayout/DashboardLayout\";\nimport LayoutWrapper from \"@iso/components/utility/layoutWrapper.js\";\nimport PurchasesOrderTable from \"../../../../components/ReactDataTable/Purchases/PurchasesOrderTable\";\nimport { useRouter } from \"next/router\";\nimport TitlePage from \"../../../../components/TitlePage/TitlePage\";\nimport nookies from \"nookies\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\n\nPembelian.getInitialProps = async context => {\n  const cookies = nookies.get(context);\n  let data;\n  const req = await fetchData(cookies);\n  data = await req.json();\n  return {\n    props: {\n      data\n    }\n  };\n};\n\nconst fetchData = async cookies => {\n  const endpoint = process.env.NEXT_PUBLIC_URL + \"/purchases?populate=deep\";\n  const options = {\n    method: \"GET\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: \"Bearer \" + cookies.token\n    }\n  };\n  const req = await fetch(endpoint, options);\n  return req;\n};\n\nfunction Pembelian({\n  props\n}) {\n  const data = props.data;\n  const {\n    0: purchase,\n    1: setPurchase\n  } = useState(data);\n  const {\n    0: isSearching,\n    1: setIsSearching\n  } = useState(false);\n  const {\n    Search\n  } = _Input;\n  const router = useRouter();\n\n  const handleAdd = () => {\n    router.push(\"/dashboard/pembelian/order_pembelian/tambah\");\n  };\n\n  const handleUpdate = id => {\n    // router.push(\"/dashboard/pembelian/order_pembelian/edit/\" + id);\n    openNotificationWithIcon(\"info\", \"Work In Progress\", \"Hai, Fitur ini sedang dikerjakan. Silahkan tunggu pembaruan selanjutnya\");\n  };\n\n  const handleDelete = async id => {\n    const endpoint = process.env.NEXT_PUBLIC_URL + \"/purchases/\" + id;\n    const cookies = nookies.get(null, \"token\");\n    const options = {\n      method: \"DELETE\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: \"Bearer \" + cookies.token\n      }\n    };\n    const req = await fetch(endpoint, options);\n    const res = await req.json();\n\n    if (res) {\n      const res = await fetchData(cookies);\n      openNotificationWithIcon(\"success\", \"Berhasil menghapus data\", \"Order Pembelian yang dipilih telah berhasil dihapus. Silahkan cek kembali Order Pembelian\");\n      setPurchase(res);\n    }\n  };\n\n  const handlePageChange = async page => {\n    const cookies = nookies.get(null, \"token\");\n    const endpoint = process.env.NEXT_PUBLIC_URL + \"/purchases?pagination[page]=\" + page;\n    const options = {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: \"Bearer \" + cookies.token\n      }\n    };\n\n    try {\n      const req = await fetch(endpoint, options);\n      const res = await req.json();\n\n      if (res) {\n        setPurchase(prevData => ({\n          data: filterDuplicateData(prevData.data.concat(res.data)),\n          meta: prevData.meta\n        }));\n      } else {\n        console.log(\"something is wrong\");\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const onSearch = async e => {\n    if (e.target.value.length >= 2) {\n      setIsSearching(true);\n      const req = await searchQuery(e.target.value);\n      const res = await req.json();\n      setPurchase(res);\n      setIsSearching(false);\n    } else {\n      setPurchase(data);\n      setIsSearching(false);\n    }\n  };\n\n  const searchQuery = async keywords => {\n    const endpoint = process.env.NEXT_PUBLIC_URL + \"/purchases?filters[$or][0][added_by][$contains]=\" + keywords + \"&filters[$or][1][no_po][$contains]=\" + keywords + \"&populate=*\";\n    const cookies = nookies.get(null, \"token\");\n    const options = {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: \"Bearer \" + cookies.token\n      }\n    };\n    const req = await fetch(endpoint, options);\n    return req;\n  };\n\n  const onChangeStatus = (status, row) => {\n    row.attributes.status = status;\n    handleChangeStatus(row, row.id);\n  };\n\n  const onChangeStatusPengiriman = (status, row) => {\n    row.attributes.delivery_status = status;\n    handleChangeStatus(row, row.id);\n  };\n\n  const handleChangeStatus = async (values, id) => {\n    var _values$attributes, _values$attributes$do, _values$attributes2, _values$attributes2$d;\n\n    // clean object\n    for (var key in values.attributes) {\n      if (values.attributes[key] === null || values.attributes[key] === undefined) {\n        delete values.attributes[key];\n      }\n    }\n\n    if (((_values$attributes = values.attributes) === null || _values$attributes === void 0 ? void 0 : (_values$attributes$do = _values$attributes.document) === null || _values$attributes$do === void 0 ? void 0 : _values$attributes$do.data) === null || ((_values$attributes2 = values.attributes) === null || _values$attributes2 === void 0 ? void 0 : (_values$attributes2$d = _values$attributes2.document) === null || _values$attributes2$d === void 0 ? void 0 : _values$attributes2$d.data) === undefined) {\n      var _values$attributes3;\n\n      (_values$attributes3 = values.attributes) === null || _values$attributes3 === void 0 ? true : delete _values$attributes3.document;\n    }\n\n    var purchase_details = [];\n    values.attributes.purchase_details.data.forEach(element => {\n      purchase_details.push({\n        id: element.id\n      });\n    });\n    values.attributes.supplier = {\n      id: values.attributes.supplier.data.id\n    };\n    values.attributes.location = {\n      id: values.attributes.location.data.id\n    };\n    values.attributes.purchase_details = purchase_details;\n    const newValues = {\n      data: values.attributes\n    };\n    const JSONdata = JSON.stringify(newValues);\n    const cookies = nookies.get(null, \"token\");\n    const endpoint = process.env.NEXT_PUBLIC_URL + \"/purchases/\" + id;\n    const options = {\n      method: \"PUT\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: \"Bearer \" + cookies.token\n      },\n      body: JSONdata\n    };\n    const req = await fetch(endpoint, options);\n    const res = await req.json();\n\n    if (req.status === 200) {\n      const response = await fetchData(cookies);\n      setPurchase(response);\n      openNotificationWithIcon(\"success\", \"Status berhasil dirubah\", \"Status berhasil dirubah. Silahkan cek detail order pembelian\");\n    } else {\n      openNotificationWithIcon(\"error\", \"Status gagal dirubah\", \"Tedapat kesalahan yang menyebabkan status tidak dapat dirubah\");\n    }\n  };\n\n  const openNotificationWithIcon = (type, title, message) => {\n    _notification[type]({\n      message: title,\n      description: message\n    });\n  };\n\n  const fetchData = async cookies => {\n    const endpoint = process.env.NEXT_PUBLIC_URL + \"/purchases?populate=deep\";\n    const options = {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: \"Bearer \" + cookies.token\n      }\n    };\n    const req = await fetch(endpoint, options);\n    const res = req.json();\n    return res;\n  };\n\n  return /*#__PURE__*/_jsxs(_Fragment, {\n    children: [/*#__PURE__*/_jsx(Head, {\n      children: /*#__PURE__*/_jsx(\"title\", {\n        children: \"Order Pembelian\"\n      })\n    }), /*#__PURE__*/_jsx(DashboardLayout, {\n      children: /*#__PURE__*/_jsxs(LayoutWrapper, {\n        style: {},\n        children: [/*#__PURE__*/_jsx(TitlePage, {\n          titleText: \"Order Pembelian\"\n        }), /*#__PURE__*/_jsxs(LayoutContent, {\n          children: [/*#__PURE__*/_jsxs(\"div\", {\n            className: \"w-full flex justify-between\",\n            children: [/*#__PURE__*/_jsx(Search, {\n              className: \"\",\n              loading: isSearching,\n              onChange: e => onSearch(e),\n              placeholder: \"Cari Pembelian\",\n              style: {\n                width: 200\n              }\n            }), /*#__PURE__*/_jsx(\"button\", {\n              onClick: handleAdd,\n              type: \"button\",\n              className: \"bg-cyan-700 rounded px-5 py-2 hover:bg-cyan-800  shadow-sm flex float-right mb-5\",\n              children: /*#__PURE__*/_jsx(\"div\", {\n                className: \"text-white text-center text-sm font-bold\",\n                children: /*#__PURE__*/_jsx(\"a\", {\n                  className: \"text-white no-underline text-xs sm:text-xs\",\n                  children: \"+ Tambah\"\n                })\n              })\n            })]\n          }), /*#__PURE__*/_jsx(PurchasesOrderTable, {\n            data: purchase,\n            onUpdate: handleUpdate,\n            onDelete: handleDelete,\n            onPageChange: handlePageChange,\n            onChangeStatus: onChangeStatus,\n            onChangeStatusPengiriman: onChangeStatusPengiriman\n          })]\n        })]\n      })\n    })]\n  });\n}\n\nexport default Pembelian;","map":null,"metadata":{},"sourceType":"module"}