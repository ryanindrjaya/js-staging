{"ast":null,"code":"import _Progress from \"antd/lib/progress\";\nimport _defineProperty from \"/Users/yudiananta/Development/NextJS/ERP Dev/JS Deploy/ERP-Sejati/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _asyncToGenerator from \"/Users/yudiananta/Development/NextJS/ERP Dev/JS Deploy/ERP-Sejati/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"/Users/yudiananta/Development/NextJS/ERP Dev/JS Deploy/ERP-Sejati/components/Form/UploadProduk.js\",\n    _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport _regeneratorRuntime from \"/Users/yudiananta/Development/NextJS/ERP Dev/JS Deploy/ERP-Sejati/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport React, { useEffect, useState } from \"react\";\nimport * as XLSX from \"xlsx\";\nimport { productKeys } from \"./utils/productKeys\";\nimport { getRelationalData, getLocationsId } from \"./utils/getRelationalData\";\nimport nookies from \"nookies\";\nimport { toast } from \"react-toastify\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function UploadProduk(_ref) {\n  _s();\n\n  var setProduct = _ref.setProduct;\n\n  var _useState = useState(false),\n      loading = _useState[0],\n      setLoading = _useState[1];\n\n  var _useState2 = useState(0),\n      percent = _useState2[0],\n      setPercent = _useState2[1];\n\n  var _useState3 = useState(null),\n      error = _useState3[0],\n      setError = _useState3[1];\n\n  var _useState4 = useState(\"\"),\n      status = _useState4[0],\n      setStatus = _useState4[1];\n\n  console.log(\"percent\", percent);\n\n  var postData = function postData(data) {\n    var increment = 100 / data.length;\n    console.log(\"increment\", increment);\n    var cookies = nookies.get(null);\n    var endpoint = process.env.NEXT_PUBLIC_URL + \"/products\";\n\n    try {\n      data.forEach( /*#__PURE__*/function () {\n        var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(row, idx) {\n          var data, options, req, res, endpointProduct, optionsAllProduct, reqProduct, resProduct;\n          return _regeneratorRuntime.wrap(function _callee$(_context) {\n            while (1) {\n              switch (_context.prev = _context.next) {\n                case 0:\n                  data = {\n                    data: row\n                  };\n                  options = {\n                    method: \"POST\",\n                    headers: {\n                      \"Content-Type\": \"application/json\",\n                      Authorization: \"Bearer \" + cookies.token\n                    },\n                    body: JSON.stringify(data)\n                  };\n                  console.log(\"options\", options);\n                  _context.prev = 3;\n                  _context.next = 6;\n                  return fetch(endpoint, options);\n\n                case 6:\n                  req = _context.sent;\n                  _context.next = 9;\n                  return req.json();\n\n                case 9:\n                  res = _context.sent;\n                  setPercent(function (prev) {\n                    return Math.round(prev + increment);\n                  });\n\n                  if (!(req.status == 200)) {\n                    _context.next = 21;\n                    break;\n                  }\n\n                  endpointProduct = process.env.NEXT_PUBLIC_URL + \"/products?populate=*\";\n                  optionsAllProduct = {\n                    method: \"GET\",\n                    headers: {\n                      \"Content-Type\": \"application/json\",\n                      Authorization: \"Bearer \" + cookies.token\n                    }\n                  };\n                  _context.next = 16;\n                  return fetch(endpointProduct, optionsAllProduct);\n\n                case 16:\n                  reqProduct = _context.sent;\n                  _context.next = 19;\n                  return reqProduct.json();\n\n                case 19:\n                  resProduct = _context.sent;\n                  setProduct(resProduct);\n\n                case 21:\n                  _context.next = 26;\n                  break;\n\n                case 23:\n                  _context.prev = 23;\n                  _context.t0 = _context[\"catch\"](3);\n                  console.log(_context.t0);\n\n                case 26:\n                case \"end\":\n                  return _context.stop();\n              }\n            }\n          }, _callee, null, [[3, 23]]);\n        }));\n\n        return function (_x, _x2) {\n          return _ref2.apply(this, arguments);\n        };\n      }());\n    } catch (err) {\n      toast.error(\"Gagal mengunggah data\");\n      setLoading(false);\n    }\n  };\n\n  var convertToJson = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(data) {\n      var rows, resolvedRows;\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              rows = data.map( /*#__PURE__*/function () {\n                var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(row) {\n                  var _rowData, _rowData$category, _rowData2, _rowData2$sub_categor, _rowData3, _rowData3$group, _rowData4, _rowData4$manufacture, _rowData5, _rowData5$locations;\n\n                  var rowData, categoryIdRaw, subCategoryIdRaw, groupAliasRaw, manufactureAliasRaw, locationNamesArrRaw, locationsNamesTrimmed, categoryId, subCategoryId, groupId, manufactureId, locationsId;\n                  return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n                    while (1) {\n                      switch (_context2.prev = _context2.next) {\n                        case 0:\n                          rowData = {};\n                          row.forEach(function (element, index) {\n                            rowData[productKeys[index]] = element;\n                          });\n\n                          if (rowData.SKU) {\n                            _context2.next = 4;\n                            break;\n                          }\n\n                          return _context2.abrupt(\"return\");\n\n                        case 4:\n                          // process relational data\n                          categoryIdRaw = ((_rowData = rowData) === null || _rowData === void 0 ? void 0 : (_rowData$category = _rowData.category) === null || _rowData$category === void 0 ? void 0 : _rowData$category.split(\"-\")[0].trim()) || \"\";\n                          subCategoryIdRaw = ((_rowData2 = rowData) === null || _rowData2 === void 0 ? void 0 : (_rowData2$sub_categor = _rowData2.sub_category) === null || _rowData2$sub_categor === void 0 ? void 0 : _rowData2$sub_categor.split(\"-\")[0].trim()) || \"\";\n                          groupAliasRaw = ((_rowData3 = rowData) === null || _rowData3 === void 0 ? void 0 : (_rowData3$group = _rowData3.group) === null || _rowData3$group === void 0 ? void 0 : _rowData3$group.split(\"-\")[0].trim()) || \"\";\n                          manufactureAliasRaw = ((_rowData4 = rowData) === null || _rowData4 === void 0 ? void 0 : (_rowData4$manufacture = _rowData4.manufacture) === null || _rowData4$manufacture === void 0 ? void 0 : _rowData4$manufacture.split(\"-\")[0].trim()) || \"\";\n                          locationNamesArrRaw = ((_rowData5 = rowData) === null || _rowData5 === void 0 ? void 0 : (_rowData5$locations = _rowData5.locations) === null || _rowData5$locations === void 0 ? void 0 : _rowData5$locations.split(\",\")) || [];\n                          locationsNamesTrimmed = locationNamesArrRaw.map(function (item) {\n                            return item === null || item === void 0 ? void 0 : item.trim();\n                          });\n                          console.log(\"manufacture alias\", manufactureAliasRaw);\n                          _context2.next = 13;\n                          return getRelationalData(\"categories\", \"category_id\", categoryIdRaw);\n\n                        case 13:\n                          categoryId = _context2.sent;\n                          _context2.next = 16;\n                          return getRelationalData(\"sub-categories\", \"sub_id\", subCategoryIdRaw);\n\n                        case 16:\n                          subCategoryId = _context2.sent;\n                          _context2.next = 19;\n                          return getRelationalData(\"groups\", \"alias\", groupAliasRaw);\n\n                        case 19:\n                          groupId = _context2.sent;\n                          _context2.next = 22;\n                          return getRelationalData(\"manufactures\", \"code\", manufactureAliasRaw);\n\n                        case 22:\n                          manufactureId = _context2.sent;\n                          _context2.next = 25;\n                          return getLocationsId(locationsNamesTrimmed);\n\n                        case 25:\n                          locationsId = _context2.sent;\n                          rowData = _objectSpread(_objectSpread({}, rowData), {}, {\n                            category: categoryId,\n                            sub_category: subCategoryId,\n                            group: groupId,\n                            manufacture: manufactureId,\n                            locations: locationsId\n                          });\n                          return _context2.abrupt(\"return\", rowData);\n\n                        case 28:\n                        case \"end\":\n                          return _context2.stop();\n                      }\n                    }\n                  }, _callee2);\n                }));\n\n                return function (_x4) {\n                  return _ref4.apply(this, arguments);\n                };\n              }());\n              _context3.next = 3;\n              return Promise.all(rows);\n\n            case 3:\n              resolvedRows = _context3.sent;\n              return _context3.abrupt(\"return\", resolvedRows);\n\n            case 5:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n\n    return function convertToJson(_x3) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  var importExcel = function importExcel(e) {\n    setLoading(true);\n    console.log(e.target.files);\n\n    try {\n      var file = e.target.files[0];\n      var reader = new FileReader();\n\n      reader.onload = /*#__PURE__*/function () {\n        var _ref5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(event) {\n          var bstr, workbook, workSheetName, workSheet, fileData, rowsData;\n          return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n            while (1) {\n              switch (_context4.prev = _context4.next) {\n                case 0:\n                  bstr = event.target.result;\n                  workbook = XLSX.read(bstr, {\n                    type: \"binary\"\n                  });\n                  workSheetName = workbook.SheetNames[0];\n                  workSheet = workbook.Sheets[workSheetName];\n                  fileData = XLSX.utils.sheet_to_json(workSheet, {\n                    header: 1\n                  });\n                  fileData.splice(0, 2);\n                  _context4.next = 8;\n                  return convertToJson(fileData);\n\n                case 8:\n                  rowsData = _context4.sent;\n                  postData(rowsData);\n\n                case 10:\n                case \"end\":\n                  return _context4.stop();\n              }\n            }\n          }, _callee4);\n        }));\n\n        return function (_x5) {\n          return _ref5.apply(this, arguments);\n        };\n      }();\n\n      reader.readAsBinaryString(file);\n    } catch (err) {\n      setError(\"gagal ges ges\");\n      setLoading(false);\n    }\n  };\n\n  useEffect(function () {\n    if (percent >= 100) {\n      toast.success(\"Berhasil mengunggah data\");\n      setLoading(false);\n      setPercent(0);\n    }\n  }, [percent]);\n  useEffect(function () {\n    if (error !== null) {\n      toast.error(error);\n      setTimeout(function () {\n        setError(null);\n      }, 2000);\n    }\n  }, [error]);\n  return loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col items-center justify-center w-full\",\n    children: /*#__PURE__*/_jsxDEV(_Progress, {\n      type: \"circle\",\n      width: 35,\n      percent: percent,\n      status: status\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 156,\n    columnNumber: 5\n  }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"upload_file\",\n      className: \"bg-cyan-700 cursor-pointer text-xs font-bold text-white w-full rounded h-10 hover:bg-cyan-800  shadow-sm flex items-center justify-center float-right\",\n      children: \"Upload\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      onChange: importExcel,\n      type: \"file\",\n      id: \"upload_file\",\n      hidden: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(UploadProduk, \"IoZP785m4bEjt2ZwYE4g8eJ28Jk=\");\n\n_c = UploadProduk;\n\nvar _c;\n\n$RefreshReg$(_c, \"UploadProduk\");","map":{"version":3,"sources":["/Users/yudiananta/Development/NextJS/ERP Dev/JS Deploy/ERP-Sejati/components/Form/UploadProduk.js"],"names":["React","useEffect","useState","XLSX","productKeys","getRelationalData","getLocationsId","nookies","toast","UploadProduk","setProduct","loading","setLoading","percent","setPercent","error","setError","status","setStatus","console","log","postData","data","increment","length","cookies","get","endpoint","process","env","NEXT_PUBLIC_URL","forEach","row","idx","options","method","headers","Authorization","token","body","JSON","stringify","fetch","req","json","res","prev","Math","round","endpointProduct","optionsAllProduct","reqProduct","resProduct","err","convertToJson","rows","map","rowData","element","index","SKU","categoryIdRaw","category","split","trim","subCategoryIdRaw","sub_category","groupAliasRaw","group","manufactureAliasRaw","manufacture","locationNamesArrRaw","locations","locationsNamesTrimmed","item","categoryId","subCategoryId","groupId","manufactureId","locationsId","Promise","all","resolvedRows","importExcel","e","target","files","file","reader","FileReader","onload","event","bstr","result","workbook","read","type","workSheetName","SheetNames","workSheet","Sheets","fileData","utils","sheet_to_json","header","splice","rowsData","readAsBinaryString","success","setTimeout"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport * as XLSX from \"xlsx\";\nimport { productKeys } from \"./utils/productKeys\";\nimport { getRelationalData, getLocationsId } from \"./utils/getRelationalData\";\nimport nookies from \"nookies\";\nimport { toast } from \"react-toastify\";\nimport { Progress } from \"antd\";\n\nexport default function UploadProduk({ setProduct }) {\n  const [loading, setLoading] = useState(false);\n  const [percent, setPercent] = useState(0);\n  const [error, setError] = useState(null);\n  const [status, setStatus] = useState(\"\");\n\n  console.log(\"percent\", percent);\n\n  const postData = (data) => {\n    let increment = 100 / data.length;\n    console.log(\"increment\", increment);\n    const cookies = nookies.get(null);\n    const endpoint = process.env.NEXT_PUBLIC_URL + \"/products\";\n\n    try {\n      data.forEach(async (row, idx) => {\n        const data = {\n          data: row,\n        };\n        const options = {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: \"Bearer \" + cookies.token,\n          },\n          body: JSON.stringify(data),\n        };\n\n        console.log(\"options\", options);\n\n        try {\n          const req = await fetch(endpoint, options);\n          const res = await req.json();\n\n          setPercent((prev) => Math.round(prev + increment));\n\n          if (req.status == 200) {\n            const endpointProduct = process.env.NEXT_PUBLIC_URL + \"/products?populate=*\";\n\n            const optionsAllProduct = {\n              method: \"GET\",\n              headers: {\n                \"Content-Type\": \"application/json\",\n                Authorization: \"Bearer \" + cookies.token,\n              },\n            };\n\n            const reqProduct = await fetch(endpointProduct, optionsAllProduct);\n            const resProduct = await reqProduct.json();\n\n            setProduct(resProduct);\n          }\n        } catch (err) {\n          console.log(err);\n        }\n      });\n    } catch (err) {\n      toast.error(\"Gagal mengunggah data\");\n      setLoading(false);\n    }\n  };\n\n  const convertToJson = async (data) => {\n    const rows = data.map(async (row) => {\n      let rowData = {};\n      row.forEach((element, index) => {\n        rowData[productKeys[index]] = element;\n      });\n\n      if (!rowData.SKU) {\n        return;\n      }\n\n      // process relational data\n      const categoryIdRaw = rowData?.category?.split(\"-\")[0].trim() || \"\";\n      const subCategoryIdRaw = rowData?.sub_category?.split(\"-\")[0].trim() || \"\";\n      const groupAliasRaw = rowData?.group?.split(\"-\")[0].trim() || \"\";\n      const manufactureAliasRaw = rowData?.manufacture?.split(\"-\")[0].trim() || \"\";\n      const locationNamesArrRaw = rowData?.locations?.split(\",\") || [];\n      const locationsNamesTrimmed = locationNamesArrRaw.map((item) => item?.trim());\n\n      console.log(\"manufacture alias\", manufactureAliasRaw);\n\n      const categoryId = await getRelationalData(\"categories\", \"category_id\", categoryIdRaw);\n      const subCategoryId = await getRelationalData(\"sub-categories\", \"sub_id\", subCategoryIdRaw);\n      const groupId = await getRelationalData(\"groups\", \"alias\", groupAliasRaw);\n      const manufactureId = await getRelationalData(\"manufactures\", \"code\", manufactureAliasRaw);\n      const locationsId = await getLocationsId(locationsNamesTrimmed);\n\n      rowData = {\n        ...rowData,\n        category: categoryId,\n        sub_category: subCategoryId,\n        group: groupId,\n        manufacture: manufactureId,\n        locations: locationsId,\n      };\n\n      return rowData;\n    });\n\n    const resolvedRows = await Promise.all(rows);\n    return resolvedRows;\n  };\n\n  const importExcel = (e) => {\n    setLoading(true);\n\n    console.log(e.target.files);\n    try {\n      const file = e.target.files[0];\n      const reader = new FileReader();\n      reader.onload = async (event) => {\n        const bstr = event.target.result;\n        const workbook = XLSX.read(bstr, { type: \"binary\" });\n        const workSheetName = workbook.SheetNames[0];\n        const workSheet = workbook.Sheets[workSheetName];\n        const fileData = XLSX.utils.sheet_to_json(workSheet, { header: 1 });\n        fileData.splice(0, 2);\n        const rowsData = await convertToJson(fileData);\n        postData(rowsData);\n      };\n      reader.readAsBinaryString(file);\n    } catch (err) {\n      setError(\"gagal ges ges\");\n      setLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    if (percent >= 100) {\n      toast.success(\"Berhasil mengunggah data\");\n      setLoading(false);\n      setPercent(0);\n    }\n  }, [percent]);\n\n  useEffect(() => {\n    if (error !== null) {\n      toast.error(error);\n      setTimeout(() => {\n        setError(null);\n      }, 2000);\n    }\n  }, [error]);\n\n  return loading ? (\n    <div className=\"flex flex-col items-center justify-center w-full\">\n      <Progress type=\"circle\" width={35} percent={percent} status={status} />\n    </div>\n  ) : (\n    <>\n      <label\n        htmlFor=\"upload_file\"\n        className=\"bg-cyan-700 cursor-pointer text-xs font-bold text-white w-full rounded h-10 hover:bg-cyan-800  shadow-sm flex items-center justify-center float-right\"\n      >\n        Upload\n      </label>\n      <input onChange={importExcel} type=\"file\" id=\"upload_file\" hidden />\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}