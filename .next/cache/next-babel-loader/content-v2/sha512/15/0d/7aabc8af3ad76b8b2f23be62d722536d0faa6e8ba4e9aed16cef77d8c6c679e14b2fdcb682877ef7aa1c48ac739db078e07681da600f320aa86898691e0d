{"ast":null,"code":"import React, { useEffect } from \"react\";\nimport { useRouter } from \"next/router\";\nimport nookies from \"nookies\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction Middleware({\n  children\n}) {\n  const cookies = nookies.get(null);\n  const token = cookies.token;\n  const router = useRouter();\n  useEffect(async () => {\n    const firstPath = router.pathname.split(\"/\")[1];\n    let isValid = await istokenValid(token);\n\n    if (!isValid) {\n      router.push(\"/\");\n    }\n\n    if (firstPath === \"dashboard\" && !token) {\n      router.push(\"/\");\n    } else {\n      if (token && firstPath === \"\") {\n        router.push(\"/dashboard\");\n      }\n    }\n  }, []);\n  return /*#__PURE__*/_jsx(_Fragment, {\n    children: children\n  });\n}\n\nconst istokenValid = async token => {\n  const endpoint = process.env.NEXT_PUBLIC_URL + `/products`;\n  const options = {\n    method: \"GET\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: \"Bearer \" + token\n    }\n  };\n  const req = await fetch(endpoint, options);\n  const res = await req.json();\n\n  if (req.status === 200) {\n    return true;\n  } else {\n    return false;\n  }\n};\n\nexport default Middleware;","map":null,"metadata":{},"sourceType":"module"}