{"ast":null,"code":"import _defineProperty from \"/Users/yudiananta/Development/NextJS/ERP Dev/JS Deploy/ERP-Sejati/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport config, { getCurrentTheme } from './config';\nimport actions from './actions';\nvar initState = {\n  isActivated: false,\n  changeThemes: getCurrentTheme('changeThemes', config.changeThemes.defaultTheme || 'themedefault'),\n  topbarTheme: getCurrentTheme('topbarTheme', config.topbarTheme.defaultTheme || 'themedefault'),\n  sidebarTheme: getCurrentTheme('sidebarTheme', config.sidebarTheme.defaultTheme || 'themedefault'),\n  layoutTheme: getCurrentTheme('layoutTheme', config.layoutTheme.defaultTheme || 'themedefault')\n};\nexport default function Reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case actions.SWITCH_ACTIVATION:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        isActivated: !state.isActivated\n      });\n\n    case actions.CHANGE_THEME:\n      return _objectSpread(_objectSpread({}, state), {}, _defineProperty({}, action.attribute, action.theme));\n\n    default:\n      return state;\n  }\n}\n_c = Reducer;\n\nvar _c;\n\n$RefreshReg$(_c, \"Reducer\");","map":{"version":3,"sources":["/Users/yudiananta/Development/NextJS/ERP Dev/JS Deploy/ERP-Sejati/redux/themeSwitcher/reducer.js"],"names":["config","getCurrentTheme","actions","initState","isActivated","changeThemes","defaultTheme","topbarTheme","sidebarTheme","layoutTheme","Reducer","state","action","type","SWITCH_ACTIVATION","CHANGE_THEME","attribute","theme"],"mappings":";;;;;;AAAA,OAAOA,MAAP,IAAiBC,eAAjB,QAAwC,UAAxC;AACA,OAAOC,OAAP,MAAoB,WAApB;AAEA,IAAMC,SAAS,GAAG;AAChBC,EAAAA,WAAW,EAAE,KADG;AAEhBC,EAAAA,YAAY,EAAEJ,eAAe,CAC3B,cAD2B,EAE3BD,MAAM,CAACK,YAAP,CAAoBC,YAApB,IAAoC,cAFT,CAFb;AAMhBC,EAAAA,WAAW,EAAEN,eAAe,CAC1B,aAD0B,EAE1BD,MAAM,CAACO,WAAP,CAAmBD,YAAnB,IAAmC,cAFT,CANZ;AAUhBE,EAAAA,YAAY,EAAEP,eAAe,CAC3B,cAD2B,EAE3BD,MAAM,CAACQ,YAAP,CAAoBF,YAApB,IAAoC,cAFT,CAVb;AAchBG,EAAAA,WAAW,EAAER,eAAe,CAC1B,aAD0B,EAE1BD,MAAM,CAACS,WAAP,CAAmBH,YAAnB,IAAmC,cAFT;AAdZ,CAAlB;AAoBA,eAAe,SAASI,OAAT,GAA4C;AAAA,MAA3BC,KAA2B,uEAAnBR,SAAmB;AAAA,MAARS,MAAQ;;AACzD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKX,OAAO,CAACY,iBAAb;AACE,6CACKH,KADL;AAEEP,QAAAA,WAAW,EAAE,CAACO,KAAK,CAACP;AAFtB;;AAIF,SAAKF,OAAO,CAACa,YAAb;AACE,6CACKJ,KADL,2BAEGC,MAAM,CAACI,SAFV,EAEsBJ,MAAM,CAACK,KAF7B;;AAIF;AACE,aAAON,KAAP;AAZJ;AAcD;KAfuBD,O","sourcesContent":["import config, { getCurrentTheme } from './config';\nimport actions from './actions';\n\nconst initState = {\n  isActivated: false,\n  changeThemes: getCurrentTheme(\n    'changeThemes',\n    config.changeThemes.defaultTheme || 'themedefault'\n  ),\n  topbarTheme: getCurrentTheme(\n    'topbarTheme',\n    config.topbarTheme.defaultTheme || 'themedefault'\n  ),\n  sidebarTheme: getCurrentTheme(\n    'sidebarTheme',\n    config.sidebarTheme.defaultTheme || 'themedefault'\n  ),\n  layoutTheme: getCurrentTheme(\n    'layoutTheme',\n    config.layoutTheme.defaultTheme || 'themedefault'\n  ),\n};\n\nexport default function Reducer(state = initState, action) {\n  switch (action.type) {\n    case actions.SWITCH_ACTIVATION:\n      return {\n        ...state,\n        isActivated: !state.isActivated,\n      };\n    case actions.CHANGE_THEME:\n      return {\n        ...state,\n        [action.attribute]: action.theme,\n      };\n    default:\n      return state;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}