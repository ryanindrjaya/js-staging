{"ast":null,"code":"var _jsxFileName = \"/Users/yudiananta/Development/NextJS/ERP Dev/JS Deploy/ERP-Sejati/components/ThemeSwitcher/ThemeSwitcher.js\";\nimport React from 'react';\nimport IntlMessages from '../utility/intlMessages';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ThemeSwitcher = ({\n  config,\n  changeTheme,\n  selectedId\n}) => {\n  const {\n    id,\n    label,\n    options\n  } = config;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"themeSwitchBlock\",\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      children: /*#__PURE__*/_jsxDEV(IntlMessages, {\n        id: label\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"themeSwitchBtnWrapper\",\n      children: options.map(option => {\n        const {\n          themeName,\n          buttonColor\n        } = option;\n\n        const onClick = () => {\n          changeTheme(id, themeName);\n        };\n\n        const customClass = themeName === selectedId ? 'selectedTheme' : '';\n        return /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: onClick,\n          className: customClass,\n          style: {\n            backgroundColor: buttonColor\n          }\n        }, themeName, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, this);\n};\n\nexport default ThemeSwitcher;","map":{"version":3,"sources":["/Users/yudiananta/Development/NextJS/ERP Dev/JS Deploy/ERP-Sejati/components/ThemeSwitcher/ThemeSwitcher.js"],"names":["React","IntlMessages","ThemeSwitcher","config","changeTheme","selectedId","id","label","options","map","option","themeName","buttonColor","onClick","customClass","backgroundColor"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,MAAyB,yBAAzB;;;AAEA,MAAMC,aAAa,GAAG,CAAC;AAAEC,EAAAA,MAAF;AAAUC,EAAAA,WAAV;AAAuBC,EAAAA;AAAvB,CAAD,KAAyC;AAC7D,QAAM;AAAEC,IAAAA,EAAF;AAAMC,IAAAA,KAAN;AAAaC,IAAAA;AAAb,MAAyBL,MAA/B;AACA,sBACE;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAA,4BACE;AAAA,6BACE,QAAC,YAAD;AAAc,QAAA,EAAE,EAAEI;AAAlB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAIE;AAAK,MAAA,SAAS,EAAC,uBAAf;AAAA,gBACGC,OAAO,CAACC,GAAR,CAAYC,MAAM,IAAI;AACrB,cAAM;AAAEC,UAAAA,SAAF;AAAaC,UAAAA;AAAb,YAA6BF,MAAnC;;AACA,cAAMG,OAAO,GAAG,MAAM;AACpBT,UAAAA,WAAW,CAACE,EAAD,EAAKK,SAAL,CAAX;AACD,SAFD;;AAGA,cAAMG,WAAW,GAAGH,SAAS,KAAKN,UAAd,GAA2B,eAA3B,GAA6C,EAAjE;AACA,4BACE;AACE,UAAA,IAAI,EAAC,QADP;AAGE,UAAA,OAAO,EAAEQ,OAHX;AAIE,UAAA,SAAS,EAAEC,WAJb;AAKE,UAAA,KAAK,EAAE;AAAEC,YAAAA,eAAe,EAAEH;AAAnB;AALT,WAEOD,SAFP;AAAA;AAAA;AAAA;AAAA,gBADF;AASD,OAfA;AADH;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAyBD,CA3BD;;AA6BA,eAAeT,aAAf","sourcesContent":["import React from 'react';\nimport IntlMessages from '../utility/intlMessages';\n\nconst ThemeSwitcher = ({ config, changeTheme, selectedId }) => {\n  const { id, label, options } = config;\n  return (\n    <div className=\"themeSwitchBlock\">\n      <h4>\n        <IntlMessages id={label} />\n      </h4>\n      <div className=\"themeSwitchBtnWrapper\">\n        {options.map(option => {\n          const { themeName, buttonColor } = option;\n          const onClick = () => {\n            changeTheme(id, themeName);\n          };\n          const customClass = themeName === selectedId ? 'selectedTheme' : '';\n          return (\n            <button\n              type=\"button\"\n              key={themeName}\n              onClick={onClick}\n              className={customClass}\n              style={{ backgroundColor: buttonColor }}\n            />\n          );\n        })}\n      </div>\n    </div>\n  );\n};\n\nexport default ThemeSwitcher;\n"]},"metadata":{},"sourceType":"module"}