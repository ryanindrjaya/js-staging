{"ast":null,"code":"import qs from 'qs';\nimport options from './options';\nimport { isServer } from './isServer';\nexport function getInitData() {\n  if (!isServer) {\n    const initData = qs.parse(window.location.search.slice(1));\n    if (initData.toggle) initData.toggle.free_shipping = initData.toggle.free_shipping === 'true' ? true : undefined;\n    return initData;\n  }\n\n  return false;\n}\nexport function setUrl(searchState) {\n  if (!isServer) {\n    const search = searchState ? `${window.location.pathname}?${qs.stringify(searchState)}` : '';\n    window.history.pushState(searchState, null, search);\n  }\n\n  return;\n}\nexport function getDefaultPath() {\n  const getParent = lastRoute => {\n    const parent = [];\n    if (!lastRoute) return parent;\n    parent.push(lastRoute);\n    options.forEach(option => {\n      if (option.children) {\n        option.children.forEach(child => {\n          if (child.key === lastRoute) {\n            parent.push(option.key);\n          }\n        });\n      }\n    });\n    return parent;\n  };\n\n  if (!isServer && window.location.pathname) {\n    const routes = window.location.pathname.split('/');\n\n    if (routes.length > 1) {\n      const lastRoute = routes[routes.length - 1];\n      return getParent(lastRoute);\n    }\n  }\n\n  return [];\n}","map":null,"metadata":{},"sourceType":"module"}