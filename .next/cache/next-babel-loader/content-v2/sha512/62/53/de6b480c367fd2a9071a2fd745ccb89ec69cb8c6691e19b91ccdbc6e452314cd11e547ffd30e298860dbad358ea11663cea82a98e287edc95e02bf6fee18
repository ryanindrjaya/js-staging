{"ast":null,"code":"import firebase, { auth } from './firebase';\nexport const getCurrentUser = () => {\n  return new Promise((resolve, reject) => {\n    const unsubscribe = auth.onAuthStateChanged(userAuth => {\n      unsubscribe();\n      resolve(userAuth);\n    }, reject);\n  });\n};\nexport const googleProvider = new firebase.auth.GoogleAuthProvider();\ngoogleProvider.setCustomParameters({\n  prompt: 'select_account'\n});\nexport const facebookProvider = new firebase.auth.FacebookAuthProvider();\nexport const githubProvider = new firebase.auth.GithubAuthProvider();\nexport const twitterProvider = new firebase.auth.TwitterAuthProvider();\nexport const signInWithGoogle = () => auth.signInWithPopup(googleProvider);\nexport const signInWithFacebook = () => auth.signInWithPopup(facebookProvider).then(function (result) {\n  // This gives you a Facebook Access Token. You can use it to access the Facebook API.\n  var token = result.credential.accessToken; // The signed-in user info.\n\n  var user = result.user;\n  console.log(`FB Token: ${token}`, `User: ${user}`); // ...\n}).catch(function (error) {\n  // Handle Errors here.\n  console.error(error); // ...\n});\nexport const signInWithGithub = () => auth.signInWithPopup(githubProvider);\nexport const signInWithTwitter = () => auth.signInWithPopup(twitterProvider);\nexport const signInWithEmail = async (email, password) => await auth.signInWithEmailAndPassword(email, password);\nexport const signUpWithEmailAndPassword = async (email, password) => await auth.createUserWithEmailAndPassword(email, password);\nexport const resetPassword = email => auth.sendPasswordResetEmail(email);\nexport const signOut = () => auth.signOut();\nexport default auth;","map":null,"metadata":{},"sourceType":"module"}