{"ast":null,"code":"const scrumBoardActions = {\n  //BOARD\n  CREATE_OR_UPDATE_BOARD_WATCHER: 'CREATE_OR_UPDATE_BOARD_WATCHER',\n  CREATE_OR_UPDATE_BOARD: 'CREATE_OR_UPDATE_BOARD',\n  EDIT_BOARD: 'EDIT_BOARD',\n  DELETE_BOARD_WATCHER: 'DELETE_BOARD_WATCHER',\n  DELETE_BOARD: 'DELETE_BOARD',\n  SELECT_BOARD: 'SELECT_BOARD',\n  //COLUMN\n  CREATE_OR_UPDATE_COLUMN_WATCHER: 'CREATE_OR_UPDATE_COLUMN_WATCHER',\n  CREATE_OR_UPDATE_COLUMN: 'CREATE_OR_UPDATE_COLUMN',\n  EDIT_COLUMN: 'EDIT_COLUMN',\n  CANCEL_EDIT_COLUMN: 'CANCEL_EDIT_COLUMN',\n  DELETE_COLUMN_WATCHER: 'DELETE_COLUMN_WATCHER',\n  DELETE_COLUMN: 'DELETE_COLUMN',\n  RESET_COLUMN: 'RESET_COLUMN',\n  MOVE_COLUMN_WATCHER: 'MOVE_COLUMN_WATCHER',\n  SET_MOVED_COLUMN: 'SET_MOVED_COLUMN',\n  DUBLICATE_COLUMN: 'DUBLICATE_COLUMN',\n  //TASK\n  CREATE_OR_UPDATE_TASK_WATCHER: 'CREATE_OR_UPDATE_TASK_WATCHER',\n  CREATE_OR_UPDATE_TASK: 'CREATE_OR_UPDATE_TASK',\n  EDIT_TASK: 'EDIT_TASK',\n  CANCEL_EDIT_TASK: 'CANCEL_EDIT_TASK',\n  DELETE_TASK_WATCHER: 'DELETE_TASK_WATCHER',\n  DELETE_TASK: 'DELETE_TASK',\n  RESET_TASK: 'RESET_TASK',\n  MOVE_TASK_WATCHER: 'MOVE_TASK_WATCHER',\n  SET_MOVED_TASK: 'SET_MOVED_TASK',\n  DUBLICATE_TASK: 'DUBLICATE_TASK',\n  // SEARCH\n  SET_SEARCH_TEXT: 'SET_SEARCH_TEXT',\n  // LOAD DATA\n  LOAD_BOARDS_DATA_SAGA: 'LOAD_BOARDS_DATA_SAGA',\n  LOAD_CURRENT_BOARD_DATA_SAGA: 'LOAD_CURRENT_BOARD_DATA_SAGA',\n  SET_BOARDS_DATA: 'SET_BOARDS_DATA',\n  SET_CURRENT_BOARD_DATA: 'SET_CURRENT_BOARD_DATA',\n  // LABELS\n  CREATE_OR_UPDATE_LABEL: 'CREATE_OR_UPDATE_LABEL',\n  EDIT_LABEL: 'EDIT_LABEL',\n  DELETE_LABEL: 'DELETE_LABEL',\n  // Load Data Actions\n  boardsRenderWatcher: () => ({\n    type: scrumBoardActions.LOAD_BOARDS_DATA_SAGA\n  }),\n  setBoardsData: boards => ({\n    type: scrumBoardActions.SET_BOARDS_DATA,\n    payload: boards\n  }),\n  boardRenderWatcher: boardId => ({\n    type: scrumBoardActions.LOAD_CURRENT_BOARD_DATA_SAGA,\n    payload: boardId\n  }),\n  setBoardData: boardData => ({\n    type: scrumBoardActions.SET_CURRENT_BOARD_DATA,\n    payload: boardData\n  }),\n  // Task Actions\n  createOrUpdateTaskWatcher: payload => {\n    return {\n      type: scrumBoardActions.CREATE_OR_UPDATE_TASK_WATCHER,\n      payload\n    };\n  },\n  createOrUpdateTask: payload => {\n    return {\n      type: scrumBoardActions.CREATE_OR_UPDATE_TASK,\n      payload\n    };\n  },\n  editTask: payload => {\n    return {\n      type: scrumBoardActions.EDIT_TASK,\n      payload\n    };\n  },\n  cancelEditTask: payload => {\n    return {\n      type: scrumBoardActions.CANCEL_EDIT_TASK,\n      payload\n    };\n  },\n  deleteTaskWatcher: payload => {\n    return {\n      type: scrumBoardActions.DELETE_TASK_WATCHER,\n      payload\n    };\n  },\n  deleteTask: payload => {\n    return {\n      type: scrumBoardActions.DELETE_TASK,\n      payload\n    };\n  },\n  resetTask: payload => {\n    return {\n      type: scrumBoardActions.RESET_TASK,\n      payload\n    };\n  },\n  setSearchText: payload => {\n    return {\n      type: scrumBoardActions.SET_SEARCH_TEXT,\n      payload\n    };\n  },\n  moveTaskWatcher: payload => {\n    return {\n      type: scrumBoardActions.MOVE_TASK_WATCHER,\n      payload\n    };\n  },\n  setMovedTask: payload => {\n    return {\n      type: scrumBoardActions.SET_MOVED_TASK,\n      payload\n    };\n  },\n  // Column Actions\n  createOrUpdateColumnWatcher: payload => {\n    return {\n      type: scrumBoardActions.CREATE_OR_UPDATE_COLUMN_WATCHER,\n      payload\n    };\n  },\n  createOrUpdateColumn: payload => {\n    return {\n      type: scrumBoardActions.CREATE_OR_UPDATE_COLUMN,\n      payload\n    };\n  },\n  editColumn: payload => {\n    return {\n      type: scrumBoardActions.EDIT_COLUMN,\n      payload\n    };\n  },\n  cancelEditColumn: payload => {\n    return {\n      type: scrumBoardActions.CANCEL_EDIT_COLUMN,\n      payload\n    };\n  },\n  deleteColumnWatcher: payload => {\n    return {\n      type: scrumBoardActions.DELETE_COLUMN_WATCHER,\n      payload\n    };\n  },\n  deleteColumn: payload => {\n    return {\n      type: scrumBoardActions.DELETE_COLUMN,\n      payload\n    };\n  },\n  resetColumn: payload => {\n    return {\n      type: scrumBoardActions.RESET_COLUMN,\n      payload\n    };\n  },\n  moveColumnWatcher: payload => {\n    return {\n      type: scrumBoardActions.MOVE_COLUMN_WATCHER,\n      payload\n    };\n  },\n  setMovedColumn: payload => {\n    return {\n      type: scrumBoardActions.SET_MOVED_COLUMN,\n      payload\n    };\n  },\n  // Board Actions\n  createOrUpdateBoardWatcher: board => {\n    return {\n      type: scrumBoardActions.CREATE_OR_UPDATE_BOARD_WATCHER,\n      payload: board\n    };\n  },\n  createOrUpdateBoard: board => {\n    return {\n      type: scrumBoardActions.CREATE_OR_UPDATE_BOARD,\n      payload: board\n    };\n  },\n  editBoard: board => {\n    return {\n      type: scrumBoardActions.EDIT_BOARD,\n      payload: board\n    };\n  },\n  deleteBoardWatcher: boardID => {\n    return {\n      type: scrumBoardActions.DELETE_BOARD_WATCHER,\n      payload: boardID\n    };\n  },\n  deleteBoard: boardID => {\n    return {\n      type: scrumBoardActions.DELETE_BOARD,\n      payload: boardID\n    };\n  },\n  // Label Actions\n  createOrUpdateLabel: label => {\n    return {\n      type: scrumBoardActions.CREATE_OR_UPDATE_LABEL,\n      payload: label\n    };\n  },\n  editLabel: label => {\n    return {\n      type: scrumBoardActions.EDIT_LABEL,\n      payload: label\n    };\n  },\n  deleteLabel: labelID => {\n    return {\n      type: scrumBoardActions.DELETE_LABEL,\n      payload: labelID\n    };\n  }\n};\nexport default scrumBoardActions;","map":null,"metadata":{},"sourceType":"module"}