{"ast":null,"code":"import _toConsumableArray from \"/Users/yudiananta/Development/NextJS/ERP Dev/JS Deploy/ERP-Sejati/node_modules/next/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport { contacts } from './reducer';\n\nfunction ascendingSort(contact1, contact2) {\n  var name1 = contact1.name ? contact1.name.toUpperCase() : '~';\n  var name2 = contact2.name ? contact2.name.toUpperCase() : '~';\n  return name1 > name2 ? 1 : name1 === name2 ? 0 : -1;\n}\n\nvar contactActions = {\n  ADD_CONTACT: 'ADD_CONTACT',\n  EDIT_CONTACT: 'EDIT_CONTACT',\n  DELETE__CONTACT: 'DELETE__CONTACT',\n  CHANGE_CONTACT: 'CHANGE_CONTACT',\n  EDIT_VIEW: 'EDIT_VIEW',\n  changeContact: function changeContact(id) {\n    return {\n      type: contactActions.CHANGE_CONTACT,\n      id: id\n    };\n  },\n  addContact: function addContact() {\n    var newContact = {\n      id: new Date(),\n      firstName: '',\n      avatar: contacts[new Date() % 10].avatar,\n      LastName: '',\n      mobile: '',\n      home: '',\n      name: '',\n      company: '',\n      work: '',\n      note: ''\n    };\n    return function (dispatch, getState) {\n      dispatch({\n        type: contactActions.ADD_CONTACT,\n        contacts: [].concat(_toConsumableArray(getState().Contacts.contacts), [newContact]),\n        selectedId: newContact.id\n      });\n    };\n  },\n  editContact: function editContact(newContact) {\n    return function (dispatch, getState) {\n      var contacts = getState().Contacts.contacts;\n      var newContacts = [];\n      contacts.forEach(function (contact) {\n        if (contact.id === newContact.id) {\n          newContacts.push(newContact);\n        } else {\n          newContacts.push(contact);\n        }\n      });\n      dispatch({\n        type: contactActions.EDIT_CONTACT,\n        contacts: newContacts.sort(ascendingSort)\n      });\n    };\n  },\n  deleteContact: function deleteContact(id) {\n    return function (dispatch, getState) {\n      var contacts = getState().Contacts.contacts;\n      var seectedId = getState().Contacts.seectedId;\n      var newContacts = [];\n      contacts.forEach(function (contact) {\n        if (contact.id === id) {} else {\n          newContacts.push(contact);\n        }\n      });\n      dispatch({\n        type: contactActions.DELETE__CONTACT,\n        contacts: newContacts,\n        seectedId: id === seectedId ? undefined : seectedId\n      });\n    };\n  },\n  viewChange: function viewChange(view) {\n    return {\n      type: contactActions.EDIT_VIEW,\n      view: view\n    };\n  }\n};\nexport default contactActions;","map":null,"metadata":{},"sourceType":"module"}