{"ast":null,"code":"import _Button from \"antd/lib/button\";\nvar _jsxFileName = \"/Users/yudiananta/Development/NextJS/ERP Dev/JS Deploy/ERP-Sejati/components/ColorChoser.js\";\nimport React from 'react';\nimport Popover from './uielements/popover';\nimport ColorChooserDropdown from './ColorChooser.style';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ColorChoser({\n  colors,\n  seectedColor,\n  changeColor\n}) {\n  const [visible, setVisibility] = React.useState(false);\n\n  function hide() {\n    setVisibility(false);\n  }\n\n  function handleVisibleChange() {\n    setVisibility(visible => !visible);\n  }\n\n  const content = () => /*#__PURE__*/_jsxDEV(ColorChooserDropdown, {\n    className: \"isoColorOptions\",\n    children: colors.map((color, index) => {\n      const onClick = () => {\n        hide();\n        changeColor(index);\n      };\n\n      const style = {\n        background: color\n      };\n      return /*#__PURE__*/_jsxDEV(_Button, {\n        onClick: onClick,\n        style: style\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 16\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(Popover, {\n    content: content(),\n    trigger: \"click\",\n    visible: visible,\n    onVisibleChange: handleVisibleChange,\n    children: /*#__PURE__*/_jsxDEV(_Button, {\n      style: {\n        backgroundColor: colors[seectedColor]\n      },\n      className: \"isoColorChooser\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}","map":{"version":3,"sources":["/Users/yudiananta/Development/NextJS/ERP Dev/JS Deploy/ERP-Sejati/components/ColorChoser.js"],"names":["React","Popover","ColorChooserDropdown","ColorChoser","colors","seectedColor","changeColor","visible","setVisibility","useState","hide","handleVisibleChange","content","map","color","index","onClick","style","background","backgroundColor"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,oBAAP,MAAiC,sBAAjC;;AAEA,eAAe,SAASC,WAAT,CAAqB;AAAEC,EAAAA,MAAF;AAAUC,EAAAA,YAAV;AAAwBC,EAAAA;AAAxB,CAArB,EAA4D;AACzE,QAAM,CAACC,OAAD,EAAUC,aAAV,IAA2BR,KAAK,CAACS,QAAN,CAAe,KAAf,CAAjC;;AAEA,WAASC,IAAT,GAAgB;AACdF,IAAAA,aAAa,CAAC,KAAD,CAAb;AACD;;AACD,WAASG,mBAAT,GAA+B;AAC7BH,IAAAA,aAAa,CAAED,OAAD,IAAa,CAACA,OAAf,CAAb;AACD;;AACD,QAAMK,OAAO,GAAG,mBACd,QAAC,oBAAD;AAAsB,IAAA,SAAS,EAAC,iBAAhC;AAAA,cACGR,MAAM,CAACS,GAAP,CAAW,CAACC,KAAD,EAAQC,KAAR,KAAkB;AAC5B,YAAMC,OAAO,GAAG,MAAM;AACpBN,QAAAA,IAAI;AACJJ,QAAAA,WAAW,CAACS,KAAD,CAAX;AACD,OAHD;;AAIA,YAAME,KAAK,GAAG;AACZC,QAAAA,UAAU,EAAEJ;AADA,OAAd;AAGA,0BAAO;AAAoB,QAAA,OAAO,EAAEE,OAA7B;AAAsC,QAAA,KAAK,EAAEC;AAA7C,SAAaF,KAAb;AAAA;AAAA;AAAA;AAAA,cAAP;AACD,KATA;AADH;AAAA;AAAA;AAAA;AAAA,UADF;;AAcA,sBACE,QAAC,OAAD;AACE,IAAA,OAAO,EAAEH,OAAO,EADlB;AAEE,IAAA,OAAO,EAAC,OAFV;AAGE,IAAA,OAAO,EAAEL,OAHX;AAIE,IAAA,eAAe,EAAEI,mBAJnB;AAAA,2BAME;AACE,MAAA,KAAK,EAAE;AAAEQ,QAAAA,eAAe,EAAEf,MAAM,CAACC,YAAD;AAAzB,OADT;AAEE,MAAA,SAAS,EAAC;AAFZ;AAAA;AAAA;AAAA;AAAA;AANF;AAAA;AAAA;AAAA;AAAA,UADF;AAaD","sourcesContent":["import React from 'react';\nimport { Button } from 'antd';\nimport Popover from './uielements/popover';\nimport ColorChooserDropdown from './ColorChooser.style';\n\nexport default function ColorChoser({ colors, seectedColor, changeColor }) {\n  const [visible, setVisibility] = React.useState(false);\n\n  function hide() {\n    setVisibility(false);\n  }\n  function handleVisibleChange() {\n    setVisibility((visible) => !visible);\n  }\n  const content = () => (\n    <ColorChooserDropdown className=\"isoColorOptions\">\n      {colors.map((color, index) => {\n        const onClick = () => {\n          hide();\n          changeColor(index);\n        };\n        const style = {\n          background: color,\n        };\n        return <Button key={index} onClick={onClick} style={style} />;\n      })}\n    </ColorChooserDropdown>\n  );\n  return (\n    <Popover\n      content={content()}\n      trigger=\"click\"\n      visible={visible}\n      onVisibleChange={handleVisibleChange}\n    >\n      <Button\n        style={{ backgroundColor: colors[seectedColor] }}\n        className=\"isoColorChooser\"\n      />\n    </Popover>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}