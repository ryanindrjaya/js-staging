{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from \"react\";\nimport App from \"next/app\";\nimport { Provider } from \"react-redux\";\nimport withRedux from \"next-redux-wrapper\";\nimport ThemeProvider from \"../containers/ThemeProvider\";\nimport initStore from \"../redux/store\";\nimport \"antd/dist/antd.css\";\nimport \"@glidejs/glide/dist/css/glide.core.min.css\";\nimport \"react-quill/dist/quill.snow.css\";\nimport \"react-quill/dist/quill.core.css\";\nimport \"../style/global.css\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { ToastContainer } from \"react-toastify\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport Router from \"next/router\";\nimport Middleware from \"../components/Middleware\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nclass CustomApp extends App {\n  render() {\n    const {\n      Component,\n      pageProps,\n      store\n    } = this.props;\n    return /*#__PURE__*/_jsx(Provider, {\n      store: store,\n      children: /*#__PURE__*/_jsxs(ThemeProvider, {\n        children: [/*#__PURE__*/_jsx(Middleware, {\n          children: /*#__PURE__*/_jsx(Component, _objectSpread({}, pageProps))\n        }), /*#__PURE__*/_jsx(ToastContainer, {\n          toastStyle: {\n            backgroundColor: \"black\",\n            color: \"white\"\n          }\n        })]\n      })\n    });\n  }\n\n}\n\nexport default withRedux(initStore)(CustomApp);","map":null,"metadata":{},"sourceType":"module"}