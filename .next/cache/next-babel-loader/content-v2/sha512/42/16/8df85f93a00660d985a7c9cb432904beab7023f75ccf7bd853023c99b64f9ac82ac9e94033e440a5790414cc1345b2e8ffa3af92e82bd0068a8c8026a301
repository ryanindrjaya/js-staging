{"ast":null,"code":"var mailActions = {\n  FILTER_ATTRIBUTE: 'FILTER_ATTRIBUTE',\n  SELECTED_MAIL: 'SELECTED_MAIL',\n  COMPOSE_MAIL: 'COMPOSE_MAIL',\n  REPLY_MAIL: 'REPLY_MAIL',\n  SEARCH_STRING: 'SEARCH_STRING',\n  filterAction: function filterAction(newFilterAttr) {\n    return function (dispatch, getState) {\n      var filterAttr = getState().Mails.filterAttr;\n\n      if (newFilterAttr) {\n        if (newFilterAttr.bucket) {\n          filterAttr.bucket = newFilterAttr.bucket;\n          filterAttr.tag = newFilterAttr.tag;\n        } else if (newFilterAttr.tag) {\n          filterAttr.tag = newFilterAttr.tag;\n        }\n      }\n\n      dispatch({\n        type: mailActions.FILTER_ATTRIBUTE,\n        filterAttr: filterAttr\n      });\n    };\n  },\n  selectMail: function selectMail(selectedMail) {\n    return function (dispatch, getState) {\n      var allMails = getState().Mails.allMails;\n      allMails[allMails.findIndex(function (mail) {\n        return mail.id === selectedMail;\n      })].read = true;\n      dispatch({\n        type: mailActions.SELECTED_MAIL,\n        selectedMail: selectedMail,\n        allMails: allMails\n      });\n    };\n  },\n  changeComposeMail: function changeComposeMail(composeMail) {\n    return {\n      type: mailActions.COMPOSE_MAIL,\n      composeMail: composeMail\n    };\n  },\n  changeReplyMail: function changeReplyMail(replyMail) {\n    return {\n      type: mailActions.REPLY_MAIL,\n      replyMail: replyMail\n    };\n  },\n  changeSearchString: function changeSearchString(searchString) {\n    return {\n      type: mailActions.SEARCH_STRING,\n      searchString: searchString\n    };\n  }\n};\nexport default mailActions;","map":null,"metadata":{},"sourceType":"module"}