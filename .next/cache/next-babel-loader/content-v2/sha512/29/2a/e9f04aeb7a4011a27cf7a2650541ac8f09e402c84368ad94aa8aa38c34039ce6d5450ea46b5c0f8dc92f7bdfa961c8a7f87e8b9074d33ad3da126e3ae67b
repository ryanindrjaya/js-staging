{"ast":null,"code":"import nookies from \"nookies\";\nconst cookies = nookies.get(null);\nexport async function getRelationalData(url, parameter, query) {\n  const endpoint = process.env.NEXT_PUBLIC_URL + `/${url}?filters[${parameter}][$eq]=${query}`;\n  const options = {\n    method: \"GET\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: \"Bearer \" + cookies.token\n    }\n  };\n\n  try {\n    var _res$data$;\n\n    const req = await fetch(endpoint, options);\n    const res = await req.json();\n    return (res === null || res === void 0 ? void 0 : (_res$data$ = res.data[0]) === null || _res$data$ === void 0 ? void 0 : _res$data$.id) || null;\n  } catch (err) {\n    console.log(err);\n  }\n}\nexport async function getLocationsId(locationsNamesArr = []) {\n  let endpoint = process.env.NEXT_PUBLIC_URL + \"/locations?\";\n  (locationsNamesArr === null || locationsNamesArr === void 0 ? void 0 : locationsNamesArr.forEach((locationName, index) => {\n    endpoint += `filters[name][$in][${index}]=${locationName}`;\n\n    if (index < locationsNamesArr.length - 1) {\n      endpoint += \"&\";\n    }\n  })) || [];\n  const options = {\n    method: \"GET\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: \"Bearer \" + cookies.token\n    }\n  };\n\n  try {\n    const req = await fetch(endpoint, options);\n    const res = await req.json();\n    return (res === null || res === void 0 ? void 0 : res.data.map(location => location.id)) || [];\n  } catch (err) {\n    console.log(err);\n  }\n}","map":{"version":3,"sources":["/Users/yudiananta/Development/NextJS/ERP Dev/JS Deploy/JS-Deploy/components/Form/utils/getRelationalData.js"],"names":["nookies","cookies","get","getRelationalData","url","parameter","query","endpoint","process","env","NEXT_PUBLIC_URL","options","method","headers","Authorization","token","req","fetch","res","json","data","id","err","console","log","getLocationsId","locationsNamesArr","forEach","locationName","index","length","map","location"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,SAApB;AAEA,MAAMC,OAAO,GAAGD,OAAO,CAACE,GAAR,CAAY,IAAZ,CAAhB;AACA,OAAO,eAAeC,iBAAf,CAAiCC,GAAjC,EAAsCC,SAAtC,EAAiDC,KAAjD,EAAwD;AAC7D,QAAMC,QAAQ,GAAGC,OAAO,CAACC,GAAR,CAAYC,eAAZ,GAA+B,IAAGN,GAAI,YAAWC,SAAU,UAASC,KAAM,EAA3F;AACA,QAAMK,OAAO,GAAG;AACdC,IAAAA,MAAM,EAAE,KADM;AAEdC,IAAAA,OAAO,EAAE;AACP,sBAAgB,kBADT;AAEPC,MAAAA,aAAa,EAAE,YAAYb,OAAO,CAACc;AAF5B;AAFK,GAAhB;;AAQA,MAAI;AAAA;;AACF,UAAMC,GAAG,GAAG,MAAMC,KAAK,CAACV,QAAD,EAAWI,OAAX,CAAvB;AACA,UAAMO,GAAG,GAAG,MAAMF,GAAG,CAACG,IAAJ,EAAlB;AAEA,WAAO,CAAAD,GAAG,SAAH,IAAAA,GAAG,WAAH,0BAAAA,GAAG,CAAEE,IAAL,CAAU,CAAV,2DAAcC,EAAd,KAAoB,IAA3B;AACD,GALD,CAKE,OAAOC,GAAP,EAAY;AACZC,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACD;AACF;AAED,OAAO,eAAeG,cAAf,CAA8BC,iBAAiB,GAAG,EAAlD,EAAsD;AAC3D,MAAInB,QAAQ,GAAGC,OAAO,CAACC,GAAR,CAAYC,eAAZ,GAA8B,aAA7C;AAEA,GAAAgB,iBAAiB,SAAjB,IAAAA,iBAAiB,WAAjB,YAAAA,iBAAiB,CAAEC,OAAnB,CAA2B,CAACC,YAAD,EAAeC,KAAf,KAAyB;AAClDtB,IAAAA,QAAQ,IAAK,sBAAqBsB,KAAM,KAAID,YAAa,EAAzD;;AACA,QAAIC,KAAK,GAAGH,iBAAiB,CAACI,MAAlB,GAA2B,CAAvC,EAA0C;AACxCvB,MAAAA,QAAQ,IAAI,GAAZ;AACD;AACF,GALD,MAKM,EALN;AAOA,QAAMI,OAAO,GAAG;AACdC,IAAAA,MAAM,EAAE,KADM;AAEdC,IAAAA,OAAO,EAAE;AACP,sBAAgB,kBADT;AAEPC,MAAAA,aAAa,EAAE,YAAYb,OAAO,CAACc;AAF5B;AAFK,GAAhB;;AAQA,MAAI;AACF,UAAMC,GAAG,GAAG,MAAMC,KAAK,CAACV,QAAD,EAAWI,OAAX,CAAvB;AACA,UAAMO,GAAG,GAAG,MAAMF,GAAG,CAACG,IAAJ,EAAlB;AAEA,WAAO,CAAAD,GAAG,SAAH,IAAAA,GAAG,WAAH,YAAAA,GAAG,CAAEE,IAAL,CAAUW,GAAV,CAAeC,QAAD,IAAcA,QAAQ,CAACX,EAArC,MAA4C,EAAnD;AACD,GALD,CAKE,OAAOC,GAAP,EAAY;AACZC,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACD;AACF","sourcesContent":["import nookies from \"nookies\";\n\nconst cookies = nookies.get(null);\nexport async function getRelationalData(url, parameter, query) {\n  const endpoint = process.env.NEXT_PUBLIC_URL + `/${url}?filters[${parameter}][$eq]=${query}`;\n  const options = {\n    method: \"GET\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: \"Bearer \" + cookies.token,\n    },\n  };\n\n  try {\n    const req = await fetch(endpoint, options);\n    const res = await req.json();\n\n    return res?.data[0]?.id || null;\n  } catch (err) {\n    console.log(err);\n  }\n}\n\nexport async function getLocationsId(locationsNamesArr = []) {\n  let endpoint = process.env.NEXT_PUBLIC_URL + \"/locations?\";\n\n  locationsNamesArr?.forEach((locationName, index) => {\n    endpoint += `filters[name][$in][${index}]=${locationName}`;\n    if (index < locationsNamesArr.length - 1) {\n      endpoint += \"&\";\n    }\n  }) || [];\n\n  const options = {\n    method: \"GET\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: \"Bearer \" + cookies.token,\n    },\n  };\n\n  try {\n    const req = await fetch(endpoint, options);\n    const res = await req.json();\n\n    return res?.data.map((location) => location.id) || [];\n  } catch (err) {\n    console.log(err);\n  }\n}\n"]},"metadata":{},"sourceType":"module"}