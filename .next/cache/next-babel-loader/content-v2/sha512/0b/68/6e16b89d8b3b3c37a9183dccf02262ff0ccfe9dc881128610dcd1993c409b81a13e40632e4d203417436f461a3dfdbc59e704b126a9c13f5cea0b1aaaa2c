{"ast":null,"code":"var _jsxFileName = \"/Users/yudiananta/Development/NextJS/ERP Dev/JS Deploy/JS-Deploy/components/ThemeSwitcher/ThemeSwitcher.js\",\n    _this = this;\n\nimport React from 'react';\nimport IntlMessages from '../utility/intlMessages';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar ThemeSwitcher = function ThemeSwitcher(_ref) {\n  var config = _ref.config,\n      changeTheme = _ref.changeTheme,\n      selectedId = _ref.selectedId;\n  var id = config.id,\n      label = config.label,\n      options = config.options;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"themeSwitchBlock\",\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      children: /*#__PURE__*/_jsxDEV(IntlMessages, {\n        id: label\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"themeSwitchBtnWrapper\",\n      children: options.map(function (option) {\n        var themeName = option.themeName,\n            buttonColor = option.buttonColor;\n\n        var onClick = function onClick() {\n          changeTheme(id, themeName);\n        };\n\n        var customClass = themeName === selectedId ? 'selectedTheme' : '';\n        return /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: onClick,\n          className: customClass,\n          style: {\n            backgroundColor: buttonColor\n          }\n        }, themeName, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 13\n        }, _this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, _this);\n};\n\n_c = ThemeSwitcher;\nexport default ThemeSwitcher;\n\nvar _c;\n\n$RefreshReg$(_c, \"ThemeSwitcher\");","map":{"version":3,"sources":["/Users/yudiananta/Development/NextJS/ERP Dev/JS Deploy/JS-Deploy/components/ThemeSwitcher/ThemeSwitcher.js"],"names":["React","IntlMessages","ThemeSwitcher","config","changeTheme","selectedId","id","label","options","map","option","themeName","buttonColor","onClick","customClass","backgroundColor"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,MAAyB,yBAAzB;;;AAEA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,OAAyC;AAAA,MAAtCC,MAAsC,QAAtCA,MAAsC;AAAA,MAA9BC,WAA8B,QAA9BA,WAA8B;AAAA,MAAjBC,UAAiB,QAAjBA,UAAiB;AAC7D,MAAQC,EAAR,GAA+BH,MAA/B,CAAQG,EAAR;AAAA,MAAYC,KAAZ,GAA+BJ,MAA/B,CAAYI,KAAZ;AAAA,MAAmBC,OAAnB,GAA+BL,MAA/B,CAAmBK,OAAnB;AACA,sBACE;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAA,4BACE;AAAA,6BACE,QAAC,YAAD;AAAc,QAAA,EAAE,EAAED;AAAlB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,aADF,eAIE;AAAK,MAAA,SAAS,EAAC,uBAAf;AAAA,gBACGC,OAAO,CAACC,GAAR,CAAY,UAAAC,MAAM,EAAI;AACrB,YAAQC,SAAR,GAAmCD,MAAnC,CAAQC,SAAR;AAAA,YAAmBC,WAAnB,GAAmCF,MAAnC,CAAmBE,WAAnB;;AACA,YAAMC,OAAO,GAAG,SAAVA,OAAU,GAAM;AACpBT,UAAAA,WAAW,CAACE,EAAD,EAAKK,SAAL,CAAX;AACD,SAFD;;AAGA,YAAMG,WAAW,GAAGH,SAAS,KAAKN,UAAd,GAA2B,eAA3B,GAA6C,EAAjE;AACA,4BACE;AACE,UAAA,IAAI,EAAC,QADP;AAGE,UAAA,OAAO,EAAEQ,OAHX;AAIE,UAAA,SAAS,EAAEC,WAJb;AAKE,UAAA,KAAK,EAAE;AAAEC,YAAAA,eAAe,EAAEH;AAAnB;AALT,WAEOD,SAFP;AAAA;AAAA;AAAA;AAAA,iBADF;AASD,OAfA;AADH;AAAA;AAAA;AAAA;AAAA,aAJF;AAAA;AAAA;AAAA;AAAA;AAAA,WADF;AAyBD,CA3BD;;KAAMT,a;AA6BN,eAAeA,aAAf","sourcesContent":["import React from 'react';\nimport IntlMessages from '../utility/intlMessages';\n\nconst ThemeSwitcher = ({ config, changeTheme, selectedId }) => {\n  const { id, label, options } = config;\n  return (\n    <div className=\"themeSwitchBlock\">\n      <h4>\n        <IntlMessages id={label} />\n      </h4>\n      <div className=\"themeSwitchBtnWrapper\">\n        {options.map(option => {\n          const { themeName, buttonColor } = option;\n          const onClick = () => {\n            changeTheme(id, themeName);\n          };\n          const customClass = themeName === selectedId ? 'selectedTheme' : '';\n          return (\n            <button\n              type=\"button\"\n              key={themeName}\n              onClick={onClick}\n              className={customClass}\n              style={{ backgroundColor: buttonColor }}\n            />\n          );\n        })}\n      </div>\n    </div>\n  );\n};\n\nexport default ThemeSwitcher;\n"]},"metadata":{},"sourceType":"module"}