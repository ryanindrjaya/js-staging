{"ast":null,"code":"import _Form from \"antd/lib/form\";\nimport _Select from \"antd/lib/select\";\nimport React, { useState } from \"react\";\nimport nookies from \"nookies\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default function Categories({\n  selectedCategory,\n  onSelectCategory,\n  setSubCategories,\n  setSelectedSubCategory,\n  selectedSubCategory,\n  initialValue\n}) {\n  const {\n    0: category,\n    1: setCategory\n  } = useState(selectedCategory);\n  const {\n    0: data,\n    1: setData\n  } = useState([]);\n  const cookies = nookies.get(null, \"token\");\n\n  const fetchSubCategoriesById = async id => {\n    const endpoint = process.env.NEXT_PUBLIC_URL + `/sub-categories?populate[category][filters][id][$eq]=${id}&populate=*`;\n    const options = {\n      method: \"GET\",\n      headers: {\n        Authorization: \"Bearer \" + cookies.token\n      }\n    };\n    const req = await fetch(endpoint, options);\n    const res = await req.json();\n    const listOfData = [];\n    res.data.forEach(element => {\n      if (element.attributes.category.data !== null) {\n        listOfData.push(element);\n      }\n    });\n    setSubCategories(listOfData);\n  };\n\n  const handleChangeCategory = newValue => {\n    setSelectedSubCategory(0);\n    fetchSubCategoriesById(newValue);\n    setCategory(newValue);\n    onSelectCategory(newValue);\n  };\n\n  const handleSearchCategory = newValue => {\n    if (newValue) {\n      fetchCategory(newValue, setData);\n    } else {\n      setData([]);\n    }\n  };\n\n  const options = data.map(d => /*#__PURE__*/_jsx(_Select.Option, {\n    children: d.label\n  }, d.value));\n\n  const fetchCategory = async (query, callback) => {\n    if (!query) {\n      callback([]);\n    } else {\n      try {\n        const endpoint = process.env.NEXT_PUBLIC_URL + `/categories?filters[$or][0][name][$contains]=${query}&filters[$or][1][category_id][$contains]=${query}`;\n        const options = {\n          method: \"GET\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: \"Bearer \" + cookies.token\n          }\n        };\n        const req = await fetch(endpoint, options);\n        const res = await req.json();\n\n        if (req.status == 200) {\n          const categoriesResult = res.data.map(categories => ({\n            label: `${categories.attributes.category_id} - ${categories.attributes.name}`,\n            value: categories.id\n          }));\n          callback(categoriesResult);\n        }\n      } catch (error) {\n        console.log(error);\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsx(\"div\", {\n    className: \"w-full md:w-full mb-2 md:mb-0\",\n    children: /*#__PURE__*/_jsx(_Form.Item, {\n      initialValue: initialValue,\n      name: \"category_id\",\n      rules: [{\n        required: true,\n        message: \"Kategori Produk tidak boleh kosong!\"\n      }],\n      children: /*#__PURE__*/_jsx(_Select, {\n        size: \"large\",\n        showSearch: true,\n        value: category,\n        showArrow: false,\n        placeholder: \"Pilih Kategori\",\n        onSearch: handleSearchCategory,\n        onChange: handleChangeCategory,\n        filterOption: false,\n        defaultActiveFirstOption: false,\n        children: options\n      })\n    })\n  });\n}","map":null,"metadata":{},"sourceType":"module"}