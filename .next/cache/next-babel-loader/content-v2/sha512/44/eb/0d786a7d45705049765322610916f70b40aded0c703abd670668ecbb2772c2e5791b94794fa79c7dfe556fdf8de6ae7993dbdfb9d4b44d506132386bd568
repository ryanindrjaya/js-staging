{"ast":null,"code":"import { all, takeEvery, put, call } from 'redux-saga/effects';\nimport actions from './actions';\nexport const per_page = 10;\nconst gitSearchApi = `https://api.github.com/search/repositories?per_page=${per_page}&q=`;\n\nconst onSearchReqeust = async (searcText, page = 1) => await fetch(`${gitSearchApi}${encodeURIComponent(searcText)}&page=${page}`).then(res => res.json()).then(res => res).catch(error => error);\n\nfunction* searchRequest({\n  payload\n}) {\n  const {\n    searcText,\n    page\n  } = payload;\n\n  try {\n    const searchResult = yield call(onSearchReqeust, searcText, page);\n\n    if (searchResult.items && searchResult.total_count) {\n      yield put(actions.gitSearchSuccess(searchResult.items, searchResult.total_count, page));\n    } else {\n      yield put(actions.gitSearchSuccess());\n    }\n  } catch (error) {\n    yield put(actions.gitSearchSuccess());\n  }\n}\n\nexport default function* rootSaga() {\n  yield all([takeEvery(actions.GIT_SEARCH, searchRequest)]);\n}","map":null,"metadata":{},"sourceType":"module"}